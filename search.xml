<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ViVeTool</title>
      <link href="/skydream/c2c5713a/"/>
      <url>/skydream/c2c5713a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="windows-11使用vivetool开启新功能"><a class="markdownIt-Anchor" href="#windows-11使用vivetool开启新功能"></a> Windows 11使用ViveTool开启新功能</h1><p>不过我们开启 Windows 测试版中隐藏的新功能并不需要知道全部的参数，只需要其中一个参数实现新功能的开启或者关闭，只不过在 v0.3.1 中这个语法有所调整，比如说开启某个功能，语法是：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\ViVeTool /enable /id:数字</span><br></pre></td></tr></table></figure><p>看到终端提示后，重启电脑就可以看到新功能被开启了。当然这些测试中的功能也不算稳定，如果想要禁用之前开启的功能，则需要输入：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\ViVetool /disable /id:数字</span><br></pre></td></tr></table></figure><p>至于功能对应的 ID 数字是从何而来的，我们则可以通过参数 /query 获取，比如说执行下面的这条命令，你就会得到当前系统版本下可以开启的功能 ID：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\vivetool /query</span><br></pre></td></tr></table></figure><h2 id="启用新版打开方式"><a class="markdownIt-Anchor" href="#启用新版打开方式"></a> 启用新版打开方式</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启用新版打开方式</span></span><br><span class="line">.\vivetool /enable /id:<span class="number">36354489</span></span><br><span class="line"><span class="comment">#禁用新版打开方式</span></span><br><span class="line">.\vivetool /disable /id:<span class="number">36354489</span></span><br><span class="line"><span class="comment">#以上操作完成后需重启资源管理器</span></span><br></pre></td></tr></table></figure><h2 id="绕过ab测试强开windows-11-22h2版的文件资源管理器选项卡模式"><a class="markdownIt-Anchor" href="#绕过ab测试强开windows-11-22h2版的文件资源管理器选项卡模式"></a> 绕过A/B测试强开Windows 11 22H2版的文件资源管理器选项卡模式</h2><p>使用管理员模式打开终端并进入<strong>ViveTool</strong>文件夹<br>也可以在终端设置里预先将<strong>CMD</strong>或者<strong>PowerShell</strong>设置为管理员模式<br>然后在<strong>ViveTool</strong>解压后的文件夹空白处点右键选择终端打开就是管理员模式</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#文件资源管理器标签页 粘贴一条按一次回车</span></span><br><span class="line">.\vivetool /enable /id:<span class="number">39145991</span> </span><br><span class="line">.\vivetool /enable /id:<span class="number">37634385</span> </span><br><span class="line"><span class="comment">#左侧导航窗口新布局</span></span><br><span class="line">.\vivetool /enable /id:<span class="number">39145991</span> </span><br><span class="line">.\vivetool /enable /id:<span class="number">36354489</span> </span><br><span class="line"><span class="comment">#操作完成后别忘记重启系统</span></span><br></pre></td></tr></table></figure><h2 id="解锁win10x触摸键盘"><a class="markdownIt-Anchor" href="#解锁win10x触摸键盘"></a> 解锁Win10X触摸键盘</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\vivetool /enable /id:<span class="number">20438551</span> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows建立符号链接</title>
      <link href="/skydream/ceb445ba/"/>
      <url>/skydream/ceb445ba/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="windows建立符号链接"><a class="markdownIt-Anchor" href="#windows建立符号链接"></a> Windows建立符号链接</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MKLINK [[/<span class="type">D</span>] | [/<span class="type">H</span>] | [/<span class="type">J</span>]] Link Target</span><br><span class="line"></span><br><span class="line">        /D      创建目录符号链接。默认为文件符号链接。</span><br><span class="line">        /<span class="built_in">H</span>      创建硬链接而非符号链接。</span><br><span class="line">        /J      创建目录联接。</span><br><span class="line">        Link    指定新的符号链接名称。</span><br><span class="line">        Target  指定新链接引用的路径(相对或绝对)。  </span><br></pre></td></tr></table></figure><p>可解决文件目录空格引起的问题,如下：</p><p>Windows对空格充满了深深地恶意。所以在目录前要加个引号。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;mklink /D C:\java C:<span class="string">&quot;\Program Files\Java&quot;</span></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Steam Xbox驱动安装</title>
      <link href="/skydream/86996560/"/>
      <url>/skydream/86996560/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="steam-xbox驱动安装"><a class="markdownIt-Anchor" href="#steam-xbox驱动安装"></a> steam xbox驱动安装</h1><p><strong><strong>进入以下目录，用管理员打开终端</strong><br>C:\Program Files (x86)\Common Files\Steam</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\steamxboxutil64 <span class="literal">--install</span> driver\windows11\x64</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Steam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Steam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>联想电脑的打开方式选择器被劫持的解决方案</title>
      <link href="/skydream/932c8b59/"/>
      <url>/skydream/932c8b59/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="联想电脑的打开方式选择器被劫持的解决方案"><a class="markdownIt-Anchor" href="#联想电脑的打开方式选择器被劫持的解决方案"></a> 联想电脑的打开方式选择器被劫持的解决方案</h1><p>联想应用商店加入了名为“LeASOpen”工具类插件，插件强制捆绑了所有没有指定默认打开应用的文件后缀，强制跳转到联想应用商店，并且软件内没有任何设置开关。</p><div class="note danger no-icon flat"><p><strong>垃圾联想</strong></p></div><h2 id="第一步-删除程序文件"><a class="markdownIt-Anchor" href="#第一步-删除程序文件"></a> 第一步 删除程序文件</h2><ol><li>找到位于C:\Program Files (x86)\Common Files\LeASOpen的文件夹。</li><li>删除LeASOpen文件夹。</li></ol><h2 id="第二步-清理注册表"><a class="markdownIt-Anchor" href="#第二步-清理注册表"></a> 第二步 清理注册表</h2><blockquote><p>⚠️<strong>本操作有风险，修改注册表需谨慎。</strong></p></blockquote><ol><li>使用Win+R快捷键打开运行窗口。</li><li>输入regedit并回车，打开注册表编辑器。</li><li>找到HKEY_CLASSES_ROOT\Unknown\shell\LeASOpen</li><li>删除LeASOpen整个文件夹，一定不要多删！</li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Lenovo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows程序包管理器Winget</title>
      <link href="/skydream/71d7821a/"/>
      <url>/skydream/71d7821a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="windows-程序包管理器"><a class="markdownIt-Anchor" href="#windows-程序包管理器"></a> Windows 程序包管理器</h1><p>Windows 程序包管理器是一个综合的<a href="https://docs.microsoft.com/zh-cn/windows/package-manager/#understanding-package-managers">程序包管理器解决方案</a>，由一个命令行工具和一组用于在 Windows 10 和 Windows 11 上安装应用程序的服务组成。程序包管理器是一个用于自动安装、升级、配置和使用软件的系统或工具集。 大多数程序包管理器都是设计用于发现和安装开发人员工具。理想情况下，开发人员使用程序包管理器来指定先决条件，这些先决条件适用于为给定项目开发解决方案所需的工具。 然后，程序包管理器就会按照声明性说明来安装和配置这些工具。 程序包管理器可减少准备环境所需的时间，并有助于确保在计算机上安装相同版本的程序包。</p><p>第三方程序包管理器可以利用 <a href="https://docs.microsoft.com/zh-cn/windows/package-manager/package/repository">Microsoft 社区程序包清单存储库</a>增加其软件目录的大小。</p><p>开发人员可以使用 winget 命令行工具发现、安装、升级、删除和配置特选应用程序集。 安装后，开发人员可以通过 Windows 终端、PowerShell 或命令提示符访问 winget。</p><h1 id="安装-winget"><a class="markdownIt-Anchor" href="#安装-winget"></a> 安装 winget</h1><p>默认情况下，Windows 程序包管理器 winget 命令行工具作为应用安装程序与 Windows 11 捆绑在一起。</p><ul><li><p>如果你运行的是早期版本的 Windows 并且未安装应用安装程序，则可<a href="https://www.microsoft.com/p/app-installer/9nblggh4nns1#activetab=pivot:overviewtab">从 Microsoft Store 获取应用安装程序</a>，应用安装程序包含 winget 工具的生产版本。</p></li><li><p>安装 winget 预览版 [仅限开发人员]， <a href="https://github.com/microsoft/winget-cli/releases">winget 存储库的“Release”页面</a>上的 Windows 桌面应用安装程序包。 安装此包将为你提供 WinGet 预览版客户端，但它不会从 Microsoft Store 中启用自动更新。</p></li></ul><p>⚠️：winget 命令行工具仅在 Windows 10 1709（版本 16299）或更高版本上受支持。</p><h1 id="使用-winget命令"><a class="markdownIt-Anchor" href="#使用-winget命令"></a> 使用 winget命令</h1><h2 id="设置"><a class="markdownIt-Anchor" href="#设置"></a> 设置</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget settings</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对 WinGet 源的配置。</span></span><br><span class="line"><span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;autoUpdateIntervalInMinutes&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">    <span class="comment">//正整数表示以分钟为单位的更新间隔。仅在使用源时才会检查更新。零将禁用对源的更新检查。任何其他值均无效。</span></span><br><span class="line">    <span class="comment">//禁用：0</span></span><br><span class="line">    <span class="comment">//默认值：5</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//WinGet 显示的视觉元素</span></span><br><span class="line"><span class="attr">&quot;visual&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;progressBar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rainbow&quot;</span>  </span><br><span class="line">    <span class="comment">//accent(default) retro rainbow</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//当前用户或整台机器安装包之间的选择。匹配参数是--scope, 并使用相同的值（user或machine）。</span></span><br><span class="line"><span class="attr">&quot;installBehavior&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;preferences&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//logging设置控制日志文件中的详细程度。--verbose-logs将覆盖此设置并始终创建详细日志。</span></span><br><span class="line"><span class="attr">&quot;logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;info&quot;</span></span><br><span class="line">    <span class="comment">//verbose info(default) warning error critical</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="attr">&quot;experimentalFeatures&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span>  <span class="comment">//依赖项，旨在管理依赖项的实验性功能，到目前为止，它仅显示包依赖项信息。您可以启用该功能。</span></span><br><span class="line">    <span class="attr">&quot;directMSI&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span>  <span class="comment">//直接使用 MSI API 安装 MSI 包，而不是通过 msiexec。</span></span><br><span class="line">    <span class="attr">&quot;experimentalCmd&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;experimentalArg&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 常用命令</h2><h3 id="显示已安装的软件包"><a class="markdownIt-Anchor" href="#显示已安装的软件包"></a> 显示已安装的软件包</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">winget list           </span><br><span class="line">winget list <span class="literal">--name</span> &lt;name&gt;</span><br></pre></td></tr></table></figure><h3 id="查询可用于安装的应用程序的源"><a class="markdownIt-Anchor" href="#查询可用于安装的应用程序的源"></a> 查询可用于安装的应用程序的源</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget search &lt;name&gt;</span><br></pre></td></tr></table></figure><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">winget install &lt;name&gt;</span><br><span class="line">winget install &lt;name&gt; <span class="literal">-l</span> &lt;path&gt;   <span class="comment">#要安装到的位置（如果支持）。</span></span><br></pre></td></tr></table></figure><h3 id="升级"><a class="markdownIt-Anchor" href="#升级"></a> 升级</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">winget upgrade &lt;name&gt;</span><br><span class="line">winget upgrade <span class="literal">--all</span>  <span class="comment">#升级所有应用</span></span><br></pre></td></tr></table></figure><h3 id="卸载"><a class="markdownIt-Anchor" href="#卸载"></a> 卸载</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">winget uninstall <span class="literal">--name</span> &lt;name&gt;</span><br><span class="line">winget uninstall <span class="literal">--name</span> &lt;name&gt; <span class="literal">--version</span> &lt;Version&gt;</span><br></pre></td></tr></table></figure><h2 id="winget工具的当前预览版支持以下命令"><a class="markdownIt-Anchor" href="#winget工具的当前预览版支持以下命令"></a> <strong>winget</strong>工具的当前预览版支持以下命令</h2><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/install">install</a></td><td style="text-align:left">安装指定的应用程序。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/show">show</a></td><td style="text-align:left">显示指定应用程序的详细信息。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/source">source</a></td><td style="text-align:left">添加、删除和更新<strong>winget</strong>工具访问的 Windows 包管理器存储库。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/search">search</a></td><td style="text-align:left">搜索应用程序。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/list">list</a></td><td style="text-align:left">显示已安装的软件包。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/upgrade">upgrade</a></td><td style="text-align:left">升级指定的包。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/uninstall">uninstall</a></td><td style="text-align:left">卸载指定的包。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/hash">hash</a></td><td style="text-align:left">为安装程序生成 SHA256 哈希。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/validate">validate</a></td><td style="text-align:left">验证清单文件以提交到 Windows 包管理器存储库。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/settings">settings</a></td><td style="text-align:left">打开设置。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/features">features</a></td><td style="text-align:left">显示实验功能的状态。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/export">export</a></td><td style="text-align:left">导出已安装包的列表。</td></tr><tr><td style="text-align:left"><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/import">import</a></td><td style="text-align:left">将所有软件包安装在一个文件中。</td></tr></tbody></table><h3 id="选项"><a class="markdownIt-Anchor" href="#选项"></a> 选项</h3><p><strong>winget</strong>工具支持以下选项。</p><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><strong>-v, --version</strong></td><td style="text-align:left">返回当前版本的 winget。</td></tr><tr><td style="text-align:left"><strong>–info</strong></td><td style="text-align:left">为您提供有关 winget 的所有详细信息，包括指向许可、隐私声明和配置的组策略的链接。</td></tr><tr><td style="text-align:left"><strong>-?, --help</strong></td><td style="text-align:left">显示 winget 的额外帮助。</td></tr></tbody></table><blockquote><p>有关详细信息，请参阅<a href="https://docs.microsoft.com/zh-cn/windows/package-manager/winget/">使用 winget 工具安装和管理应用程序</a>。</p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Winget </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下的包管理器Scoop</title>
      <link href="/skydream/682307b7/"/>
      <url>/skydream/682307b7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="scoop"><a class="markdownIt-Anchor" href="#scoop"></a> Scoop</h1><p>Scoop是Windows的命令行安装程序，是一个强大的包管理工具。可以在github上找到其项目的相关信息，➡️<a href="https://github.com/lukesampson/scoop">Scoop</a>。</p><p>Scoop可以很方便的管理开发软件，配置开发环境，只需要在命令行输入简单的一串命令即可安装你想要的软件，不需要手动配置相关参数，scoop会把软件下载、安装、配置等步骤全部帮你做完。</p><h1 id="scoop安装"><a class="markdownIt-Anchor" href="#scoop安装"></a> Scoop安装</h1><h2 id="环境需求"><a class="markdownIt-Anchor" href="#环境需求"></a> 环境需求</h2><ul><li>Windows 7 SP1+ / Windows Server 2008+</li><li><a href="https://aka.ms/wmf5download">PowerShell 5</a>（或更高版本，包括<a href="https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-windows?view=powershell-6">PowerShell Core</a>）和<a href="https://www.microsoft.com/net/download">.NET Framework 4.5</a>（或更高版本）</li><li>必须为您的用户帐户启用 PowerShell，例如<code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</code></li></ul><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p>这里直接自定义安装，方便后续使用，打开终端开始。</p><p>⚠️️ 注意：请在 Powershell 中运行下面的命令。</p><h3 id="用户安装的程序和scoop本身安装到自定义目录scoop"><a class="markdownIt-Anchor" href="#用户安装的程序和scoop本身安装到自定义目录scoop"></a> 用户安装的程序和scoop本身安装到自定义目录<code>Scoop</code></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:SCOOP</span>=<span class="string">&#x27;D:\Programs\Scoop\ScoopApps&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP&#x27;</span>, <span class="variable">$env:SCOOP</span>, <span class="string">&#x27;User&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="全局安装的程序global安装到自定义目录scoop_global"><a class="markdownIt-Anchor" href="#全局安装的程序global安装到自定义目录scoop_global"></a> 全局安装的程序（–global）安装到自定义目录<code>SCOOP_GLOBAL</code></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:SCOOP_GLOBAL</span>=<span class="string">&#x27;D:\Programs\Scoop\GlobalScoopApps&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP_GLOBAL&#x27;</span>, <span class="variable">$env:SCOOP_GLOBAL</span>, <span class="string">&#x27;Machine&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="下载内容存储到自定义目录scoop_cache"><a class="markdownIt-Anchor" href="#下载内容存储到自定义目录scoop_cache"></a> 下载内容存储到自定义目录<code>SCOOP_CACHE</code></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:SCOOP_CACHE</span>=<span class="string">&#x27;D:\Programs\Scoop\ScoopCache&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP_CACHE&#x27;</span>, <span class="variable">$env:SCOOP_CACHE</span>, <span class="string">&#x27;Machine&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="搜索和检查期间使用-github-api-令牌scoop_checkver_token"><a class="markdownIt-Anchor" href="#搜索和检查期间使用-github-api-令牌scoop_checkver_token"></a> 搜索和检查期间使用 GitHub API 令牌<code>SCOOP_CHECKVER_TOKEN</code></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env:SCOOP_CHECKVER_TOKEN</span>=<span class="string">&#x27;&lt;paste-token-here&gt;&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP_CHECKVER_TOKEN&#x27;</span>, <span class="variable">$env:SCOOP_CHECKVER_TOKEN</span>, <span class="string">&#x27;Machine&#x27;</span>)</span><br><span class="line"><span class="comment"># search for an app</span></span><br></pre></td></tr></table></figure><p>上面运行的结果为添加<strong>环境变量</strong>，如果不想运行命令行，直接添加环境变量也可。</p><h3 id="从-powershell-运行以下命令进行安装"><a class="markdownIt-Anchor" href="#从-powershell-运行以下命令进行安装"></a> 从 PowerShell 运行以下命令进行安装</h3><p>如果没有进行以上配置，scoop 将安装到其默认位置 ( <code>C:\Users\&lt;user&gt;\scoop</code>)。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="string">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># or shorter</span></span><br><span class="line"><span class="built_in">iwr</span> <span class="literal">-useb</span> get.scoop.sh | <span class="built_in">iex</span></span><br></pre></td></tr></table></figure><p>查看是否安装成功。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop help</span><br></pre></td></tr></table></figure><h1 id="scoop简单使用"><a class="markdownIt-Anchor" href="#scoop简单使用"></a> Scoop简单使用</h1><h2 id="添加软件源-bucket"><a class="markdownIt-Anchor" href="#添加软件源-bucket"></a> 添加软件源 Bucket</h2><p>Scoop 可安装的软件信息存储在 Bucket中，也可以称其为软件源。Scoop 默认的 Bucket 为 <code>main</code> ；官方维护的另一个 Bucket 为 <code>extras</code>，我们需要手动添加。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bucket的用法</span></span><br><span class="line">scoop bucket add|list|known|<span class="built_in">rm</span> [&lt;<span class="type">args</span>&gt;]</span><br><span class="line"></span><br><span class="line">scoop bucket add main  <span class="comment"># 默认安装的软件源</span></span><br><span class="line">scoop bucket add extras</span><br><span class="line">scoop bucket add games</span><br><span class="line">scoop bucket add nerd<span class="literal">-fonts</span></span><br><span class="line">scoop bucket add nirsoft</span><br><span class="line">scoop bucket add java</span><br><span class="line">scoop bucket add nonportable</span><br><span class="line">scoop bucket add php</span><br><span class="line">scoop bucket add versions</span><br></pre></td></tr></table></figure><p>我们也可以添加第三方 bucket ，示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop bucket add dorado https://github.com/h404bi/dorado </span><br></pre></td></tr></table></figure><p>并且明确指定安装此 bucket（软件源）中的的程序：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scoop install dorado/&lt;app_name&gt;</span><br><span class="line"><span class="comment"># 下面是dorado中特有的软件，测试其是否添加成功</span></span><br><span class="line">scoop search trash</span><br></pre></td></tr></table></figure><h2 id="安装aria2以加快scoop下载软件的速度"><a class="markdownIt-Anchor" href="#安装aria2以加快scoop下载软件的速度"></a> 安装aria2以加快scoop下载软件的速度</h2><p>Scoop可以利用aria2来使用多连接下载。通过Scoop 安装后，可用于以后的所有下载。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install aria2</span><br></pre></td></tr></table></figure><p>如果你在使用aria2下载的时候遇到了问题，可以关闭aria2下载功能。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop config aria2<span class="literal">-enabled</span> false</span><br></pre></td></tr></table></figure><p>如果下载速度比较慢，而且你有代理的话，也可以让scoop通过代理来下载软件。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop config proxy localhost:<span class="number">10800</span></span><br></pre></td></tr></table></figure><h2 id="scoop-常用命令"><a class="markdownIt-Anchor" href="#scoop-常用命令"></a> Scoop 常用命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">scoop help <span class="comment">#查看帮助</span></span><br><span class="line">scoop help &lt;某个命令&gt; <span class="comment"># 具体查看某个命令的帮助</span></span><br><span class="line"></span><br><span class="line">scoop install &lt;app&gt;   <span class="comment"># 安装 APP</span></span><br><span class="line">scoop uinstall &lt;app&gt;  <span class="comment"># 卸载 APP</span></span><br><span class="line"></span><br><span class="line">scoop list  <span class="comment"># 列出已安装的 APP</span></span><br><span class="line">scoop search <span class="comment"># 搜索 APP</span></span><br><span class="line">scoop status <span class="comment"># 检查哪些软件有更新</span></span><br><span class="line"></span><br><span class="line">scoop update <span class="comment"># 更新 Scoop 自身</span></span><br><span class="line">scoop update appName1 appName2 <span class="comment"># 更新某些app</span></span><br><span class="line">scoop update *  <span class="comment"># 更新所有app</span></span><br><span class="line"></span><br><span class="line">scoop bucket known <span class="comment">#通过此命令列出已知所有 bucket（软件源）</span></span><br><span class="line">scoop bucket add bucketName <span class="comment">#添加某个 bucket</span></span><br><span class="line"></span><br><span class="line">scoop cache <span class="built_in">rm</span> &lt;app&gt; <span class="comment"># 移除某个app的缓存</span></span><br></pre></td></tr></table></figure><h2 id="安装卸载软件"><a class="markdownIt-Anchor" href="#安装卸载软件"></a> 安装卸载软件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装之前，通过 search 搜索 APP, 确定软件名称</span></span><br><span class="line">scoop search  xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 APP</span></span><br><span class="line">scoop install AppName</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装特定版本的 APP；语法 AppName@[version]，示例</span></span><br><span class="line">scoop install git@<span class="number">2.36</span>.<span class="number">0</span>.windows.<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载 APP </span></span><br><span class="line">scoop uninstall AppName <span class="comment">#卸载 APP</span></span><br></pre></td></tr></table></figure><h2 id="更新软件"><a class="markdownIt-Anchor" href="#更新软件"></a> 更新软件</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">scoop update <span class="comment"># 更新 Scoop 自身</span></span><br><span class="line"></span><br><span class="line">scoop update appName1 appName2 <span class="comment"># 更新某些app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新所有 app （可能需要在apps目录下操作）</span></span><br><span class="line">scoop update *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止某程序更新</span></span><br><span class="line">scoop hold &lt;app&gt;</span><br><span class="line"><span class="comment"># 允许某程序更新</span></span><br><span class="line">scoop unhold &lt;app&gt;</span><br></pre></td></tr></table></figure><h2 id="清除缓存与旧版本"><a class="markdownIt-Anchor" href="#清除缓存与旧版本"></a> 清除缓存与旧版本</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有已下载的缓存信息</span></span><br><span class="line">scoop cache show</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除指定程序的下载缓存</span></span><br><span class="line">scoop cache <span class="built_in">rm</span> &lt;app&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除所有缓存</span></span><br><span class="line">scoop cache <span class="built_in">rm</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除某软件的旧版本</span></span><br><span class="line">scoop cleanup &lt;app&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除全局安装的某软件的旧版本</span></span><br><span class="line">scoop cleanup &lt;app&gt; <span class="literal">-g</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除过期的下载缓存</span></span><br><span class="line">scoop cleanup &lt;app&gt; <span class="literal">-k</span></span><br></pre></td></tr></table></figure><h2 id="别名"><a class="markdownIt-Anchor" href="#别名"></a> 别名</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可用操作</span></span><br><span class="line">scoop alias add|list|<span class="built_in">rm</span> [&lt;<span class="type">args</span>&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加别名，格式：</span></span><br><span class="line">scoop alias add &lt;name&gt; &lt;command&gt; &lt;description&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例：</span></span><br><span class="line">scoop alias add st <span class="string">&#x27;scoop status&#x27;</span> <span class="string">&#x27;检查更新&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查已添加的别名</span></span><br><span class="line">scoop alias list <span class="literal">-v</span></span><br><span class="line"></span><br><span class="line">Name Command      Summary</span><br><span class="line"><span class="literal">----</span> <span class="literal">-------</span>      <span class="literal">-------</span></span><br><span class="line">st   scoop status 检查更新</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试已添加的别名 st</span></span><br><span class="line">scoop st</span><br></pre></td></tr></table></figure><h2 id="在同一程序的不同版本之间切换"><a class="markdownIt-Anchor" href="#在同一程序的不同版本之间切换"></a> 在同一程序的不同版本之间切换</h2><p>使用命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop reset [<span class="type">app</span>]<span class="selector-tag">@</span>[<span class="type">version</span>]</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scoop reset idea<span class="literal">-ultimate-eap</span>@<span class="number">201.6668</span>.<span class="number">13</span></span><br><span class="line"></span><br><span class="line">scoop reset idea<span class="literal">-ultimate-eap</span>@<span class="number">201.6073</span>.<span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到最新版本</span></span><br><span class="line">scoop reset idea<span class="literal">-ultimate-eap</span></span><br></pre></td></tr></table></figure><p>对应版本的程序需要已经安装于本地系统中；所以在你清除某个软件的旧版本时考虑一下自己是否还会再次使用到此旧版本。</p><p>另外 idea-ultimate-eap 切换过程可能需要更长时间。</p><h2 id="其它命令"><a class="markdownIt-Anchor" href="#其它命令"></a> 其它命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示某个app的信息</span></span><br><span class="line">scoop info &lt;app&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在浏览器中打开某app的主页</span></span><br><span class="line">scoop home &lt;app&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比如</span></span><br><span class="line">scoop home git</span><br></pre></td></tr></table></figure><h2 id="安装和切换pythonjava的版本"><a class="markdownIt-Anchor" href="#安装和切换pythonjava的版本"></a> 安装和切换Python，java的版本</h2><p>这里需要使用 <code>scoop reset</code> 它的作用是：重置一个应用程序来解决冲突。</p><p>命令格式为：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop reset &lt;Python&gt;[<span class="selector-tag">@</span>&lt;<span class="type">version</span>&gt;]</span><br></pre></td></tr></table></figure><p>安装和切换不同的 Python 版本：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> scoop bucket add versions <span class="comment"># add the &#x27;versions&#x27; bucket if you haven&#x27;t already</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span> scoop install python27 python</span><br><span class="line">python <span class="literal">--version</span> <span class="comment"># -&gt; Python 3.6.2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># switch to python 2.7.x</span></span><br><span class="line"><span class="variable">$</span> scoop reset python27</span><br><span class="line">python <span class="literal">--version</span> <span class="comment"># -&gt; Python 2.7.13</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># switch back (to 3.x)</span></span><br><span class="line"><span class="variable">$</span> scoop reset python</span><br><span class="line">python <span class="literal">--version</span> <span class="comment"># -&gt; Python 3.6.2</span></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python自动复制文件</title>
      <link href="/skydream/23376/"/>
      <url>/skydream/23376/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近在使用<a href="https://www.microsoft.com/zh-cn/p/backiee-wallpaper-studio-10/9wzdncrfhzcd?activetab=pivot:overviewtab">backiee</a>，可以自动设置每日壁纸，但是壁纸无法自动保存，所以尝试使用Python脚本解决。</p><h2 id="python脚本"><a class="markdownIt-Anchor" href="#python脚本"></a> Python脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line">address = <span class="string">&#x27;C:/Users/sky/AppData/Local/Packages/35010GOOD2CREATE.LIVELOCKTHEMES_cxjy25q2av1xg/LocalState/&#x27;</span>  <span class="comment"># 需要遍历的目录</span></span><br><span class="line">dest = <span class="string">&#x27;D:/Users/sky/Pictures/Saved Pictures&#x27;</span>  <span class="comment"># 目标位置</span></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> folder, sub_folders, files <span class="keyword">in</span> os.walk(address):  <span class="comment"># 遍历指定目录</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> files:  <span class="comment"># 如果文件列表不是空的</span></span><br><span class="line">        <span class="comment">#print(&#x27;the files in &#x27; + folder + &#x27;:&#x27;)</span></span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            <span class="comment"># print(file)</span></span><br><span class="line">            <span class="keyword">if</span> file.endswith(<span class="string">&#x27;.jpg&#x27;</span>):  <span class="comment"># 查找以jpg为后缀的文件</span></span><br><span class="line">                n += <span class="number">1</span>  <span class="comment"># 计数</span></span><br><span class="line">                source = os.path.join(folder, file)  <span class="comment"># 原文件路径名</span></span><br><span class="line">                destination = os.path.join(dest, file)  <span class="comment"># 目标文件路径名</span></span><br><span class="line">                new_dest = shutil.copy(source, destination)  <span class="comment"># 拷贝</span></span><br><span class="line">                <span class="comment">#print(&#x27;source is &#x27; + source)</span></span><br><span class="line">                <span class="comment">#print(&#x27;destination is &#x27; + destination)</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;the copy : &#x27;</span> + new_dest)  <span class="comment"># 拷贝文件的路径</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;the number of copies = &#x27;</span>, n)  <span class="comment"># 总拷贝数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;over!&#x27;</span>) </span><br></pre></td></tr></table></figure><h2 id="windows自动任务"><a class="markdownIt-Anchor" href="#windows自动任务"></a> Windows自动任务</h2><p>创建Windows自动任务</p><p><img src="/skydream/23376/pythonCopy01.png" style="zoom: 50%;"></p><p>注意：直接设置启动<code>.py</code>脚本Windows会弹出窗口，可以改为<code>.pyw</code>即可避免弹窗。</p><p><img src="/skydream/23376/pythonCopy02.png" style="zoom:50%;"></p><hr>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python生成密码字典</title>
      <link href="/skydream/43176/"/>
      <url>/skydream/43176/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>无意中看到这篇博客<a href="https://www.cnblogs.com/lifengfneg/p/5992649.html">📰</a>，觉得很有意思，学习尝试一下😍</p><blockquote><p>首先声明：本文只用于技术交流，请勿用于非法用途。请严格遵循相关法律法规。</p></blockquote><p>暴力破解破解成功率的最大因素就是字典的好坏，如果没有一个趁手的字典，再怎么努力也没用。</p><h1 id="密码字典"><a class="markdownIt-Anchor" href="#密码字典"></a> 密码字典</h1><p>密码字典，里面要包含大家最常用的密码，还有根据大家的习惯设置相应的密码。一般去网上找都可以找到。</p><ul><li>这里有个库可以试试👉<a href="https://github.com/rootphantomer/Blasting_dictionary">Blasting_dictionary</a></li><li>密码字典–链接: <a href="https://pan.baidu.com/s/13qI3m69DbdDdEXGRHYgGwQ">百度云</a> 提取码: 6db2</li></ul><p>这里参考  <a href="https://www.cnblogs.com/lifengfneg/p/5992649.html">📰</a>，用python自己动手操作生成密码字典     。原理很简单，数字、字母、特殊符号组合，很多人不会随便用自己都记不住的数字组合，一般都是用出生的年月日或者用年月日与其他方式组合。</p><h2 id="储存数组"><a class="markdownIt-Anchor" href="#储存数组"></a> 储存数组</h2><p>存储最常用密码组，特殊符号。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#常用特殊字符</span></span><br><span class="line">MOST_SIN = [<span class="string">&quot;!&quot;</span>,<span class="string">&quot;@&quot;</span>,<span class="string">&quot;#&quot;</span>,<span class="string">&quot;_&quot;</span>,<span class="string">&quot;~&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;$&quot;</span>,<span class="string">&quot;.&quot;</span>,<span class="string">&quot;,&quot;</span>]</span><br><span class="line"><span class="comment">#最常用的密码</span></span><br><span class="line">MOST_USE = [<span class="string">&quot;11111111&quot;</span>,<span class="string">&quot;00000000&quot;</span>,<span class="string">&quot;11223344&quot;</span>,<span class="string">&quot;0123456789&quot;</span>,<span class="string">&quot;000000&quot;</span>,<span class="string">&quot;00000000&quot;</span>,<span class="string">&quot;0123456789&quot;</span>,<span class="string">&quot;101010&quot;</span>,<span class="string">&quot;1111111&quot;</span>,<span class="string">&quot;11111111&quot;</span>,<span class="string">&quot;1111111111&quot;</span>,<span class="string">&quot;111222&quot;</span>,<span class="string">&quot;112233&quot;</span>,<span class="string">&quot;11223344&quot;</span>,<span class="string">&quot;121212&quot;</span>,<span class="string">&quot;12121212&quot;</span>,<span class="string">&quot;12344321&quot;</span>,<span class="string">&quot;12345&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="string">&quot;1234567&quot;</span>,<span class="string">&quot;12345678&quot;</span>,<span class="string">&quot;123456789&quot;</span>,<span class="string">&quot;1234567890&quot;</span>,<span class="string">&quot;1234qwer&quot;</span>,<span class="string">&quot;1qaz2wsx&quot;</span>,<span class="string">&quot;22222222&quot;</span>,<span class="string">&quot;31415926&quot;</span>,<span class="string">&quot;55555555&quot;</span>,<span class="string">&quot;7758521&quot;</span>,<span class="string">&quot;7758258&quot;</span>,<span class="string">&quot;77777777&quot;</span>,<span class="string">&quot;88888888&quot;</span>,<span class="string">&quot;99999999&quot;</span>,<span class="string">&quot;999999999&quot;</span>,<span class="string">&quot;abcd1234&quot;</span>,<span class="string">&quot;abcdefg&quot;</span>,<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;love&quot;</span>,<span class="string">&quot;china&quot;</span>,<span class="string">&quot;6868&quot;</span>,<span class="string">&quot;fuck&quot;</span>,<span class="string">&quot;1314&quot;</span>,<span class="string">&quot;1111&quot;</span>,<span class="string">&quot;8888&quot;</span>,<span class="string">&quot;88888&quot;</span>,<span class="string">&quot;888888&quot;</span>,<span class="string">&quot;666666&quot;</span>,<span class="string">&quot;6666&quot;</span>]</span><br></pre></td></tr></table></figure><p>存储生日的年、月、日。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#常用年份</span></span><br><span class="line">YEAR =[<span class="string">&quot;1970&quot;</span>,<span class="string">&quot;1971&quot;</span>,<span class="string">&quot;1972&quot;</span>,<span class="string">&quot;1973&quot;</span>,<span class="string">&quot;1974&quot;</span>,<span class="string">&quot;1975&quot;</span>,<span class="string">&quot;1976&quot;</span>,<span class="string">&quot;1977&quot;</span>,<span class="string">&quot;1978&quot;</span>,<span class="string">&quot;1979&quot;</span>,<span class="string">&quot;1980&quot;</span>,<span class="string">&quot;1981&quot;</span>,<span class="string">&quot;1982&quot;</span>,<span class="string">&quot;1983&quot;</span>,<span class="string">&quot;1984&quot;</span>,<span class="string">&quot;1985&quot;</span>,<span class="string">&quot;1986&quot;</span>,<span class="string">&quot;1987&quot;</span>,<span class="string">&quot;1988&quot;</span>,<span class="string">&quot;1989&quot;</span>,<span class="string">&quot;1990&quot;</span>,<span class="string">&quot;1991&quot;</span>,<span class="string">&quot;1992&quot;</span>,<span class="string">&quot;1993&quot;</span>,<span class="string">&quot;1994&quot;</span>,<span class="string">&quot;1995&quot;</span>,<span class="string">&quot;1996&quot;</span>,<span class="string">&quot;1997&quot;</span>,<span class="string">&quot;1998&quot;</span>,<span class="string">&quot;1999&quot;</span>,<span class="string">&quot;2000&quot;</span>,<span class="string">&quot;2001&quot;</span>,<span class="string">&quot;2002&quot;</span>,<span class="string">&quot;2003&quot;</span>,<span class="string">&quot;2004&quot;</span>,<span class="string">&quot;2005&quot;</span>,<span class="string">&quot;2006&quot;</span>,<span class="string">&quot;2007&quot;</span>,<span class="string">&quot;2008&quot;</span>,<span class="string">&quot;2009&quot;</span>,<span class="string">&quot;2001&quot;</span>,<span class="string">&quot;2002&quot;</span>,<span class="string">&quot;2003&quot;</span>,<span class="string">&quot;2004&quot;</span>,<span class="string">&quot;2005&quot;</span>,<span class="string">&quot;2006&quot;</span>,<span class="string">&quot;2007&quot;</span>,<span class="string">&quot;2008&quot;</span>,<span class="string">&quot;2009&quot;</span>,<span class="string">&quot;2010&quot;</span>,<span class="string">&quot;2011&quot;</span>,<span class="string">&quot;2012&quot;</span>,<span class="string">&quot;2013&quot;</span>,<span class="string">&quot;2014&quot;</span>,<span class="string">&quot;2015&quot;</span>,<span class="string">&quot;2016&quot;</span>,<span class="string">&quot;2017&quot;</span>,<span class="string">&quot;2018&quot;</span>,<span class="string">&quot;2019&quot;</span>,<span class="string">&quot;2020&quot;</span>,<span class="string">&quot;2021&quot;</span>,<span class="string">&quot;2022&quot;</span>,<span class="string">&quot;2023&quot;</span>,<span class="string">&quot;2024&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#常用月份</span></span><br><span class="line">MONTH = [<span class="string">&quot;01&quot;</span>,<span class="string">&quot;02&quot;</span>,<span class="string">&quot;03&quot;</span>,<span class="string">&quot;04&quot;</span>,<span class="string">&quot;05&quot;</span>,<span class="string">&quot;06&quot;</span>,<span class="string">&quot;07&quot;</span>,<span class="string">&quot;08&quot;</span>,<span class="string">&quot;09&quot;</span>,<span class="string">&quot;10&quot;</span>,<span class="string">&quot;11&quot;</span>,<span class="string">&quot;12&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#常用日期</span></span><br><span class="line">DAY = [<span class="string">&quot;01&quot;</span>,<span class="string">&quot;02&quot;</span>,<span class="string">&quot;03&quot;</span>,<span class="string">&quot;04&quot;</span>,<span class="string">&quot;05&quot;</span>,<span class="string">&quot;06&quot;</span>,<span class="string">&quot;07&quot;</span>,<span class="string">&quot;08&quot;</span>,<span class="string">&quot;09&quot;</span>,<span class="string">&quot;10&quot;</span>,<span class="string">&quot;11&quot;</span>,<span class="string">&quot;12&quot;</span>,<span class="string">&quot;13&quot;</span>,<span class="string">&quot;14&quot;</span>,<span class="string">&quot;15&quot;</span>,<span class="string">&quot;16&quot;</span>,<span class="string">&quot;17&quot;</span>,<span class="string">&quot;18&quot;</span>,<span class="string">&quot;19&quot;</span>,<span class="string">&quot;20&quot;</span>,<span class="string">&quot;21&quot;</span>,<span class="string">&quot;22&quot;</span>,<span class="string">&quot;23&quot;</span>,<span class="string">&quot;24&quot;</span>,<span class="string">&quot;25&quot;</span>,<span class="string">&quot;26&quot;</span>,<span class="string">&quot;27&quot;</span>,<span class="string">&quot;28&quot;</span>,<span class="string">&quot;29&quot;</span>,<span class="string">&quot;30&quot;</span>,<span class="string">&quot;31&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>]</span><br></pre></td></tr></table></figure><p>存储名字的姓，名的拼音</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#常用姓氏</span></span><br><span class="line">LASTNAME = [<span class="string">&quot;li&quot;</span>,<span class="string">&quot;ma&quot;</span>,<span class="string">&quot;wu&quot;</span>,<span class="string">&quot;xu&quot;</span>,<span class="string">&quot;hu&quot;</span>,<span class="string">&quot;yu&quot;</span>,<span class="string">&quot;he&quot;</span>,<span class="string">&quot;liu&quot;</span>,<span class="string">&quot;sun&quot;</span>,<span class="string">&quot;gao&quot;</span>,<span class="string">&quot;luo&quot;</span>,<span class="string">&quot;cai&quot;</span>,<span class="string">&quot;guo&quot;</span>,<span class="string">&quot;zhu&quot;</span>,<span class="string">&quot;wang&quot;</span>,<span class="string">&quot;zhao&quot;</span>,<span class="string">&quot;yang&quot;</span>,<span class="string">&quot;zhou&quot;</span>,<span class="string">&quot;song&quot;</span>,<span class="string">&quot;meng&quot;</span>,<span class="string">&quot;deng&quot;</span>,<span class="string">&quot;zhang&quot;</span>,<span class="string">&quot;huang&quot;</span>,<span class="string">&quot;liang&quot;</span>,<span class="string">&quot;qian&quot;</span>,<span class="string">&quot;zheng&quot;</span>,<span class="string">&quot;feng&quot;</span>,<span class="string">&quot;chen&quot;</span>,<span class="string">&quot;chu&quot;</span>,<span class="string">&quot;shen&quot;</span>,<span class="string">&quot;han&quot;</span>,<span class="string">&quot;kong&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#常用首字母</span></span><br><span class="line">FLETTER = [<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>,<span class="string">&quot;f&quot;</span>,<span class="string">&quot;g&quot;</span>,<span class="string">&quot;h&quot;</span>,<span class="string">&quot;j&quot;</span>,<span class="string">&quot;k&quot;</span>,<span class="string">&quot;l&quot;</span>,<span class="string">&quot;m&quot;</span>,<span class="string">&quot;n&quot;</span>,<span class="string">&quot;p&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;s&quot;</span>,<span class="string">&quot;t&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#包含名字的拼音</span></span><br><span class="line">nameList = []</span><br><span class="line"></span><br><span class="line">B_SUB = [<span class="string">&quot;bo&quot;</span>,<span class="string">&quot;bi&quot;</span>,<span class="string">&quot;bai&quot;</span>,<span class="string">&quot;bei&quot;</span>,<span class="string">&quot;bao&quot;</span>,<span class="string">&quot;ban&quot;</span>,<span class="string">&quot;ben&quot;</span>,<span class="string">&quot;bin&quot;</span>,<span class="string">&quot;bang&quot;</span>,<span class="string">&quot;bing&quot;</span>,<span class="string">&quot;biao&quot;</span>]</span><br><span class="line">nameList.append(B_SUB)</span><br><span class="line"></span><br><span class="line">C_SUB = [<span class="string">&quot;ci&quot;</span>,<span class="string">&quot;cai&quot;</span>,<span class="string">&quot;can&quot;</span>,<span class="string">&quot;cen&quot;</span>,<span class="string">&quot;cun&quot;</span>,<span class="string">&quot;ceng&quot;</span>,<span class="string">&quot;cong&quot;</span>,<span class="string">&quot;cao&quot;</span>]</span><br><span class="line">nameList.append(C_SUB)</span><br><span class="line"></span><br><span class="line">D_SUB = [<span class="string">&quot;de&quot;</span>,<span class="string">&quot;di&quot;</span>,<span class="string">&quot;du&quot;</span>,<span class="string">&quot;dai&quot;</span>,<span class="string">&quot;dao&quot;</span>,<span class="string">&quot;dan&quot;</span>,<span class="string">&quot;deng&quot;</span>,<span class="string">&quot;ding&quot;</span>,<span class="string">&quot;dang&quot;</span>,<span class="string">&quot;dong&quot;</span>]</span><br><span class="line">nameList.append(D_SUB)</span><br><span class="line"></span><br><span class="line">F_SUB = [<span class="string">&quot;fa&quot;</span>,<span class="string">&quot;fu&quot;</span>,<span class="string">&quot;fei&quot;</span>,<span class="string">&quot;fan&quot;</span>,<span class="string">&quot;fen&quot;</span>,<span class="string">&quot;fang&quot;</span>,<span class="string">&quot;feng&quot;</span>,<span class="string">&quot;fou&quot;</span>]</span><br><span class="line">nameList.append(F_SUB)</span><br><span class="line"></span><br><span class="line">G_SUB = [<span class="string">&quot;gu&quot;</span>,<span class="string">&quot;gui&quot;</span>,<span class="string">&quot;gao&quot;</span>,<span class="string">&quot;gai&quot;</span>,<span class="string">&quot;gan&quot;</span>,<span class="string">&quot;gen&quot;</span>,<span class="string">&quot;guo&quot;</span>,<span class="string">&quot;gang&quot;</span>,<span class="string">&quot;geng&quot;</span>,<span class="string">&quot;guan&quot;</span>,<span class="string">&quot;guang&quot;</span>]</span><br><span class="line">nameList.append(G_SUB)</span><br><span class="line"></span><br><span class="line">H_SUB = [<span class="string">&quot;hu&quot;</span>,<span class="string">&quot;hui&quot;</span>,<span class="string">&quot;hao&quot;</span>,<span class="string">&quot;han&quot;</span>,<span class="string">&quot;hen&quot;</span>,<span class="string">&quot;huo&quot;</span>,<span class="string">&quot;hang&quot;</span>,<span class="string">&quot;heng&quot;</span>,<span class="string">&quot;huan&quot;</span>,<span class="string">&quot;huang&quot;</span>,<span class="string">&quot;hun&quot;</span>]</span><br><span class="line">nameList.append(H_SUB)</span><br><span class="line"></span><br><span class="line">J_SUB = [<span class="string">&quot;ji&quot;</span>,<span class="string">&quot;ju&quot;</span>,<span class="string">&quot;jiu&quot;</span>,<span class="string">&quot;jie&quot;</span>,<span class="string">&quot;jin&quot;</span>,<span class="string">&quot;jun&quot;</span>,<span class="string">&quot;jue&quot;</span>,<span class="string">&quot;jing&quot;</span>,<span class="string">&quot;ji&quot;</span>,<span class="string">&quot;jia&quot;</span>,<span class="string">&quot;jiao&quot;</span>,<span class="string">&quot;jian&quot;</span>,<span class="string">&quot;juan&quot;</span>,<span class="string">&quot;jiang&quot;</span>]</span><br><span class="line">nameList.append(J_SUB)</span><br><span class="line"></span><br><span class="line">K_SUB = [<span class="string">&quot;kai&quot;</span>,<span class="string">&quot;kui&quot;</span>,<span class="string">&quot;kan&quot;</span>,<span class="string">&quot;ken&quot;</span>,<span class="string">&quot;kun&quot;</span>,<span class="string">&quot;kuo&quot;</span>,<span class="string">&quot;kang&quot;</span>,<span class="string">&quot;keng&quot;</span>,<span class="string">&quot;kong&quot;</span>,<span class="string">&quot;kuan&quot;</span>,<span class="string">&quot;kuang&quot;</span>]</span><br><span class="line">nameList.append(K_SUB)</span><br><span class="line"></span><br><span class="line">L_SUB = [<span class="string">&quot;le&quot;</span>,<span class="string">&quot;li&quot;</span>,<span class="string">&quot;lai&quot;</span>,<span class="string">&quot;lu&quot;</span>,<span class="string">&quot;lei&quot;</span>,<span class="string">&quot;lie&quot;</span>,<span class="string">&quot;lan&quot;</span>,<span class="string">&quot;lin&quot;</span>,<span class="string">&quot;lun&quot;</span>,<span class="string">&quot;lang&quot;</span>,<span class="string">&quot;ling&quot;</span>,<span class="string">&quot;long&quot;</span>,<span class="string">&quot;liao&quot;</span>,<span class="string">&quot;lian&quot;</span>,<span class="string">&quot;luan&quot;</span>]</span><br><span class="line">nameList.append(L_SUB)</span><br><span class="line"></span><br><span class="line">M_SUB = [<span class="string">&quot;mi&quot;</span>,<span class="string">&quot;mu&quot;</span>,<span class="string">&quot;mai&quot;</span>,<span class="string">&quot;man&quot;</span>,<span class="string">&quot;mei&quot;</span>,<span class="string">&quot;mao&quot;</span>,<span class="string">&quot;miu&quot;</span>,<span class="string">&quot;min&quot;</span>,<span class="string">&quot;mang&quot;</span>,<span class="string">&quot;meng&quot;</span>,<span class="string">&quot;ming&quot;</span>,<span class="string">&quot;miao&quot;</span>,<span class="string">&quot;mian&quot;</span>]</span><br><span class="line">nameList.append(M_SUB)</span><br><span class="line"></span><br><span class="line">N_SUB = [<span class="string">&quot;na&quot;</span>,<span class="string">&quot;ni&quot;</span>,<span class="string">&quot;nu&quot;</span>,<span class="string">&quot;niu&quot;</span>,<span class="string">&quot;nan&quot;</span>,<span class="string">&quot;nuo&quot;</span>,<span class="string">&quot;neng&quot;</span>,<span class="string">&quot;ning&quot;</span>,<span class="string">&quot;nv&quot;</span>]</span><br><span class="line">nameList.append(N_SUB)</span><br><span class="line"></span><br><span class="line">P_SUB = [<span class="string">&quot;pa&quot;</span>,<span class="string">&quot;pi&quot;</span>,<span class="string">&quot;pu&quot;</span>,<span class="string">&quot;pai&quot;</span>,<span class="string">&quot;pen&quot;</span>,<span class="string">&quot;pin&quot;</span>,<span class="string">&quot;pan&quot;</span>,<span class="string">&quot;pao&quot;</span>,<span class="string">&quot;peng&quot;</span>,<span class="string">&quot;ping&quot;</span>,<span class="string">&quot;pang&quot;</span>,<span class="string">&quot;pian&quot;</span>]</span><br><span class="line">nameList.append(P_SUB)</span><br><span class="line"></span><br><span class="line">Q_SUB = [<span class="string">&quot;qi&quot;</span>,<span class="string">&quot;qu&quot;</span>,<span class="string">&quot;qiu&quot;</span>,<span class="string">&quot;qing&quot;</span>,<span class="string">&quot;qin&quot;</span>,<span class="string">&quot;quan&quot;</span>,<span class="string">&quot;qian&quot;</span>,<span class="string">&quot;qiao&quot;</span>,<span class="string">&quot;que&quot;</span>]</span><br><span class="line">nameList.append(Q_SUB)</span><br><span class="line"></span><br><span class="line">R_SUB = [<span class="string">&quot;ri&quot;</span>,<span class="string">&quot;re&quot;</span>,<span class="string">&quot;ruo&quot;</span>,<span class="string">&quot;rou&quot;</span>,<span class="string">&quot;ran&quot;</span>,<span class="string">&quot;ren&quot;</span>,<span class="string">&quot;rui&quot;</span>,<span class="string">&quot;rang&quot;</span>,<span class="string">&quot;reng&quot;</span>]</span><br><span class="line">nameList.append(R_SUB)</span><br><span class="line"></span><br><span class="line">S_SUB = [<span class="string">&quot;sa&quot;</span>,<span class="string">&quot;si&quot;</span>,<span class="string">&quot;se&quot;</span>,<span class="string">&quot;su&quot;</span>,<span class="string">&quot;sai&quot;</span>,<span class="string">&quot;sun&quot;</span>,<span class="string">&quot;suo&quot;</span>,<span class="string">&quot;song&quot;</span>,<span class="string">&quot;sang&quot;</span>,<span class="string">&quot;san&quot;</span>,<span class="string">&quot;suan&quot;</span>]</span><br><span class="line">nameList.append(S_SUB)</span><br><span class="line"></span><br><span class="line">T_SUB = [<span class="string">&quot;ta&quot;</span>,<span class="string">&quot;te&quot;</span>,<span class="string">&quot;tan&quot;</span>,<span class="string">&quot;tei&quot;</span>,<span class="string">&quot;ti&quot;</span>,<span class="string">&quot;tu&quot;</span>,<span class="string">&quot;tang&quot;</span>,<span class="string">&quot;tai&quot;</span>,<span class="string">&quot;tao&quot;</span>,<span class="string">&quot;tuo&quot;</span>,<span class="string">&quot;teng&quot;</span>,<span class="string">&quot;ting&quot;</span>,<span class="string">&quot;tun&quot;</span>,<span class="string">&quot;tong&quot;</span>,<span class="string">&quot;tian&quot;</span>,<span class="string">&quot;tou&quot;</span>]</span><br><span class="line">nameList.append(T_SUB)</span><br><span class="line"></span><br><span class="line">W_SUB = [<span class="string">&quot;wa&quot;</span>,<span class="string">&quot;wu&quot;</span>,<span class="string">&quot;wai&quot;</span>,<span class="string">&quot;wei&quot;</span>,<span class="string">&quot;wang&quot;</span>,<span class="string">&quot;wan&quot;</span>]</span><br><span class="line">nameList.append(W_SUB)</span><br><span class="line"></span><br><span class="line">X_SUB = [<span class="string">&quot;xi&quot;</span>,<span class="string">&quot;xu&quot;</span>,<span class="string">&quot;xiu&quot;</span>,<span class="string">&quot;xian&quot;</span>,<span class="string">&quot;xu&quot;</span>,<span class="string">&quot;xie&quot;</span>,<span class="string">&quot;xun&quot;</span>,<span class="string">&quot;xin&quot;</span>,<span class="string">&quot;xing&quot;</span>,<span class="string">&quot;xiang&quot;</span>,<span class="string">&quot;xiong&quot;</span>,<span class="string">&quot;xia&quot;</span>,<span class="string">&quot;xuan&quot;</span>,<span class="string">&quot;xue&quot;</span>]</span><br><span class="line">nameList.append(X_SUB)</span><br><span class="line"></span><br><span class="line">Y_SUB = [<span class="string">&quot;ya&quot;</span>,<span class="string">&quot;yi&quot;</span>,<span class="string">&quot;yu&quot;</span>,<span class="string">&quot;yao&quot;</span>,<span class="string">&quot;you&quot;</span>,<span class="string">&quot;yan&quot;</span>,<span class="string">&quot;yun&quot;</span>,<span class="string">&quot;yue&quot;</span>,<span class="string">&quot;yin&quot;</span>,<span class="string">&quot;ying&quot;</span>,<span class="string">&quot;yuan&quot;</span>,<span class="string">&quot;yang&quot;</span>,<span class="string">&quot;yong&quot;</span>]</span><br><span class="line">nameList.append(Y_SUB)</span><br><span class="line"></span><br><span class="line">Z_SUB = [<span class="string">&quot;zu&quot;</span>,<span class="string">&quot;zao&quot;</span>,<span class="string">&quot;zui&quot;</span>,<span class="string">&quot;ze&quot;</span>,<span class="string">&quot;zi&quot;</span>,<span class="string">&quot;zou&quot;</span>,<span class="string">&quot;zuo&quot;</span>,<span class="string">&quot;zeng&quot;</span>,<span class="string">&quot;zuan&quot;</span>,<span class="string">&quot;zong&quot;</span>,<span class="string">&quot;zun&quot;</span>,<span class="string">&quot;zan&quot;</span>,<span class="string">&quot;zai&quot;</span>]</span><br><span class="line">nameList.append(Z_SUB)</span><br><span class="line"></span><br><span class="line">ZH_SUB = [<span class="string">&quot;zhi&quot;</span>,<span class="string">&quot;zhu&quot;</span>,<span class="string">&quot;zhui&quot;</span>,<span class="string">&quot;zhan&quot;</span>,<span class="string">&quot;zhen&quot;</span>,<span class="string">&quot;zheng&quot;</span>,<span class="string">&quot;zhang&quot;</span>,<span class="string">&quot;zhong&quot;</span>,<span class="string">&quot;zhuan&quot;</span>,<span class="string">&quot;zhuang&quot;</span>,<span class="string">&quot;zhao&quot;</span>,<span class="string">&quot;zhe&quot;</span>,<span class="string">&quot;zha&quot;</span>,<span class="string">&quot;zhai&quot;</span>]</span><br><span class="line">nameList.append(ZH_SUB)</span><br><span class="line"></span><br><span class="line">CH_SUB = [<span class="string">&quot;chi&quot;</span>,<span class="string">&quot;chu&quot;</span>,<span class="string">&quot;chui&quot;</span>,<span class="string">&quot;chan&quot;</span>,<span class="string">&quot;chen&quot;</span>,<span class="string">&quot;cheng&quot;</span>,<span class="string">&quot;chang&quot;</span>,<span class="string">&quot;chong&quot;</span>,<span class="string">&quot;chuan&quot;</span>,<span class="string">&quot;chuang&quot;</span>,<span class="string">&quot;chao&quot;</span>,<span class="string">&quot;che&quot;</span>,<span class="string">&quot;cha&quot;</span>,<span class="string">&quot;chai&quot;</span>]</span><br><span class="line">nameList.append(CH_SUB)</span><br><span class="line"></span><br><span class="line">SH_SUB = [<span class="string">&quot;shi&quot;</span>,<span class="string">&quot;shu&quot;</span>,<span class="string">&quot;shui&quot;</span>,<span class="string">&quot;shan&quot;</span>,<span class="string">&quot;shen&quot;</span>,<span class="string">&quot;sheng&quot;</span>,<span class="string">&quot;shang&quot;</span>,<span class="string">&quot;shuan&quot;</span>,<span class="string">&quot;shuang&quot;</span>,<span class="string">&quot;shao&quot;</span>,<span class="string">&quot;she&quot;</span>,<span class="string">&quot;sha&quot;</span>,<span class="string">&quot;shai&quot;</span>]</span><br><span class="line">nameList.append(SH_SUB)</span><br></pre></td></tr></table></figure><h2 id="生成字典"><a class="markdownIt-Anchor" href="#生成字典"></a> 生成字典</h2><p>接下来是把这些字符串拼接起来。使用最简单的方法循环遍历列表，然后把每个值追加写入到字典文件中。这种方法的复杂度真的很高，如果密码生成复杂，花费时间真的真的真的很长。如有大佬，可以指点一二。😁</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#密码生成函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_pwd1</span>(<span class="params">a</span>):</span><br><span class="line">    pwd = <span class="built_in">open</span>(<span class="string">&quot;Passwd.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">        line = a[i]+<span class="string">&quot;\n&quot;</span></span><br><span class="line">        pwd.writelines(line)</span><br><span class="line">    pwd.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_pwd2</span>(<span class="params">a,b</span>):</span><br><span class="line">    pwd = <span class="built_in">open</span>(<span class="string">&quot;Passwd.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">            line = a[i]+b[j]+<span class="string">&quot;\n&quot;</span></span><br><span class="line">            pwd.writelines(line)</span><br><span class="line">    pwd.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_pwd3</span>(<span class="params">a,b,c</span>):</span><br><span class="line">    pwd = <span class="built_in">open</span>(<span class="string">&quot;Passwd.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c)):</span><br><span class="line">                line = a[i]+b[j]+c[k]+<span class="string">&quot;\n&quot;</span></span><br><span class="line">                pwd.writelines(line)</span><br><span class="line">    pwd.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_pwd4</span>(<span class="params">a,b,c,d</span>):</span><br><span class="line">    pwd = <span class="built_in">open</span>(<span class="string">&quot;Passwd.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c)):</span><br><span class="line">                <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(d)):</span><br><span class="line">                    line = a[i]+b[j]+c[k]+d[l]+<span class="string">&quot;\n&quot;</span></span><br><span class="line">                    pwd.writelines(line)</span><br><span class="line">    pwd.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_pwd5</span>(<span class="params">a,b,c,d,e</span>):</span><br><span class="line">    pwd = <span class="built_in">open</span>(<span class="string">&quot;Passwd.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c)):</span><br><span class="line">                <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(d)):</span><br><span class="line">                    <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(e)):</span><br><span class="line">                        line = a[i]+b[j]+c[k]+d[l]+e[m]+<span class="string">&quot;\n&quot;</span></span><br><span class="line">                        pwd.writelines(line)</span><br><span class="line">    pwd.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_pwd6</span>(<span class="params">a,b,c,d,e,f</span>):</span><br><span class="line">    pwd = <span class="built_in">open</span>(<span class="string">&quot;Passwd.txt&quot;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c)):</span><br><span class="line">                <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(d)):</span><br><span class="line">                    <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(e)):</span><br><span class="line">                        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(f)):</span><br><span class="line">                            line = a[i]+b[j]+c[k]+d[l]+e[m]+f[n]+<span class="string">&quot;\n&quot;</span></span><br><span class="line">                            pwd.writelines(line)</span><br><span class="line">    pwd.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#常用密码</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：常用密码，常用密码＋常用符号&quot;</span>)</span><br><span class="line">make_pwd1(MOST_USE)                      <span class="comment">#最常用密码生成</span></span><br><span class="line">make_pwd2(MOST_USE,MOST_SIN)             <span class="comment">#常用密码＋常用符号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#姓＋其他组合</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋年＋常用符号&quot;</span>)</span><br><span class="line">make_pwd3(LASTNAME,YEAR,MOST_SIN)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋常用数字&quot;</span>)</span><br><span class="line">make_pwd2(LASTNAME,MOST_USE)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋常用数字＋常用符号&quot;</span>)</span><br><span class="line">make_pwd3(LASTNAME,MOST_USE,MOST_SIN)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋年＋月＋日&quot;</span>)</span><br><span class="line">make_pwd4(LASTNAME,YEAR,MONTH,DAY)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋月＋日＋常用符号&quot;</span>)</span><br><span class="line">make_pwd4(LASTNAME,MONTH,DAY,MOST_SIN)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋名＋年&quot;</span>)</span><br><span class="line">make_pwd3(LASTNAME,FLETTER,YEAR)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋名＋月＋日&quot;</span>)</span><br><span class="line">make_pwd4(LASTNAME,FLETTER,MONTH,DAY)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋名＋年＋月＋日&quot;</span>)</span><br><span class="line">make_pwd5(LASTNAME,FLETTER,YEAR,MONTH,DAY)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋名＋名＋年&quot;</span>)</span><br><span class="line">make_pwd4(LASTNAME,FLETTER,FLETTER,YEAR)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋名＋名＋月＋日&quot;</span>)</span><br><span class="line">make_pwd5(LASTNAME,FLETTER,FLETTER,MONTH,DAY)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：姓＋名＋名＋年＋月＋日&quot;</span>)</span><br><span class="line">make_pwd6(LASTNAME,FLETTER,FLETTER,YEAR,MONTH,DAY)</span><br><span class="line"></span><br><span class="line"><span class="comment">#名字首字母（姓＋1字名、不带姓2字名）＋其他组合</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：2字名首字母＋常用数字&quot;</span>)</span><br><span class="line">make_pwd3(FLETTER,FLETTER,MOST_USE)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：2字名首字母＋常用符号&quot;</span>)</span><br><span class="line">make_pwd3(FLETTER,FLETTER,MOST_SIN)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：2字名首字母＋年&quot;</span>)</span><br><span class="line">make_pwd3(FLETTER,FLETTER,YEAR)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：2字名首字母＋年＋常用符号&quot;</span>)</span><br><span class="line">make_pwd4(FLETTER,FLETTER,YEAR,MOST_SIN)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：2字名首字母＋月＋日&quot;</span>)</span><br><span class="line">make_pwd4(FLETTER,FLETTER,MONTH,DAY)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：2字名首字母＋月＋日＋常用符号&quot;</span>)</span><br><span class="line">make_pwd5(FLETTER,FLETTER,MONTH,DAY,MOST_SIN)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：2字名首字母＋年＋月＋日&quot;</span>)</span><br><span class="line">make_pwd5(FLETTER,FLETTER,YEAR,MONTH,DAY)</span><br><span class="line"></span><br><span class="line"><span class="comment">#名字首字母（姓＋2字名）＋其他组合</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：3字名首字母＋常用数字&quot;</span>)</span><br><span class="line">make_pwd4(FLETTER,FLETTER,FLETTER,MOST_USE)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：3字名首字母＋常用符号&quot;</span>)</span><br><span class="line">make_pwd4(FLETTER,FLETTER,FLETTER,MOST_SIN)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：3字名首字母＋年&quot;</span>)</span><br><span class="line">make_pwd4(FLETTER,FLETTER,FLETTER,YEAR)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：3字名首字母＋年＋常用符号&quot;</span>)</span><br><span class="line">make_pwd5(FLETTER,FLETTER,FLETTER,YEAR,MOST_SIN)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：3字名首字母＋月＋日&quot;</span>)</span><br><span class="line">make_pwd5(FLETTER,FLETTER,FLETTER,MONTH,DAY)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：3字名首字母＋月＋日＋常用符号&quot;</span>)</span><br><span class="line">make_pwd6(FLETTER,FLETTER,FLETTER,MONTH,DAY,MOST_SIN)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;正在生成：3字名首字母＋年＋月＋日&quot;</span>)</span><br><span class="line">make_pwd6(FLETTER,FLETTER,FLETTER,YEAR,MONTH,DAY)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">#2汉字全拼＋其他组合</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">print (&quot;正在生成：2汉字全拼＋常用数字&quot;)</span></span><br><span class="line"><span class="string">make_pwd3(LASTNAME,nameList,MOST_USE)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：2汉字全拼＋常用符号&quot;)</span></span><br><span class="line"><span class="string">make_pwd3(LASTNAME,nameList,MOST_SIN)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：2汉字全拼母＋年&quot;)</span></span><br><span class="line"><span class="string">make_pwd3(LASTNAME,nameList,YEAR)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：2汉字全拼＋年＋常用符号&quot;)</span></span><br><span class="line"><span class="string">make_pwd4(LASTNAME,nameList,YEAR,MOST_SIN)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：2汉字全拼＋月＋日&quot;)</span></span><br><span class="line"><span class="string">make_pwd4(LASTNAME,nameList,MONTH,DAY)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：2汉字全拼＋月＋日＋常用符号&quot;)</span></span><br><span class="line"><span class="string">make_pwd5(LASTNAME,nameList,MONTH,DAY,MOST_SIN)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：2汉字全拼＋年＋月＋日&quot;)</span></span><br><span class="line"><span class="string">make_pwd5(LASTNAME,nameList,YEAR,MONTH,DAY)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; </span></span><br><span class="line"><span class="string">#3汉字全拼＋其他组合</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">print (&quot;正在生成：3汉字全拼＋常用数字&quot;)</span></span><br><span class="line"><span class="string">make_pwd4(LASTNAME,nameList,nameList,MOST_USE)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：3汉字全拼＋常用符号&quot;)</span></span><br><span class="line"><span class="string">make_pwd4(LASTNAME,nameList,nameList,MOST_SIN)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：3汉字全拼＋年&quot;)</span></span><br><span class="line"><span class="string">make_pwd4(LASTNAME,nameList,nameList,YEAR)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：3汉字全拼＋年＋常用符号&quot;)</span></span><br><span class="line"><span class="string">make_pwd5(LASTNAME,nameList,nameList,YEAR,MOST_SIN)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：3汉字全拼＋月＋日&quot;)</span></span><br><span class="line"><span class="string">make_pwd5(LASTNAME,nameList,nameList,MONTH,DAY)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：3汉字全拼＋月＋日＋常用符号&quot;)</span></span><br><span class="line"><span class="string">make_pwd6(LASTNAME,nameList,nameList,MONTH,DAY,MOST_SIN)</span></span><br><span class="line"><span class="string">print (&quot;正在生成：3汉字全拼＋年＋月＋日&quot;)</span></span><br><span class="line"><span class="string">make_pwd6(LASTNAME,nameList,nameList,YEAR,MONTH,DAY)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>最后生成的字典文件，本人测试只生成了常用的，也没有大写字母，有要尝试的可以自行添加，辣鸡电脑😒耗时较长大约40分钟。</p><p><img src="/skydream/43176/python01.png" style="zoom:50%;">。</p><p>暴力破解这玩意看脸，推荐优先使用弱密码，这样破解起来比较省事。</p><p>📖<a href="https://www.cnblogs.com/lifengfneg/p/5992649.html">参考</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用软件备份</title>
      <link href="/skydream/33001/"/>
      <url>/skydream/33001/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="提升效率的常用软件备份"><a class="markdownIt-Anchor" href="#提升效率的常用软件备份"></a> 提升效率的常用软件备份</h1><h2 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h2><ul><li><a href="https://motrix.app/">motrix</a></li><li><a href="https://www.internetdownloadmanager.com/">internetdownloadmanager</a></li></ul><h2 id="编辑器"><a class="markdownIt-Anchor" href="#编辑器"></a> 编辑器</h2><ul><li><a href="https://code.visualstudio.com/">vscode</a></li><li><a href="https://typora.io/">typora</a></li><li><a href="https://github.com/JasonStein/Notepads">Notepads</a></li></ul><h2 id="图像"><a class="markdownIt-Anchor" href="#图像"></a> 图像</h2><ul><li><a href="https://github.com/meowtec/Imagine">Imagine压缩</a></li><li><a href="https://zh.snipaste.com/">snipaste截图</a></li><li><a href="https://backiee.com/">backiee</a></li></ul><h2 id="视频"><a class="markdownIt-Anchor" href="#视频"></a> 视频</h2><ul><li><a href="https://potplayer.daum.net/">potplayer</a></li></ul><h2 id="压缩"><a class="markdownIt-Anchor" href="#压缩"></a> 压缩</h2><ul><li><a href="https://www.7-zip.org/">7-zip</a></li><li><a href="https://cn.bandisoft.com/bandizip/">bandizip</a></li></ul><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><ul><li><a href="https://github.com/QL-Win/QuickLook">QuickLook</a></li><li><a href="https://github.com/zhongyang219/TrafficMonitor">TrafficMonitor</a></li><li><a href="https://justgetflux.com/">f.lux</a></li><li><a href="https://www.stardock.com/products/fences/">fences</a></li><li><a href="https://github.com/TranslucentTB/TranslucentTB">TranslucentTB</a></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu19.10设置时间同步</title>
      <link href="/skydream/2339/"/>
      <url>/skydream/2339/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ntp服务器"><a class="markdownIt-Anchor" href="#ntp服务器"></a> NTP服务器</h1><p>使用 <code>date</code> 命令查看 Ubuntu 系统中的当前时区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span></span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mon 16 Dec 2019 06:34:37 AM UTC</span><br></pre></td></tr></table></figure><p>如上所见，<code>date</code> 命令显示实际日期和当前时间。我当前的时区是 <strong>UTC</strong>，代表<strong>协调世界时</strong>。</p><p>现在，让我们看看时钟是否与互联网同步。只需运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">               Local time: Mon 2019-12-16 06:35:03 UTC</span><br><span class="line">           Universal time: Mon 2019-12-16 06:35:03 UTC</span><br><span class="line">                 RTC time: Mon 2019-12-16 06:35:06</span><br><span class="line">                Time zone: Etc/UTC (UTC, +0000)</span><br><span class="line">System clock synchronized: no</span><br><span class="line">              NTP service: active</span><br><span class="line">          RTC <span class="keyword">in</span> <span class="built_in">local</span> TZ: no</span><br></pre></td></tr></table></figure><p><code>timedatectl</code> 命令显示本地时间、世界时、时区以及系统时钟是否与互联网服务器同步，以及 <code>NTP service</code> 是处于活动状态还是非活动状态。就我而言，<code>System clock synchronized: no</code>，系统时钟与互联网时间服务器不同步。</p><p>如果你看到 <code>System clock synchronized:</code> 值设置为 <code>no</code>，那么 <code>timesyncd</code> 服务可能处于非活动状态。因此，只需重启服务并看下是否正常。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart systemd-timesyncd.service</span><br></pre></td></tr></table></figure><p>现在检查 <code>timesyncd</code> 服务状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status systemd-timesyncd.service</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">● systemd-timesyncd.service - Network Time Synchronization</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/systemd-timesyncd.service; enabled; vendor preset: enabled)</span><br><span class="line">  Drop-In: /usr/lib/systemd/system/systemd-timesyncd.service.d</span><br><span class="line">           └─disable-with-time-daemon.conf</span><br><span class="line">   Active: active (running) since Mon 2019-12-16 06:35:48 UTC; 2min 21s ago</span><br><span class="line">     Docs: man:systemd-timesyncd.service(8)</span><br><span class="line"> Main PID: 1624 (systemd-timesyn)</span><br><span class="line">   Status: <span class="string">&quot;Idle.&quot;</span></span><br><span class="line">    Tasks: 2 (<span class="built_in">limit</span>: 2208)</span><br><span class="line">   Memory: 1.2M</span><br><span class="line">   CGroup: /system.slice/systemd-timesyncd.service</span><br><span class="line">           └─1624 /lib/systemd/systemd-timesyncd</span><br><span class="line"></span><br><span class="line">Dec 16 06:35:48 sky systemd[1]: Stopping Network Time Synchronization...</span><br><span class="line">Dec 16 06:35:48 sky systemd[1]: systemd-timesyncd.service: Succeeded.</span><br><span class="line">Dec 16 06:35:48 sky systemd[1]: Stopped Network Time Synchronization.</span><br><span class="line">Dec 16 06:35:48 sky systemd[1]: Starting Network Time Synchronization...</span><br><span class="line">Dec 16 06:35:48 sky systemd[1]: Started Network Time Synchronization.</span><br><span class="line">Dec 16 06:35:58 sky systemd-timesyncd[1624]: Timed out waiting <span class="keyword">for</span> reply from 91.189.89.199:123 (ntp.ubuntu.com).</span><br></pre></td></tr></table></figure><p>你可以使用命令验证是否启用了时间同步：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure><p>如果仍然不起作用，请运行以下命令以启用时间同步：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-ntp true</span><br></pre></td></tr></table></figure><p>现在，你的系统时钟将与互联网时间服务器同步。</p><p>但是这里我们看到<code>Status: &quot;Idle.&quot;</code>，说明<code>ntp服务器</code>空闲的。</p><p>使用以下命令修改启用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/systemd/timesyncd.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Time]</span><br><span class="line">NTP=ntp1.aliyun.com</span><br><span class="line">FallbackNTP=ntp2.aliyun.com</span><br></pre></td></tr></table></figure><p>这里本人改为<code>阿里的ntp服务器</code>，<code>ntp.ubuntu.com</code>可能会超时。重启服务生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart systemd-timesyncd.service</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl status systemd-timesyncd.service</span><br><span class="line">● systemd-timesyncd.service - Network Time Synchronization</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/systemd-timesyncd.service; enabled; vendor preset: enabled)</span><br><span class="line">  Drop-In: /usr/lib/systemd/system/systemd-timesyncd.service.d</span><br><span class="line">           └─disable-with-time-daemon.conf</span><br><span class="line">   Active: active (running) since Mon 2019-12-16 16:16:43 CST; 19s ago</span><br><span class="line">     Docs: man:systemd-timesyncd.service(8)</span><br><span class="line"> Main PID: 5140 (systemd-timesyn)</span><br><span class="line">   Status: <span class="string">&quot;Synchronized to time server for the first time 120.25.115.20:123 (ntp1.aliyun.com).&quot;</span></span><br><span class="line">    Tasks: 2 (<span class="built_in">limit</span>: 2208)</span><br><span class="line">   Memory: 1.1M</span><br><span class="line">   CGroup: /system.slice/systemd-timesyncd.service</span><br><span class="line">           └─5140 /lib/systemd/systemd-timesyncd</span><br><span class="line"></span><br><span class="line">Dec 16 16:16:42 sky systemd[1]: Stopping Network Time Synchronization...</span><br><span class="line">Dec 16 16:16:42 sky systemd[1]: systemd-timesyncd.service: Succeeded.</span><br><span class="line">Dec 16 16:16:42 sky systemd[1]: Stopped Network Time Synchronization.</span><br><span class="line">Dec 16 16:16:42 sky systemd[1]: Starting Network Time Synchronization...</span><br><span class="line">Dec 16 16:16:43 sky systemd[1]: Started Network Time Synchronization.</span><br><span class="line">Dec 16 16:16:43 sky systemd-timesyncd[5140]: Synchronized to time server <span class="keyword">for</span> the first time 120.25.115.20:123 (ntp1.aliyun.com).</span><br></pre></td></tr></table></figure><h1 id="更改时区"><a class="markdownIt-Anchor" href="#更改时区"></a> 更改时区</h1><p>将UTC 时区换为中国标准时区 CST。</p><p>使用命令列出可用时区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl list-timezones</span><br></pre></td></tr></table></figure><p>换为中国标准时区 CST。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><p>使用 <code>timedatectl</code> 命令检查时区是否已真正更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ timedatectl</span><br><span class="line">               Local time: Mon 2019-12-16 16:21:35 CST</span><br><span class="line">           Universal time: Mon 2019-12-16 08:21:35 UTC</span><br><span class="line">                 RTC time: Mon 2019-12-16 08:21:35</span><br><span class="line">                Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">System clock synchronized: <span class="built_in">yes</span></span><br><span class="line">              NTP service: active</span><br><span class="line">          RTC <span class="keyword">in</span> <span class="built_in">local</span> TZ: no</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux fdisk命令</title>
      <link href="/skydream/e67/"/>
      <url>/skydream/e67/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux-fdisk命令"><a class="markdownIt-Anchor" href="#linux-fdisk命令"></a> Linux fdisk命令</h1><p>fdisk是提供磁盘分区功能的命令行实用程序。</p><h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk [必要参数][选择参数]</span><br></pre></td></tr></table></figure><p><strong>必要参数：</strong></p><ul><li><code>-l</code> 列出素所有分区表</li><li><code>-u</code> 与<code>&quot;-l&quot;</code>搭配使用，显示分区数目</li></ul><p><strong>选择参数：</strong></p><ul><li><code>-s</code>&lt;分区编号&gt; 指定分区</li><li><code>-v</code> 版本信息</li></ul><p><strong>菜单操作说明</strong></p><ul><li><code>m</code> ：显示菜单和帮助信息</li><li><code>a</code> ：活动分区标记/引导分区</li><li><code>d</code> ：删除分区</li><li><code>l</code> ：显示分区类型</li><li><code>n</code> ：新建分区</li><li><code>p</code> ：显示分区信息</li><li><code>q</code> ：退出不保存</li><li><code>t</code> ：设置分区号</li><li><code>v</code> ：进行分区检查</li><li><code>w</code> ：保存修改</li><li><code>x</code> ：扩展应用，高级功能</li></ul><h2 id="分区"><a class="markdownIt-Anchor" href="#分区"></a> 分区</h2><p>输入分区命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sda</span><br></pre></td></tr></table></figure><p><img src="/skydream/e67/01.png" style="zoom:50%;"></p><p>打印分区表（命令）<code>p</code><br>这里显示磁盘的容量、型号、扇区、格式，和已存在的分区。</p><p><img src="/skydream/e67/02.png" style="zoom:50%;"></p><p>新建分区（命令）<code>n</code></p><p>提示设置分区编号，上面已经有分区1-2了，这里默认是3，直接回车。</p><p>提示输入起始扇区，这里直接回车。</p><p>提示输入结束扇区，把全部剩余空间分为一个区，直接回车。</p><p><img src="/skydream/e67/03.png" style="zoom:50%;"></p><p>打印分区表（命令）<code>p</code>，看到新建分区已经完成。</p><p>将分区表写入磁盘并退出（命令）<code>w</code>。</p><p><strong>格式化分区（命令）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda3</span><br></pre></td></tr></table></figure><p><img src="/skydream/e67/04.png" style="zoom:50%;"></p><h2 id="挂载分区"><a class="markdownIt-Anchor" href="#挂载分区"></a> 挂载分区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda3 /mnt/sda3/     <span class="comment">#挂载sda3分区，挂载目录为/mnt/sda3/  </span></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker常用命令与操作</title>
      <link href="/skydream/a476/"/>
      <url>/skydream/a476/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="基础类"><a class="markdownIt-Anchor" href="#基础类"></a> 基础类</h1><h2 id="查看docker信息"><a class="markdownIt-Anchor" href="#查看docker信息"></a> 查看docker信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看docker版本</span></span><br><span class="line">docker version</span><br><span class="line"><span class="comment"># 显示docker系统的信息</span></span><br><span class="line">docker info</span><br><span class="line"><span class="comment"># 日志信息</span></span><br><span class="line">docker logs</span><br><span class="line"><span class="comment"># 故障检查</span></span><br><span class="line">service docker status</span><br><span class="line"><span class="comment"># 启动关闭docker</span></span><br><span class="line">sudo service docker start|stop</span><br></pre></td></tr></table></figure><h1 id="日志类"><a class="markdownIt-Anchor" href="#日志类"></a> 日志类</h1><h2 id="查看容器日志"><a class="markdownIt-Anchor" href="#查看容器日志"></a> 查看容器日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f &lt;容器名orID&gt;</span><br></pre></td></tr></table></figure><h2 id="docker-daemon-日志位置"><a class="markdownIt-Anchor" href="#docker-daemon-日志位置"></a> docker daemon 日志位置</h2><p>也称之为 <code>引擎日志</code> 根据系统不同各不相同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* CoreOS - journalctl -u docker.service</span><br><span class="line">* Ubuntu(16.04) - journalctl -u docker.service</span><br><span class="line">* Ubuntu(14.04) - /var/log/upstart/docker.log</span><br><span class="line">* Boot2Docker - /var/log/docker.log</span><br><span class="line">* Debian GNU/Linux 8 - journalctl -u docker.service</span><br><span class="line">* Debian GNU/Linux 7 - /var/log/daemon.log</span><br><span class="line">* CentOS 7/RHEL 7 - journalctl -u docker.service</span><br><span class="line">* CentOS - /var/log/daemon.log | grep docker</span><br><span class="line">* Fedora - journalctl -u docker.service</span><br><span class="line">* OpenSuSE - journalctl -u docker.service</span><br><span class="line">* Red Hat Enterprise Linux Server - /var/log/messages | grep docker</span><br><span class="line">* OSX - ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/log/docker.log</span><br></pre></td></tr></table></figure><h2 id="journalctl-日志工具使用"><a class="markdownIt-Anchor" href="#journalctl-日志工具使用"></a> journalctl 日志工具使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最后行数的日志</span></span><br><span class="line">journalctl -n</span><br><span class="line"><span class="comment"># 详细信息</span></span><br><span class="line">journalctl -f</span><br><span class="line"><span class="comment"># 本次启动后的所有日志</span></span><br><span class="line">journalctl -b</span><br><span class="line"><span class="comment"># 查看启动记录</span></span><br><span class="line">journalctl --list-boots</span><br><span class="line"><span class="comment"># 查看某次运行过程中的日志</span></span><br><span class="line">sudo journalctl -b [启动顺序号，或者启动<span class="built_in">hash</span>]</span><br><span class="line"><span class="comment"># 查看记录中指定单元 docker.service 的日志</span></span><br><span class="line">journalctl -u docker.service</span><br></pre></td></tr></table></figure><ul><li>显示可以匹配日志级别</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -F PRIORITY</span><br></pre></td></tr></table></figure><table><thead><tr><th>编码</th><th>优先级</th><th>严重性</th></tr></thead><tbody><tr><td>0</td><td>emerg</td><td>系统不可用</td></tr><tr><td>1</td><td>alert</td><td>必须立即采取措施</td></tr><tr><td>2</td><td>crit</td><td>严重状况</td></tr><tr><td>3</td><td>err</td><td>非严重错误状况</td></tr><tr><td>4</td><td>warning</td><td>警告状况</td></tr><tr><td>5</td><td>notice</td><td>正常但重要的事件</td></tr><tr><td>6</td><td>info</td><td>信息性事件</td></tr><tr><td>7</td><td>debug</td><td>调试级别消息</td></tr></tbody></table><p>比如显示 docker 内核日志中 info 类的数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只显示错误、冲突和重要告警信息</span></span><br><span class="line">journalctl -u docker.service -p err..alert</span><br><span class="line"><span class="comment"># -p 等效于 PRIORITY 也可以用数字来表示</span></span><br><span class="line">journalctl -u docker.service PRIORITY=6</span><br><span class="line"><span class="comment"># 还可以加入 MESSAGE、MESSAGE_ID、_PID、_UID、_HOSTNAME、_SYSTEMD_UNIT 等条件</span></span><br><span class="line"><span class="comment"># 查询字段 `man 7 systemd.journal-fields`</span></span><br><span class="line"><span class="comment"># 例如查询 info 信息，PID 为 2331</span></span><br><span class="line">journalctl -u docker.service PRIORITY=6 _PID=2331</span><br></pre></td></tr></table></figure><h2 id="journalctl-日志保存到文件"><a class="markdownIt-Anchor" href="#journalctl-日志保存到文件"></a> journalctl 日志保存到文件</h2><blockquote><p>systemd-journald 服务收集到的日志默认保存在 /run/log 目录中，重启系统会丢掉以前的日志信息</p></blockquote><ul><li>保存日志到默认配置目录</li></ul><p>创建目录 <code>/var/log/journal</code> ，当这个目录存在，则日志会持久化，记得创建后，重启 <code>systemd-journald.service</code> 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /var/log/journal</span><br><span class="line">sudo <span class="built_in">chown</span> root:systemd-journal /var/log/journal</span><br><span class="line">sudo <span class="built_in">chmod</span> 2775 /var/log/journal</span><br><span class="line">sudo systemctl restart systemd-journald.service</span><br></pre></td></tr></table></figure><ul><li>或者修改配置</li></ul><p>修改 <code>/etc/systemd/journald.conf</code>，把取消注释 <code>Storage=auto</code>, 并改为 <code>Storage=persistent</code><br>重启 <code>systemd-journald.service</code> 服务</p><ul><li>查看日志占用的磁盘空间</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo journalctl --disk-usage</span><br></pre></td></tr></table></figure><p>容量定义文件在 <code>/etc/systemd/journald.conf</code><br>日志调整文件 <code>/etc/logrotate.conf</code></p><blockquote><p>日志系统同样会进行轮转，每月触发。默认情况下，日志大小不能超过所处文件系统的10%，也不可使所处文件系统空间低于15%</p><blockquote><p>无论是否设置把日志存储到文件，都会得到 disk-usage 的占用空间！</p></blockquote></blockquote><ul><li>清理日志数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用 –vacuum-size 选项指定日志的总体体积</span></span><br><span class="line">sudo journalctl --vacuum-size=1G</span><br><span class="line">使用 –vacuum-time 选项指定日志的总时间占用</span><br><span class="line">sudo journalctl --vacuum-time=1years</span><br></pre></td></tr></table></figure><p>更多详细见 👉<a href="http://www.cnblogs.com/sparkdev/p/8795141.html">linux journalctl 命令</a></p><h2 id="docker-ps-没有响应-日志查询"><a class="markdownIt-Anchor" href="#docker-ps-没有响应-日志查询"></a> docker ps 没有响应 日志查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grep 所有容器的config.json</span></span><br><span class="line">docker logs [conID]</span><br><span class="line"><span class="comment"># 确认问题后</span></span><br><span class="line"><span class="comment"># 该config.json 中有该容器1号进程的pid</span></span><br><span class="line"><span class="built_in">kill</span> -9 pid</span><br></pre></td></tr></table></figure><h1 id="容器类"><a class="markdownIt-Anchor" href="#容器类"></a> 容器类</h1><p>docker容器可以理解为在沙盒中运行的进程</p><blockquote><p>这个沙盒包含了该进程运行所必须的资源，包括文件系统、系统类库、shell 环境等等。但这个沙盒默认是不会运行任何程序的。你需要在沙盒中运行一个进程来启动某一个容器。这个进程是该容器的唯一进程，所以当该进程结束的时候，容器也会完全的停止。</p></blockquote><h2 id="查看容器信息"><a class="markdownIt-Anchor" href="#查看容器信息"></a> 查看容器信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前运行的容器</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment"># 查看全部容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="comment"># 查看全部容器的id和信息</span></span><br><span class="line">docker ps -a -q</span><br><span class="line"><span class="comment"># 查看全部容器占用的空间</span></span><br><span class="line">docker ps -as</span><br><span class="line"><span class="comment"># 查看一个正在运行容器进程，支持 ps 命令参数</span></span><br><span class="line">docker top</span><br><span class="line"><span class="comment"># 查看容器的示例id</span></span><br><span class="line">sudo docker inspect -f  <span class="string">&#x27;&#123;&#123;.Id&#125;&#125;&#x27;</span> [<span class="built_in">id</span>]</span><br><span class="line"><span class="comment"># 检查镜像或者容器的参数，默认返回 JSON 格式</span></span><br><span class="line">docker inspect</span><br><span class="line"><span class="comment"># 返回 ubuntu:14.04  镜像的 docker 版本</span></span><br><span class="line">docker inspect --format <span class="string">&#x27;&#123;&#123;.DockerVersion&#125;&#125;&#x27;</span> ubuntu:14.04</span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> ubuntu:14.04</span><br></pre></td></tr></table></figure><h2 id="容器同步命令"><a class="markdownIt-Anchor" href="#容器同步命令"></a> 容器同步命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保存对容器的修改</span></span><br><span class="line">docker commit</span><br><span class="line"><span class="comment"># 保存某个容器成为一个镜像</span></span><br><span class="line">docker commit -a <span class="string">&quot;user&quot;</span> -m <span class="string">&quot;commit info&quot;</span> [CONTAINER] [imageName]:[imageTag]</span><br><span class="line"><span class="comment"># 推送一个容器到中心仓库</span></span><br><span class="line">docker login --username=[userName] --password=[<span class="built_in">pwd</span>] [registryURL]</span><br><span class="line"><span class="comment">## 建议登录后查看 docker info</span></span><br><span class="line">docker tag [imageID] [remoteURL]:[imageTag]</span><br><span class="line">docker push [remoteURL]:[imageTag]</span><br><span class="line"><span class="comment"># 拉取提交的容器</span></span><br><span class="line">docker pull [remoteURL]:[imageTag]</span><br><span class="line"><span class="comment"># 对比容器的改动</span></span><br><span class="line">docker diff</span><br><span class="line"><span class="comment"># 附加到一个运行的容器上</span></span><br><span class="line">docker attach</span><br></pre></td></tr></table></figure><h2 id="容器操作命令"><a class="markdownIt-Anchor" href="#容器操作命令"></a> 容器操作命令</h2><h3 id="创建删除容器"><a class="markdownIt-Anchor" href="#创建删除容器"></a> 创建删除容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个容器命名为 test 使用镜像daocloud.io/library/ubuntu</span></span><br><span class="line">docker create -it --name <span class="built_in">test</span> daocloud.io/library/ubuntu</span><br><span class="line"><span class="comment"># 创建并启动一个容器 名为 test 使用镜像daocloud.io/library/ubuntu</span></span><br><span class="line">docker run --name <span class="built_in">test</span> daocloud.io/library/ubuntu</span><br><span class="line"><span class="comment"># 删除一个容器</span></span><br><span class="line">docker <span class="built_in">rm</span> [容器<span class="built_in">id</span>]</span><br><span class="line"><span class="comment"># 删除所有容器</span></span><br><span class="line">docker <span class="built_in">rm</span> `docker ps -a -q`</span><br><span class="line"><span class="comment"># 根据Dockerfile 构建</span></span><br><span class="line">docker build -t [image_name] [Dockerfile_path]</span><br></pre></td></tr></table></figure><h3 id="docker容器随系统自启"><a class="markdownIt-Anchor" href="#docker容器随系统自启"></a> docker容器随系统自启</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --restart=always</span><br></pre></td></tr></table></figure><ul><li><code>no</code> – 默认值，如果容器挂掉不自动重启</li><li><code>on-failure</code> – 当容器以非 0 码退出时重启容器,同时可接受一个可选的最大重启次数参数 (e.g. on-failure:10).</li><li><code>always</code> – 不管退出码是多少都要重启</li></ul><h3 id="容器资源限制参数"><a class="markdownIt-Anchor" href="#容器资源限制参数"></a> 容器资源限制参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 限制内存最大使用</span></span><br><span class="line">-m 1024m --memory-swap=1024m</span><br><span class="line"><span class="comment"># 限制容器使用CPU</span></span><br><span class="line">--cpuset-cpus=<span class="string">&quot;0,1&quot;</span></span><br></pre></td></tr></table></figure><h3 id="把一个正在运行的容器保存为镜像"><a class="markdownIt-Anchor" href="#把一个正在运行的容器保存为镜像"></a> 把一个正在运行的容器保存为镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit &lt;CONTAIN-ID&gt; &lt;IMAGE-NAME&gt;</span><br></pre></td></tr></table></figure><h3 id="启动停止容器等操作"><a class="markdownIt-Anchor" href="#启动停止容器等操作"></a> 启动停止容器等操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker start|stop|restart [<span class="built_in">id</span>]</span><br><span class="line"><span class="comment"># 暂停|恢复 某一容器的所有进程</span></span><br><span class="line">docker pause|unpause [<span class="built_in">id</span>]</span><br><span class="line"><span class="comment"># 杀死一个或多个指定容器进程</span></span><br><span class="line">docker <span class="built_in">kill</span> -s KILL [<span class="built_in">id</span>]</span><br><span class="line"><span class="comment"># 停止全部运行的容器</span></span><br><span class="line">docker stop `docker ps -q`</span><br><span class="line"><span class="comment"># 杀掉全部运行的容器</span></span><br><span class="line">docker <span class="built_in">kill</span> -s KILL `docker ps -q`</span><br></pre></td></tr></table></figure><h3 id="交互式进入容器"><a class="markdownIt-Anchor" href="#交互式进入容器"></a> 交互式进入容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo docker <span class="built_in">exec</span> -it &#123;&#123;containerName or containerID&#125;&#125; bash</span><br><span class="line">sudo docker <span class="built_in">exec</span> -i &#123;&#123;containerName or containerID&#125;&#125; bash</span><br><span class="line">sudo docker <span class="built_in">exec</span> -t &#123;&#123;containerName or containerID&#125;&#125; bash</span><br><span class="line">sudo docker <span class="built_in">exec</span> -d &#123;&#123;containerName or containerID&#125;&#125; bash</span><br></pre></td></tr></table></figure><ul><li>只用 <code>-i</code> 参数，由于没有分配伪终端，看起来像pipe执行一样。但是执行结果、命令返回值都可以正确获取</li><li>只用 <code>-t</code> 参数，则可以看到一个 console 窗口，但是执行命令会发现由于没有获得stdin的输出，无法看到命令执行情况</li><li>使用 <code>-it</code> 时，则和我们平常操作 console 界面类似，而且也<code>不会像attach方式因为退出，导致整个容器退出</code></li><li>使用 <code>-d</code> 参数，在后台执行一个进程。如果一个命令需要长时间进程，会很快返回</li></ul><h4 id="docker-attach"><a class="markdownIt-Anchor" href="#docker-attach"></a> Docker attach</h4><p>Docker attach可以attach到一个已经运行的容器的stdin，然后进行命令执行的动作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker attach &#123;&#123;containerName or containerID&#125;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>需要注意的是，如果从这个stdin中exit，会导致容器的停止</p></blockquote><h3 id="查看容器的root用户密码"><a class="markdownIt-Anchor" href="#查看容器的root用户密码"></a> 查看容器的root用户密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs &lt;容器名orID&gt; 2&gt;&amp;1 | grep <span class="string">&#x27;^User: &#x27;</span> | <span class="built_in">tail</span> -n1</span><br></pre></td></tr></table></figure><p>因为Docker容器启动时的root用户的密码是随机分配的。所以，通过这种方式就可以得到容器的root用户的密码</p><p>容器于宿主拷贝文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-</span><br><span class="line">docker <span class="built_in">cp</span> [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH</span><br><span class="line"><span class="comment"># 本地文件上传到对应容器的目录</span></span><br><span class="line">docker <span class="built_in">cp</span> local.sh [CONTAINERid]:[TagPath]</span><br></pre></td></tr></table></figure><blockquote><p>此命令为高版本docker才有，当然1.11+肯定包含</p></blockquote><h3 id="运行一个新容器同时为它命名-端口映射-文件夹映射"><a class="markdownIt-Anchor" href="#运行一个新容器同时为它命名-端口映射-文件夹映射"></a> 运行一个新容器，同时为它命名、端口映射、文件夹映射</h3><p>以<code>redmine</code>镜像为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name redmine -p 9003:80 -p 9023:22 -d -v /var/redmine/files:/redmine/files -v /var/redmine/mysql:/var/lib/mysql sameersbn/redmine</span><br></pre></td></tr></table></figure><h3 id="一个容器连接到另一个容器"><a class="markdownIt-Anchor" href="#一个容器连接到另一个容器"></a> 一个容器连接到另一个容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -i -t --name sonar -d -<span class="built_in">link</span> mmysql:db  tpires/sonar-server sonar</span><br></pre></td></tr></table></figure><h3 id="导入导出容器"><a class="markdownIt-Anchor" href="#导入导出容器"></a> 导入导出容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 支持远程文件 .tar, .tar.gz, .tgz, .bzip, .tar.xz, .txz</span></span><br><span class="line">docker import</span><br><span class="line"><span class="comment"># 导出</span></span><br><span class="line">docker <span class="built_in">export</span> [<span class="built_in">id</span>] &gt;~/Downloads/ubuntu_nexus.tar</span><br></pre></td></tr></table></figure><blockquote><p>导出后导入（exported-imported)）的容器会丢失所有的提交历史，无法回滚。</p></blockquote><h1 id="镜像操作"><a class="markdownIt-Anchor" href="#镜像操作"></a> 镜像操作</h1><h2 id="远程镜像"><a class="markdownIt-Anchor" href="#远程镜像"></a> 远程镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker search</span><br><span class="line"><span class="comment"># 搜索处收藏数不小于 3 ，并且能够自动化构建的  django 镜像，并且完整显示镜像描述</span></span><br><span class="line">docker search -s 3 --automated --no-trunc django</span><br><span class="line">docker pull</span><br><span class="line"><span class="comment"># 拉取ubuntu最新的镜像</span></span><br><span class="line">docker pull ubuntu:latest</span><br><span class="line"><span class="comment"># 服务器拉取个人动态，可选择时间区间</span></span><br><span class="line">docker events</span><br><span class="line"><span class="comment"># 拉取个人从 2015/07/20 到 2015/08/08 的个人动态</span></span><br><span class="line">docker events --since=<span class="string">&quot;20150720&quot;</span> --until=<span class="string">&quot;20150808&quot;</span></span><br></pre></td></tr></table></figure><h2 id="镜像同步操作"><a class="markdownIt-Anchor" href="#镜像同步操作"></a> 镜像同步操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 标记本地镜像，将其归入某一仓库</span></span><br><span class="line">docker tag</span><br><span class="line"><span class="comment"># 将 ID 为 5db5f84x1261 的容器标记为 mine/lnmp:0.2 镜像</span></span><br><span class="line">docker tag 5db5f84x1261 mine/lnmp:0.2</span><br><span class="line"><span class="comment"># 将镜像推送至远程仓库，默认为 Docker Hub</span></span><br><span class="line">docker push</span><br></pre></td></tr></table></figure><h2 id="本地镜像"><a class="markdownIt-Anchor" href="#本地镜像"></a> 本地镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出本地所有镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="comment"># 本地镜像名为 ubuntu 的所有镜像</span></span><br><span class="line">docker images ubuntu</span><br><span class="line"><span class="comment"># 查看指定镜像的创建历史</span></span><br><span class="line">docker <span class="built_in">history</span> [<span class="built_in">id</span>]</span><br><span class="line"><span class="comment"># 本地移除一个或多个指定的镜像</span></span><br><span class="line">docker rmi</span><br><span class="line"><span class="comment"># 移除本地全部镜像</span></span><br><span class="line">docker rmi `docker images -a -q`</span><br><span class="line"><span class="comment"># 指定镜像保存成 tar 归档文件， docker load 的逆操作</span></span><br><span class="line">docker save</span><br><span class="line"><span class="comment"># 将镜像 ubuntu:14.04 保存为 ubuntu14.04.tar 文件</span></span><br><span class="line">docker save -o ubuntu14.04.tar ubuntu:14.04</span><br><span class="line"><span class="comment"># 从 tar 镜像归档中载入镜像， docker save 的逆操作</span></span><br><span class="line">docker load</span><br><span class="line"><span class="comment"># 上面命令的意思是将 ubuntu14.04.tar 文件载入镜像中</span></span><br><span class="line">docker load -i ubuntu14.04.tar</span><br><span class="line">docker load &lt; /home/save.tar</span><br><span class="line"><span class="comment"># 构建自己的镜像</span></span><br><span class="line">docker build -t &lt;镜像名&gt; &lt;Dockerfile路径&gt;</span><br><span class="line">docker build -t xx/gitlab .</span><br></pre></td></tr></table></figure><blockquote><p>保存后再加载（saved-loaded）的镜像不会丢失提交历史和层，可以回滚</p></blockquote><h2 id="重新查看container的stdout"><a class="markdownIt-Anchor" href="#重新查看container的stdout"></a> 重新查看container的stdout</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动top命令，后台运行</span></span><br><span class="line">$ ID=$(sudo docker run -d ubuntu /usr/bin/top -b)</span><br><span class="line"><span class="comment"># 获取正在running的container的输出</span></span><br><span class="line">$ sudo docker attach <span class="variable">$ID</span></span><br><span class="line">top - 02:05:52 up  3:05,  0 <span class="built_in">users</span>,  load average: 0.01, 0.02, 0.05</span><br><span class="line">Tasks:  1 total,  1 running,  0 sleeping,  0 stopped,  0 zombie</span><br><span class="line">Cpu(s):  0.1%us,  0.2%sy,  0.0%ni, 99.7%<span class="built_in">id</span>,  0.0%wa,  0.0%hi,  0.0%si,  0.0%st</span><br><span class="line">Mem:    373572k total,  355560k used,    18012k free,    27872k buffers</span><br><span class="line">Swap:  786428k total,        0k used,  786428k free,  221740k cached</span><br><span class="line">^C$</span><br><span class="line">$ sudo docker stop <span class="variable">$ID</span></span><br></pre></td></tr></table></figure><h1 id="docker-run"><a class="markdownIt-Anchor" href="#docker-run"></a> docker run</h1><h2 id="后台运行-d-并暴露端口"><a class="markdownIt-Anchor" href="#后台运行-d-并暴露端口"></a> 后台运行(-d)、并暴露端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 127.0.0.1:33301:22 centos6-ssh</span><br></pre></td></tr></table></figure><h2 id="run-命令详解"><a class="markdownIt-Anchor" href="#run-命令详解"></a> run 命令详解</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">-a, --attach=[]            Attach to STDIN, STDOUT or STDERR 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项</span><br><span class="line">  --add-host=[]              Add a custom host-to-IP mapping (host:ip)</span><br><span class="line">  --blkio-weight=0            Block IO (relative weight), between 10 and 1000</span><br><span class="line">  -c, --cpu-shares=0          CPU shares (relative weight)</span><br><span class="line">  --cap-add=[]                Add Linux capabilities</span><br><span class="line">  --cap-drop=[]              Drop Linux capabilities</span><br><span class="line">  --cgroup-parent=            Optional parent cgroup <span class="keyword">for</span> the container</span><br><span class="line">  --cidfile=                  Write the container ID to the file</span><br><span class="line">  --cpu-period=0              Limit CPU CFS (Completely Fair Scheduler) period</span><br><span class="line">  --cpu-quota=0              Limit the CPU CFS quota</span><br><span class="line">  --cpuset-cpus=              CPUs <span class="keyword">in</span> <span class="built_in">which</span> to allow execution (0-3, 0,1) 绑定容器到指定CPU运行</span><br><span class="line">  --cpuset-mems=              MEMs <span class="keyword">in</span> <span class="built_in">which</span> to allow execution (0-3, 0,1) 绑定容器到指定MEM运行</span><br><span class="line">  -d, --detach=<span class="literal">false</span>          Run container <span class="keyword">in</span> background and <span class="built_in">print</span> container ID 后台运行容器，并返回容器ID</span><br><span class="line">  --device=[]                Add a host device to the container</span><br><span class="line">  --dns=[]                    Set custom DNS servers 指定容器使用的DNS服务器，默认和宿主一致</span><br><span class="line">  --dns-search=[]            Set custom DNS search domains 指定容器DNS搜索域名，默认和宿主一致</span><br><span class="line">  -e, --<span class="built_in">env</span>=[]                Set environment variables 设置环境变量</span><br><span class="line">  --entrypoint=              Overwrite the default ENTRYPOINT of the image</span><br><span class="line">  --env-file=[]              Read <span class="keyword">in</span> a file of environment variables 从指定文件读入环境变量</span><br><span class="line">  --expose=[]                Expose a port or a range of ports</span><br><span class="line">  -h, --hostname=            Container host name 指定容器的hostname</span><br><span class="line">  --<span class="built_in">help</span>=<span class="literal">false</span>                Print usage</span><br><span class="line">  -i, --interactive=<span class="literal">false</span>    Keep STDIN open even <span class="keyword">if</span> not attached 以交互模式运行容器，通常与 -t 同时使用</span><br><span class="line">  --ipc=                      IPC namespace to use</span><br><span class="line">  -l, --label=[]              Set meta data on a container</span><br><span class="line">  --label-file=[]            Read <span class="keyword">in</span> a line delimited file of labels</span><br><span class="line">  --<span class="built_in">link</span>=[]                  Add <span class="built_in">link</span> to another container</span><br><span class="line">  --log-driver=              Logging driver <span class="keyword">for</span> container</span><br><span class="line">  --log-opt=[]                Log driver options</span><br><span class="line">  --lxc-conf=[]              Add custom lxc options</span><br><span class="line">  -m, --memory=              Memory <span class="built_in">limit</span></span><br><span class="line">  --mac-address=              Container MAC address (e.g. 92:d0:c6:0a:29:33)</span><br><span class="line">  --memory-swap=              Total memory (memory + swap), <span class="string">&#x27;-1&#x27;</span> to <span class="built_in">disable</span> swap</span><br><span class="line">  --name=                    Assign a name to the container 为容器指定一个名称</span><br><span class="line">  --net=bridge                Set the Network mode <span class="keyword">for</span> the container  指定容器的网络连接类型，支持 bridge/host/none/container:&lt;name|<span class="built_in">id</span>&gt; 四种类型</span><br><span class="line">  --oom-kill-disable=<span class="literal">false</span>    Disable OOM Killer</span><br><span class="line">  -P, --publish-all=<span class="literal">false</span>    Publish all exposed ports to random ports</span><br><span class="line">  -p, --publish=[]            Publish a container<span class="string">&#x27;s port(s) to the host</span></span><br><span class="line"><span class="string">  --pid=                      PID namespace to use</span></span><br><span class="line"><span class="string">  --privileged=false          Give extended privileges to this container</span></span><br><span class="line"><span class="string">  --read-only=false          Mount the container&#x27;</span>s root filesystem as <span class="built_in">read</span> only</span><br><span class="line">  --restart=no                Restart policy to apply when a container exits</span><br><span class="line">  --<span class="built_in">rm</span>=<span class="literal">false</span>                  Automatically remove the container when it exits</span><br><span class="line">  --security-opt=[]          Security Options</span><br><span class="line">  --sig-proxy=<span class="literal">true</span>            Proxy received signals to the process</span><br><span class="line">  -t, --<span class="built_in">tty</span>=<span class="literal">false</span>            Allocate a pseudo-TTY 为容器重新分配一个伪输入终端，通常与 -i 同时使用</span><br><span class="line">  -u, --user=                Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])</span><br><span class="line">  --<span class="built_in">ulimit</span>=[]                Ulimit options</span><br><span class="line">  --uts=                      UTS namespace to use</span><br><span class="line">  -v, --volume=[]            Bind mount a volume</span><br><span class="line">  --volumes-from=[]          Mount volumes from the specified container(s)</span><br><span class="line">  -w, --workdir=              Working directory inside the container</span><br></pre></td></tr></table></figure><p>📖<a href="https://www.jianshu.com/p/adaa34795e64">参考</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装指南</title>
      <link href="/skydream/f392/"/>
      <url>/skydream/f392/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装docker"><a class="markdownIt-Anchor" href="#安装docker"></a> 安装Docker</h1><blockquote><p>Ubuntu19.10</p></blockquote><p>本人使用repository安装。</p><h2 id="设置存储库"><a class="markdownIt-Anchor" href="#设置存储库"></a> 设置存储库</h2><p>更新<code>apt</code>包索引：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>安装软件包以允许<code>apt</code>通过HTTPS使用存储库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install \</span><br><span class="line">  apt-transport-https \</span><br><span class="line">  ca-certificates \</span><br><span class="line">  curl \</span><br><span class="line">  gnupg-agent \</span><br><span class="line">  software-properties-common</span><br></pre></td></tr></table></figure><h2 id="docker-ce-软件源"><a class="markdownIt-Anchor" href="#docker-ce-软件源"></a> Docker-ce 软件源</h2><h3 id="docker的官方源"><a class="markdownIt-Anchor" href="#docker的官方源"></a> Docker的官方源</h3><p>添加stable版的repository：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line"> <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string"> <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string"> stable&quot;</span></span><br></pre></td></tr></table></figure><h3 id="中科大的-docker-ce-源"><a class="markdownIt-Anchor" href="#中科大的-docker-ce-源"></a> 中科大的 Docker-ce 源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line"> <span class="string">&quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \</span></span><br><span class="line"><span class="string"> <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string"> stable&quot;</span></span><br></pre></td></tr></table></figure><h3 id="清华大学的-docker-ce-源"><a class="markdownIt-Anchor" href="#清华大学的-docker-ce-源"></a> 清华大学的 Docker-ce 源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">   <span class="string">&quot;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \</span></span><br><span class="line"><span class="string">   <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">   stable&quot;</span></span><br></pre></td></tr></table></figure><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p>更新<code>apt</code>包索引。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><p>安装最新的Docker CE和containerd：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><p>验证安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><p>docker服务开机启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker.service</span><br></pre></td></tr></table></figure><h2 id="卸载docker"><a class="markdownIt-Anchor" href="#卸载docker"></a> 卸载Docker</h2><p>卸载Docker CE包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt purge docker-ce</span><br></pre></td></tr></table></figure><p>删除images、containers和volumes：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/docker</span><br></pre></td></tr></table></figure><h1 id="docker-用户组"><a class="markdownIt-Anchor" href="#docker-用户组"></a> Docker 用户组</h1><p>首先查看是否已经存在docker分组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cat</span> /etc/group | grep docker</span><br></pre></td></tr></table></figure><p>如果没有docker分组，创建docker分组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd -g 999 docker</span><br></pre></td></tr></table></figure><blockquote><p><code>-g 999</code>为组ID，可以不指定</p></blockquote><p>将用户添加到docker分组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker &lt;username&gt;</span><br></pre></td></tr></table></figure><p>修改守护进程绑定的套接字的权限，能够被docker分组访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> a+rw /var/run/docker.sock</span><br></pre></td></tr></table></figure><p>重启docker-daemon以便让权限生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>确认你可以直接运行docker命令，执行docker命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><h1 id="docker-hub-镜像加速"><a class="markdownIt-Anchor" href="#docker-hub-镜像加速"></a> Docker Hub 镜像加速</h1><p>创建或修改 <code>/etc/docker/daemon.json</code>：</p><blockquote><p>Docker Hub 镜像加速源选择添加即可</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"><span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;https://&lt;aliname&gt;.mirror.aliyuncs.com&quot;</span>,    <span class="comment">#阿里云 需登录</span></span><br><span class="line">        <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,     <span class="comment">#科大</span></span><br><span class="line">        <span class="string">&quot;https://registry.docker-cn.com&quot;</span>,           <span class="comment">#Docker中国官方镜像</span></span><br><span class="line">        <span class="string">&quot;https://mirror.ccs.tencentyun.com&quot;</span>,     <span class="comment">#腾讯云</span></span><br><span class="line">        <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,             <span class="comment">#网易云</span></span><br><span class="line">        <span class="string">&quot;https://dockerhub.azk8s.cn&quot;</span>             <span class="comment">#Azure中国镜像</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h1 id="portainer"><a class="markdownIt-Anchor" href="#portainer"></a> Portainer</h1><p>Portainer是一个轻量级的管理UI，可让您轻松管理不同的Docker环境（Docker主机或Swarm集群）。Portainer的意图是易于部署和使用。它由一个可以在任何Docker引擎上运行的容器组成（可以部署为Linux容器或Windows本机容器，也支持其他平台）。 Portainer允许您管理所有Docker资源（容器，映像，卷，网络等）！它与独立的Docker引擎和 Docker Swarm模式兼容。</p><h2 id="安装-portainer"><a class="markdownIt-Anchor" href="#安装-portainer"></a> 安装 Portainer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull portainer/portainer</span><br><span class="line">docker run -d --name portainer -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v /Users/eastren/Documents/Docker/portainer_data:/data portainer/portainer</span><br></pre></td></tr></table></figure><h2 id="portainer汉化可选"><a class="markdownIt-Anchor" href="#portainer汉化可选"></a> Portainer汉化（可选）</h2><p><img src="/skydream/f392/docker01.png" style="zoom:50%;"></p><p>下载汉化文件</p><ul><li><a href="https://dl.quchao.net/Soft/Portainer-CN.zip">Portainer-CN</a></li></ul><ol><li>新建文件夹命名为 <code>public</code> ，把 <code>Portainer-CN.zip</code> 解压至里面</li><li>把<code>public</code> 文件夹传输至系统根目录</li><li>然后按需执行以下命令 x86-64系统使用</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker volume create portainer_data </span><br><span class="line">docker run -d --name portainer -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data -v /public:/public portainer/portainer</span><br></pre></td></tr></table></figure><blockquote><p>可以添加参数<code>--restart=always</code> 设置<code>Portainer</code>开机自动启动</p></blockquote><p>如果创建时未指定 <code>--restart=always</code> ,可通过 <code>docker update</code> 命令设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update --restart=always XXXX</span><br></pre></td></tr></table></figure><p>📖<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">参考</a>，<a href="https://www.quchao.net/Portainer-CN.html">Portainer汉化</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LxRunOffline管理WSL</title>
      <link href="/skydream/c741/"/>
      <url>/skydream/c741/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>LxRunOffline</strong>是用于管理Windows Windows子系统（WSL）的功能齐全的实用程序。</p><ul><li>将任何Linux发行版安装到计算机上的任何目录。</li><li>将现有安装移动到另一个目录。</li><li>复制（复制）现有安装。</li><li>注册现有的安装目录。<code>这使您可以安装到U盘，并在其他计算机上使用它。</code></li><li>在指定的安装中运行任意Linux命令。</li><li>配置默认用户，环境变量和<a href="https://docs.microsoft.com/zh-cn/windows/win32/api/wslapi/ne-wslapi-wsl_distribution_flags">各种标志</a>。</li><li>将配置导出到XML文件，然后从该文件导入。</li><li>将安装导出到tar文件。</li></ul><h1 id="windows-10-子系统linux重启不重启win10"><a class="markdownIt-Anchor" href="#windows-10-子系统linux重启不重启win10"></a> Windows 10 子系统Linux重启(不重启Win10)</h1><p>使用 <code>PowerShell (Administrator)</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net stop LxssManager</span><br><span class="line">net start LxssManager</span><br></pre></td></tr></table></figure><h1 id="安装-lxrunoffline"><a class="markdownIt-Anchor" href="#安装-lxrunoffline"></a> 安装 LxRunOffline</h1><p>下载解压 <a href="https://github.com/DDoSolitary/LxRunOffline">LxRunOffline</a> ，并<code>设置环境变量</code>。</p><h2 id="lxrunoffline当前版本-340-的选项说明"><a class="markdownIt-Anchor" href="#lxrunoffline当前版本-340-的选项说明"></a> LxRunOffline当前版本 (3.4.0) 的选项说明</h2><p><code>l</code> , <code>list</code> - 列出所有已安装的发行版。</p><p><code>gd</code> , <code>get-default</code> - 获取 bash.exe 使用的默认发行版。</p><p><code>sd</code> , <code>set-default</code> - 设置 bash.exe 使用的默认发行版。</p><p><code>i</code> , <code>install</code> - 安装新的发行版。</p><p><code>sd</code> , <code>set-default</code> - 设置 bash.exe 使用的默认发行版。</p><p><code>ui</code> , <code>uninstall</code> - 卸载发行版。</p><p><code>rg</code> , <code>register</code> - 注册现有的安装目录。</p><p><code>ur</code> , <code>unregister</code> - 取消注册发行版但不删除安装目录。</p><p><code>m</code> , <code>move</code> - 将发行版移动到新目录。</p><p><code>d</code> , <code>duplicate</code> - 在新目录中复制现有发行版。</p><p><code>e</code> , <code>export</code> - 将发行版的文件系统导出到<code>.tar.gz</code> 文件，该文件可以通过 <code>install</code> 命令安装。</p><p><code>r</code> , <code>run</code> - 在发行版中运行命令。</p><p><code>di</code> , <code>get-dir</code> - 获取发行版的安装目录。</p><p><code>gv</code> , <code>get-version</code> - 获取发行版的文件系统版本。</p><p><code>ge</code> , <code>get-env</code> - 获取发行版的默认环境变量。</p><p><code>se</code> , <code>set-env</code> - 设置发行版的默认环境变量。</p><p><code>ae</code> , <code>add-env</code> - 添加到发行版的默认环境变量。</p><p><code>re</code> , <code>remove-env</code> - 从发行版的默认环境变量中删除。</p><p><code>gu</code> , <code>get-uid</code> - 获取发行版的默认用户的 UID。</p><p><code>su</code> , <code>set-uid</code> - 设置发行版的默认用户的 UID。</p><p><code>gk</code> , <code>get-kernelcmd</code> - 获取发行版的默认内核命令行。</p><p><code>sk</code> , <code>set-kernelcmd</code> - 设置发行版的默认内核命令行。</p><p><code>gf</code> , <code>get-flags</code> - 获取发行版的一些标志。有关详细信息，请参考<a href="https://docs.microsoft.com/zh-cn/windows/win32/api/wslapi/ne-wslapi-wsl_distribution_flags">这里</a>。</p><p><code>sf</code> , <code>set-flags</code> - 设置发行版的一些标志。有关详细信息，请参考<a href="https://docs.microsoft.com/zh-cn/windows/win32/api/wslapi/ne-wslapi-wsl_distribution_flags">这里</a>。</p><p><code>s</code> , <code>shortcut</code> - 创建启动发行版的快捷方式。</p><p><code>ec</code> , <code>export-config</code> - 将发行版配置导出到 XML 文件。</p><p><code>ic</code> , <code>import-config</code> - 从 XML 文件导入发行版的配置。</p><p><code>sm</code> , <code>summary</code> - 获取发行版的一般信息。</p><h1 id="使用-lxrunoffline-安装-wsl"><a class="markdownIt-Anchor" href="#使用-lxrunoffline-安装-wsl"></a> 使用 LxRunOffline 安装 WSL</h1><p>与微软商店的安装方式不同，LxRunOf­fline 安装 WSL 更灵活，它可以安装任意发行版到任意目录，还可以自定义 WSL 名称。</p><p>如果你没有使用过 WSL ，首先以管理员身份运行 <code>Pow­er­Shell</code> ，输入下面的命令开启 “适用于 Linux 的 Win­dows 子系统” 功能，并重启。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure><ul><li>下载 <a href="https://docs.microsoft.com/en-us/windows/wsl/install-manual">WSL 官方离线包</a>，改后缀名为<code>.zip</code>，解压后可得到名为 <code>install.tar.gz</code> 的文件。</li><li>或者在 <a href="https://docs.microsoft.com/en-us/windows/wsl/install-manual">LxRunOffline WiKi</a> 中下载大佬们提供的镜像文件。</li></ul><p>输入以下命令进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline i -n &lt;WSL名称&gt; -d &lt;安装路径&gt; -f &lt;安装包路径&gt;.tar.gz</span><br></pre></td></tr></table></figure><blockquote><p>注意：加入<code>-s</code>参数可在桌面创建快捷方式。</p></blockquote><h1 id="使用-lxrunoffline-设置默认用户"><a class="markdownIt-Anchor" href="#使用-lxrunoffline-设置默认用户"></a> 使用 LxRunOffline 设置默认用户</h1><p>当修改过 WSL 的名称或目录后就无法通过<a href="https://docs.microsoft.com/en-us/windows/wsl/user-support">微软官方提供的方法</a>设置默认用户。这时可以使用 LxRunOf­fline 进行设置。</p><h2 id="设置普通用户为默认用户"><a class="markdownIt-Anchor" href="#设置普通用户为默认用户"></a> 设置普通用户为默认用户</h2><p>使用 LxRunOf­fline 新安装的 WSL 默认是以 root 用户登录，如果你需要默认以普通用户进行登录，就需要进行下面的操作。</p><p>首先运行 WSL ，输入以下命令创建用户：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -s /bin/bash &lt;用户名&gt;</span><br></pre></td></tr></table></figure><p>然后对该用户设置密码，输入命令后会提示输入两次密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd &lt;用户名&gt;</span><br></pre></td></tr></table></figure><p>授予该用户 sudo 权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -aG sudo &lt;用户名&gt;</span><br></pre></td></tr></table></figure><blockquote><p>为了保持和微软商店安装的效果一致，这里提及的方法是把用户添加到 sudo 用户组。</p></blockquote><p>查看用户 UID ，一般是 <code>1000</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span> -u &lt;用户名&gt;</span><br></pre></td></tr></table></figure><p>按 <code>Ctrl</code>+<code>D</code> 退出 WSL ，在 Pow­er­Shell 中输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline su -n &lt;WSL名称&gt; -v 1000</span><br></pre></td></tr></table></figure><h2 id="设置-root-为默认用户"><a class="markdownIt-Anchor" href="#设置-root-为默认用户"></a> 设置 root 为默认用户</h2><p>root 用户的 UID 为 <code>0</code>，所以可以直接在 Pow­er­Shell 输入以下命令进行设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline su -n &lt;WSL名称&gt; -v 0</span><br></pre></td></tr></table></figure><h1 id="使用-lxrunoffline-转移-wsl-安装目录"><a class="markdownIt-Anchor" href="#使用-lxrunoffline-转移-wsl-安装目录"></a> 使用 LxRunOffline 转移 WSL 安装目录</h1><p>LxRunOf­fline 可以对系统中已经安装的 WSL 进行目录转移操作，😂拯救爆满的 C 盘。</p><p>查看系统中已安装的 WSL 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline l</span><br></pre></td></tr></table></figure><p>输入命令对 WSL 的目录进行移动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline m -n &lt;WSL名称&gt; -d &lt;路径&gt;</span><br><span class="line">lxrunoffline m -n Ubuntu-18.04 -d G:\Ubuntu18.04</span><br></pre></td></tr></table></figure><p>最后查看路径，进行确认。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline di -n &lt;WSL名称&gt;</span><br><span class="line">lxrunoffline di -n Ubuntu-18.04</span><br></pre></td></tr></table></figure><h1 id="使用-lxrunoffline-备份和恢复-wsl"><a class="markdownIt-Anchor" href="#使用-lxrunoffline-备份和恢复-wsl"></a> 使用 LxRunOffline 备份和恢复 WSL</h1><p>使用 LxRunOf­fline 可以方便的对 WSL 进行备份和恢复，同样可以实现转移的操作，而且还可以在转移到其它电脑上。</p><h2 id="备份-wsl"><a class="markdownIt-Anchor" href="#备份-wsl"></a> 备份 WSL</h2><p>查看系统中已安装的 WSL 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -l</span><br></pre></td></tr></table></figure><p>然后输入需要备份的 WSL 名称和备份的目标路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline e -n &lt;WSL名称&gt; -f &lt;压缩包路径&gt;.tar.gz</span><br></pre></td></tr></table></figure><blockquote><p>类似但不等同于<code>wsl --export &lt;压缩包路径&gt;.tar</code>。LxRunOf­fline 备份完会生成一个<code>.xml</code>后缀的同名配置文件，比如<code>WSL.tar.gz.xml</code>。</p></blockquote><h2 id="恢复-wsl"><a class="markdownIt-Anchor" href="#恢复-wsl"></a> 恢复 WSL</h2><p>输入以下命令可以恢复已备份的 WSL，和安装是相同的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline i -n &lt;WSL名称&gt; -d &lt;安装路径&gt; -f &lt;压缩包路径&gt;.tar.gz</span><br></pre></td></tr></table></figure><blockquote><p>类似但不等同于<code>wsl --import &lt;安装路径&gt; &lt;压缩包路径&gt;.tar</code>。LxRunOf­fline 会读取备份时生成的配置文件并写入配置，前提是同目录且同名。否则你需要加入<code>-c</code>参数指定配置文件。</p></blockquote><h1 id="使用-lxrunoffline-运行-wsl"><a class="markdownIt-Anchor" href="#使用-lxrunoffline-运行-wsl"></a> 使用 LxRunOffline 运行 WSL</h1><p>和原生运行方式本质上是一样的。</p><h2 id="创建快捷方式"><a class="markdownIt-Anchor" href="#创建快捷方式"></a> 创建快捷方式</h2><p>使用微软应用商店安装的 WSL 会在开始菜单添加应用图标（快捷方式），而使用 LxRunOf­fline 安装 WSL 时可以通过添加 <code>-s</code> 参数在桌面创建快捷方式。如果你安装时忘记添加参数，可以使用以下命令进行创建。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline s -n &lt;WSL名称&gt; -f &lt;快捷方式路径&gt;.lnk</span><br></pre></td></tr></table></figure><h2 id="使用命令运行指定-wsl"><a class="markdownIt-Anchor" href="#使用命令运行指定-wsl"></a> 使用命令运行指定 WSL</h2><p>在有多个 WSL 的情况下，可以指定运行某个发行版。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline r -n &lt;WSL名称&gt;</span><br></pre></td></tr></table></figure><blockquote><p>等同于<code>wsl -d</code></p></blockquote><h2 id="设置默认-wsl"><a class="markdownIt-Anchor" href="#设置默认-wsl"></a> 设置默认 WSL</h2><p>设置默认 WSL 后，可以在 <code>cmd</code> 和 <code>powershell</code> 中输入 <code>wsl</code> 直接调用默认的 WSL 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline sd -n &lt;WSL名称&gt;</span><br></pre></td></tr></table></figure><blockquote><p>等同于<code>wsl -s</code></p></blockquote><h1 id="使用-lxrunoffline-修改-wsl-名称"><a class="markdownIt-Anchor" href="#使用-lxrunoffline-修改-wsl-名称"></a> 使用 LxRunOffline 修改 WSL 名称</h1><p>查看 WSL 名称。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -l</span><br></pre></td></tr></table></figure><p>查看 WSL 安装目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline di -n &lt;WSL名称&gt;</span><br></pre></td></tr></table></figure><p>导出指定的 WSL 配置文件到目标路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline ec -n &lt;WSL名称&gt; -f &lt;配置文件路径&gt;.xml</span><br></pre></td></tr></table></figure><blockquote><p>配置信息可以输入<code>lxrunoffline sm -n</code>查看</p></blockquote><p>取消注册（这个操作不会删除目录）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline ur -n &lt;WSL名称&gt;</span><br></pre></td></tr></table></figure><p>使用新名称注册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lxrunoffline rg -n &lt;WSL名称&gt; -d &lt;WSL路径&gt; -c &lt;配置文件路径&gt;.xml</span><br></pre></td></tr></table></figure><p>📖<a href="https://github.com/DDoSolitary/LxRunOffline">参考</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> WSL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> WSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows文件系统区分大小写</title>
      <link href="/skydream/56e7/"/>
      <url>/skydream/56e7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Win­dows 的文件系统默认不区分大小写。如果你使用 WSL (Win­dows Sub­sys­tem for Linux) 通过 DrvFs 访问 Win­dows 下的目录来进行一些像编译这样的在 Linux 中习以为常的操作时就可能会遇到问题。</p><h1 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h1><blockquote><p>首先声明环境： Windows10 1909 --18363.476</p></blockquote><p>以<strong>管理员权限</strong>运行 <code>PowerShell</code> 输入下面命令可以开启某个目录区分大小写。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fsutil.exe file setCaseSensitiveInfo &lt;path&gt; <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>如果不需要区分大小写的属性可以设置为禁用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fsutil.exe file setCaseSensitiveInfo &lt;path&gt; <span class="built_in">disable</span></span><br></pre></td></tr></table></figure><p>执行下面的命令可以查看某个目录是否区分大小写。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fsutil.exe file queryCaseSensitiveInfo &lt;path&gt;</span><br></pre></td></tr></table></figure><p><code>WSL Ubuntu18.04</code>系统默认文件路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\[your name]\AppData\Local\Packages\CanonicalGroupLimited.Ubuntu18.04onWindows_79rhkp1fndgsc\LocalState\rootfs</span><br></pre></td></tr></table></figure><p><img src="/skydream/56e7/Windows01.jpg" style="zoom:50%;"></p><p><code>请注意：</code>按目录区分大小写标志不会被继承，所以建议新建目录修改成功后再使用。对于目录中已有的文件，需要把文件剪切到其它目录，然后再<code>复制</code>回来才可以。</p><p>📖<a href="https://devblogs.microsoft.com/commandline/per-directory-case-sensitivity-and-wsl/">Per-directory case sensitivity and WSL</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10子系统(WSL)环境部署</title>
      <link href="/skydream/d05c/"/>
      <url>/skydream/d05c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="什么是wsl"><a class="markdownIt-Anchor" href="#什么是wsl"></a> 什么是WSL？</h1><p>Windows Linux子系统（<a href="https://docs.microsoft.com/en-us/windows/wsl/about">WSL</a>）是Windows 10中的一种环境，用于以类似于<a href="https://wiki.ubuntu.com/LinuxContainers">LinuxContainers</a>的方式运行未修改的Linux二进制文件。Windows Linux子系统使开发人员可以直接在未经修改的Windows上运行GNU / Linux环境，包括大多数命令行工具，实用程序和应用程序，而不会增加虚拟机的开销，随window启动，随时可用，并且可以直接访问Window文件，非常方便。</p><h1 id="wsl安装"><a class="markdownIt-Anchor" href="#wsl安装"></a> WSL安装</h1><blockquote><p>首先声明环境为 Windows10 1909  --18363.476</p></blockquote><p>在安装用于WSL的任何Linux发行版之前，必须确保启用<code>适用于Linux的Windows子系统</code>可选功能：</p><p>以管理员身份打开PowerShell并运行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Enable-WindowsOptionalFeature</span> <span class="literal">-Online</span> <span class="literal">-FeatureName</span> Microsoft<span class="literal">-Windows-Subsystem-Linux</span></span><br></pre></td></tr></table></figure><p>出现提示时，请重新启动计算机。</p><p>从<code>Microsoft Store</code>安装，本人安装的是<code>Ubuntu 18.04 LTS</code>。然后选择您喜欢的Linux发行版。</p><p>安装完成后首次打开会要求设置账户和密码，设置完成即可使用。<code>注意：账户好像只能小写。</code></p><p><img src="/skydream/d05c/wsl000.jpg" style="zoom:50%;"></p><h1 id="wsl配置"><a class="markdownIt-Anchor" href="#wsl配置"></a> WSL配置</h1><h2 id="设置从windows-terminal打开wsl时进入linux用户主目录"><a class="markdownIt-Anchor" href="#设置从windows-terminal打开wsl时进入linux用户主目录"></a> 设置从Windows Terminal打开wsl时进入Linux用户主目录</h2><p>当直接通过Windows Terminal的标题栏打开wsl时，默认会进入windows的用户目录，而这明显不属于Linux的目录结构，无法使用Linux的读写特性。</p><h3 id="解决方法"><a class="markdownIt-Anchor" href="#解决方法"></a> 解决方法</h3><p><strong>确定<code>commandline</code></strong></p><p>在微软商店(Windows Store)中找到你当初安装的Linux发行版，从“简介-&gt;更多”中找一下启动命令。</p><p>例如：Ubuntu 是 <code>ubuntu</code>, Ubuntu18.04是 <code>ubuntu1804</code>, Ubuntu20.04是 <code>ubuntu2004</code>。</p><p><strong>打开配置文件</strong></p><p>通过“设置”，打开Windows Terminal的配置文件。</p><p>在配置文件的<code>profiles</code>-&gt;<code>list</code>中找的你的Linux发行版,添加一行commandline：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;commandline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ubuntu2004&quot;</span></span><br></pre></td></tr></table></figure><h2 id="配置sudo免密"><a class="markdownIt-Anchor" href="#配置sudo免密"></a> 配置sudo免密</h2><p>备份sudo文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/sudoers sudoers20191128</span><br></pre></td></tr></table></figure><p>注意，此文件只能用vi编辑</p><p>先尝试使用visudo编辑sudoers</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo visudo</span><br></pre></td></tr></table></figure><p>如果以上指令失败则使用vi打开编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/sudoers</span><br></pre></td></tr></table></figure><p>找到 <code>root ALL=(ALL:ALL) ALL</code>，在下边添加:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lijian ALL=(ALL:ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure><p>如果要让所有sudo指令免密，修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sudo ALL=(ALL:ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：用户名后是<code>tab</code>，不是<code>空格</code>。</p><p><img src="/skydream/d05c/wsl003.jpg" style="zoom:50%;"></p><p>重新登录测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>如果不提示输入密码则配置成功。</p><h3 id="linux-ubuntu-2004-su-root-命令-认证失败"><a class="markdownIt-Anchor" href="#linux-ubuntu-2004-su-root-命令-认证失败"></a> linux ubuntu-20.04 su root 命令 认证失败</h3><p>解决方式：更新密码即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sky@LiJian:/mnt/c/Users/sky$ sudo passwd</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br><span class="line">sky@LiJian:/mnt/c/Users/sky$ su</span><br><span class="line">Password:</span><br><span class="line">root@LiJian:/mnt/c/Users/sky<span class="comment"># su sky</span></span><br><span class="line">sky@LiJian:/mnt/c/Users/sky$</span><br></pre></td></tr></table></figure><h2 id="切换源"><a class="markdownIt-Anchor" href="#切换源"></a> 切换源</h2><p>默认源速度缓慢，切换到阿里源。</p><p>首先将原配置文件备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure><p>使用vim打开，WSL竟然自带vim，有点意思。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>这里提供👉<a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">Ubuntu 的软件源，</a>请自行更改。</p><p>在vim中输入如下的控制代码：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:%s/security.ubuntu/mirrors.aliyun/g</span><br><span class="line">:%s/archive.ubuntu/mirrors.aliyun/g</span><br></pre></td></tr></table></figure><p>保存并退出。执行以下代码更新软件包到最新状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update&amp;&amp;sudo apt-get upgrade -y</span><br></pre></td></tr></table></figure><p><img src="/skydream/d05c/wsl004.jpg" style="zoom:50%;"></p><h2 id="解决中文乱码问题"><a class="markdownIt-Anchor" href="#解决中文乱码问题"></a> 解决中文乱码问题</h2><p>安装中文语言包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install language-pack-zh-hans language-pack-zh-hans-base</span><br></pre></td></tr></table></figure><p>运行下述代码，现在可以正常显示中文了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fonts-noto-cjk</span><br></pre></td></tr></table></figure><p>然后，修改<code>/etc/environment</code>（在文件的末尾追加）：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LANG=<span class="string">&quot;zh_CN.UTF-8&quot;</span></span><br><span class="line">LANGUAGE=<span class="string">&quot;zh_CN:zh:en_US:en&quot;</span></span><br></pre></td></tr></table></figure><p>再修改<code>/var/lib/locales/supported.d/local</code>(没有这个文件就新建，同样在末尾追加)：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">en_US.UTF-<span class="number">8</span> UTF-<span class="number">8</span></span><br><span class="line">zh_CN.UTF-<span class="number">8</span> UTF-<span class="number">8</span></span><br><span class="line">zh_CN.GBK GBK</span><br><span class="line">zh_CN GB2312</span><br></pre></td></tr></table></figure><p>对于中文乱码是空格的情况，安装中文字体解决。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install fonts-droid-fallback ttf-wqy-zenhei ttf-wqy-microhei fonts-arphic-ukai fonts-arphic-uming</span><br></pre></td></tr></table></figure><p>最后，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo locale-gen</span><br></pre></td></tr></table></figure><p>问题解决，中文显示正常。</p><h3 id="修改默认语言环境为中文可选"><a class="markdownIt-Anchor" href="#修改默认语言环境为中文可选"></a> 修改默认语言环境为中文（可选）</h3><p>设置本地化环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;LANG=zh_CN.UTF-8&quot;</span> &gt;&gt; ~/.profile</span><br></pre></td></tr></table></figure><p><img src="/skydream/d05c/wsl005.jpg" style="zoom:50%;"></p><h2 id="安装man手册"><a class="markdownIt-Anchor" href="#安装man手册"></a> 安装man手册</h2><p>Ubuntu默认是没有完全安装<a href="https://www.kernel.org/doc/man-pages/download.html">man手册</a>的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://mirrors.edge.kernel.org/pub/linux/docs/man-pages/man-pages-5.04.tar.gz</span><br><span class="line">tar xvzf man-pages-5.04.tar.gz</span><br><span class="line"><span class="built_in">cd</span> man-pages-5.04</span><br><span class="line">sudo make install</span><br><span class="line">mandb  <span class="comment">#更新</span></span><br></pre></td></tr></table></figure><p>为了显示中文手册，下载manpages-zh包。</p><p>可以直接运行如下命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install  manpages-zh</span><br></pre></td></tr></table></figure><p>查看man安装路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -L manpages-zh | less</span><br></pre></td></tr></table></figure><p>在<code>~/.bashrc</code>中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> cman=<span class="string">&#x27;man -M /usr/share/man/zh_CN&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>查看是是否成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cman <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><img src="/skydream/d05c/wsl006.jpg" style="zoom:50%;"></p><h1 id="remote-wsl-插件"><a class="markdownIt-Anchor" href="#remote-wsl-插件"></a> Remote - WSL 插件</h1><p><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl">Remote - WSL</a></p><p>安装后可以：</p><ul><li>在WSL中转到任何文件夹并键入： <code>code .</code>启动VS Code。</li><li>按<code>F1</code>，输入<code>Remote-WSL：New Window</code>，然后按Enter。使用文件菜单打开您的文件夹。</li></ul><p><img src="/skydream/d05c/wsl001.jpg" style="zoom:50%;"></p><h1 id="安装oh-my-zsh"><a class="markdownIt-Anchor" href="#安装oh-my-zsh"></a> 安装oh-my-zsh</h1><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zsh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</span><br></pre></td></tr></table></figure><p>安装Powerline字体</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install fonts-powerline</span><br></pre></td></tr></table></figure><p>将默认的shell从bash改为zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh</span><br></pre></td></tr></table></figure><h2 id="更改主题"><a class="markdownIt-Anchor" href="#更改主题"></a> 更改主题</h2><p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes">官网主题</a></p><p>主题的路径在<code>~/.oh-my-zsh/themes</code>, 使某一主题生效的文件为<code>~/.zshrc</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure><p>修改<code>ZSH_THEME=&quot;ys&quot;</code></p><h2 id="插件"><a class="markdownIt-Anchor" href="#插件"></a> 插件</h2><p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins">相关插件</a></p><h3 id="git"><a class="markdownIt-Anchor" href="#git"></a> Git</h3><p>默认已开启</p><p><strong>作用</strong></p><p>可以使用各种 <code>git</code> 命令缩写。</p><h3 id="z"><a class="markdownIt-Anchor" href="#z"></a> Z</h3><p><code>oh-my-zsh</code> 内置组件 Z</p><p><strong>作用</strong> 目录间快速跳转,不用再一直 <code>cd</code> 了</p><p>使用<code>Z</code>的缩写 <code>z</code></p><p><code>cd</code> 命令进入  <code>/home/lijian/.oh-my-zsh/</code>文件夹，下一次再想进入 <code>.oh-my-zsh</code> 文件夹的时候,直接 <code>z .oh-my-zsh</code>即可,或者只输入 <code>.oh-my-zsh</code>或一部分<code>.oh</code> 都行</p><p>删除无效路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z -x 无效路径</span><br></pre></td></tr></table></figure><h3 id="zsh-autosuggestions"><a class="markdownIt-Anchor" href="#zsh-autosuggestions"></a> zsh-autosuggestions</h3><p><a href="https://github.com/zsh-users/zsh-autosuggestions">官网</a></p><p><strong>作用</strong> 效率神器</p><p>输入命令时，会给出建议的命令（灰色部分）按键盘 → 补全</p><p>如果感觉 → 补全不方便，还可以自定义补全的快捷键，(输入<code>，</code>会有问题，不推荐)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bindkey</span> <span class="string">&#x27;,&#x27;</span> autosuggest-accept</span><br></pre></td></tr></table></figure><p>在 <code>.zshrc</code> 文件添加这句话即可。</p><p>📖<a href="https://www.sunzhongwei.com/mip/modify-the-wsl-ubuntu-1804-default-source-for-ali-cloud-images">参考1</a>，<a href="https://juejin.im/entry/5ae00e54f265da0b8635ea5c">参考2</a>，<a href="https://wu-kan.github.io/posts/linux/Windows-Subsystem-for-Linux">参考3</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> WSL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> WSL </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Terminal美化</title>
      <link href="/skydream/39fb/"/>
      <url>/skydream/39fb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Windows Terminal是微软在Build 2019上推出了一款面向Windows10的命令行程序，这款程序集合了Windows上的PowerShell、CMD以及Windows Subsystem for Linux于一身，现已上架<strong>Microsoft Store</strong>，体验非常不错。</p><p><img src="/skydream/39fb/windowsterminal001.jpg" style="zoom:50%;"></p><h2 id="软件安装"><a class="markdownIt-Anchor" href="#软件安装"></a> 软件安装</h2><ul><li><a href="https://www.microsoft.com/zh-cn/p/windows-terminal-preview/9n0dx20hk701?activetab=pivot:overviewtab">Microsoft Store</a></li><li><a href="https://github.com/microsoft/terminal">Github</a></li></ul><h2 id="windows-terminal美化"><a class="markdownIt-Anchor" href="#windows-terminal美化"></a> Windows Terminal美化</h2><h3 id="改造powershell"><a class="markdownIt-Anchor" href="#改造powershell"></a> 改造PowerShell</h3><p>默认的PowerShell并不美观，我的做法是在PowerShell里面加一个PowerLine，然后剩下的，在Windows Terminal中配置。</p><p>安装PowerLine的方法很简单，我们要先安装oh-my-posh，首先打开一个PowerShell，输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> posh<span class="literal">-git</span> <span class="literal">-Scope</span> CurrentUser</span><br><span class="line"><span class="built_in">Install-Module</span> <span class="built_in">oh</span><span class="literal">-my-posh</span> <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure><p>如果你使用管理员权限打开PowerShell并且想把oh-my-posh安装到所有用户，则输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Install-Module</span> posh<span class="literal">-git</span></span><br><span class="line"><span class="built_in">Install-Module</span> <span class="built_in">oh</span><span class="literal">-my-posh</span></span><br></pre></td></tr></table></figure><p>这里如果让你允许什么不可信的来源，输入<code>Y</code>表示同意即可。</p><p>安装完成后打开<code>~\Documents\WindowsPowerShell</code>，新建文本文档，叫做<code>Microsoft.PowerShell_profile.ps1</code>（记得开拓展名显示），输入以下内容，保存。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> posh<span class="literal">-git</span></span><br><span class="line"><span class="built_in">Import-Module</span> <span class="built_in">oh</span><span class="literal">-my-posh</span></span><br><span class="line"><span class="built_in">Set-Theme</span> PowerLine <span class="comment">#主题 PowerLine Agnoster Sorin</span></span><br></pre></td></tr></table></figure><p>这样，在每次PoweShell打开的时候都能启用PowerLine主题。</p><p>**注意：**如果你的电脑里没有安装Git，在输入Import-Module posh-git会报错，解决方法是<a href="https://git-scm.com/">安装Git</a>或者把这一行去掉。</p><h3 id="powerline字体"><a class="markdownIt-Anchor" href="#powerline字体"></a> PowerLine字体</h3><p>可是这样，PowerShell打开的时候仍有乱码，Powerline 字体可以完美解决，下载安装使用即可。</p><ul><li><a href="https://github.com/ueaner/vimrc/blob/master/support/POWERLINE_FONTS.md">Powerline 字体</a></li><li>我喜欢的<a href="https://github.com/Znuff/consolas-powerline">consolas</a></li></ul><h3 id="windows-terminal主题修改"><a class="markdownIt-Anchor" href="#windows-terminal主题修改"></a> Windows Terminal主题修改</h3><p>安装完Windows Terminal后系统默认PowerShell基本就用不到了，所以只要美化Windows Terminal即可。</p><p>首先<code>Ctrl+，</code>打开设置，修改相关配置，相关配置可以参考<a href="https://github.com/microsoft/terminal/blob/master/doc/cascadia/SettingsSchema.md">Documentation</a> 。</p><p>主题可以自己配置</p><ul><li><a href="https://github.com/microsoft/terminal/tree/master/src/tools/ColorTool">ColorTool</a></li><li><a href="https://terminal.sexy/">terminal.sexy</a></li></ul><p>本人使用的2套主题是<code>One Half Light</code> ，<code>One Half Dark</code>，在<code>schemes</code>添加后在<code>colorScheme</code>选择即可。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Add custom color schemes to this array</span></span><br><span class="line"><span class="attr">&quot;schemes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#282C34&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;black&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#282C34&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;blue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#61AFEF&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightBlack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#5A6374&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightBlue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#61AFEF&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightCyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#56B6C2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightGreen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#98C379&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightPurple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#C678DD&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightRed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#E06C75&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightWhite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#DCDFE4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightYellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#E5C07B&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;cyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#56B6C2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#DCDFE4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;green&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#98C379&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;One Half Dark&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;purple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#C678DD&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;red&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#E06C75&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;white&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#DCDFE4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;yellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#E5C07B&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FAFAFA&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;black&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#383A42&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;blue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#0184BC&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightBlack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#4F525D&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightBlue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#61AFEF&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightCyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#56B5C1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightGreen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#98C379&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightPurple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#C577DD&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightRed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#DF6C75&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightWhite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brightYellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#E4C07A&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;cyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#0997B3&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#383A42&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;green&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#50A14F&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;One Half Light&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;purple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#A626A4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;red&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#E45649&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;white&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FAFAFA&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;yellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#C18301&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="添加windows-terminal到鼠标右键菜单"><a class="markdownIt-Anchor" href="#添加windows-terminal到鼠标右键菜单"></a> 添加Windows Terminal到鼠标右键菜单</h2><p>创建图标</p><p>打开命令行，输入命令创建文件夹。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &quot;C:\Users\[user_name]\AppData\Local\terminal&quot;</span><br></pre></td></tr></table></figure><p>注意：请把<code>[user_name]</code>改成自己电脑的用户名。</p><p>到 <a href="https://github.com/microsoft/terminal/tree/master/res">terminal.ico</a> 下载图标放入terminal文件夹。</p><p>写入注册表<br>创建一个<code>.reg</code>文件，右键菜单出现Windows Terminal有两种方法。一种是按<code>shift+右键</code>,另一种是直接<code>右键</code>。</p><p><strong>shift+ 右键</strong><br>把下面的内容复制到<code>.reg</code>文件内</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\wt]</span><br><span class="line">@=&quot;Windows terminal&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;C:\Users\[user_name]\AppData\\Local\\terminal\\terminal.ico&quot;</span><br><span class="line">&quot;Extended&quot;=&quot;&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\wt\command]</span><br><span class="line">@=&quot;C:\Users\[user_name]\AppData\Local\Microsoft\WindowsApps\wt.exe&quot;</span><br></pre></td></tr></table></figure><p>注意：请把<code>[user_name]</code>改成自己电脑的用户名。</p><p><strong>右键</strong><br>把下面的內容复制到<code>.reg</code>文件内</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\wt]</span><br><span class="line">@=&quot;Windows terminal&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;C:\Users\[user_name]\AppData\\Local\\terminal\\terminal.ico&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\wt\command]</span><br><span class="line">@=&quot;C:\Users\[user_name]\AppData\Local\Microsoft\WindowsApps\wt.exe&quot;</span><br></pre></td></tr></table></figure><p>注意：请把<code>[user_name]</code>改成自己电脑的用户名。</p><p><img src="/skydream/39fb/windowsterminal004.jpg" style="zoom:50%;"></p><h2 id="在visual-studio-code中启用"><a class="markdownIt-Anchor" href="#在visual-studio-code中启用"></a> 在Visual Studio Code中启用</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;terminal.integrated.shell.windows&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;terminal.integrated.fontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Consolas NF,KaiTi&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p><img src="/skydream/39fb/windowsterminal003.jpg" style="zoom:50%;"><br><strong>最后呢😁</strong></p><p><img src="/skydream/39fb/windowsterminal005.jpg" style="zoom:50%;"></p><p>📖<a href="https://jerryc.me/posts/c621cf12">参考1</a>，<a href="https://sspai.com/post/52868">参考2</a>，<a href="https://sspai.com/post/5290">参考3</a>。</p><hr>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive去重方法简记</title>
      <link href="/skydream/2506/"/>
      <url>/skydream/2506/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="hive去重方法简记"><a class="markdownIt-Anchor" href="#hive去重方法简记"></a> Hive去重方法简记</h2><h3 id="distinct用法"><a class="markdownIt-Anchor" href="#distinct用法"></a> Distinct用法</h3><p>（1）当<code>distinct</code>应用到多个字段的时候，<code>distinct</code>必须放在开头，其应用的范围是其后面的所有字段，而不只是紧挨着它的一个字段，而且<code>distinct</code>只能放到所有字段的前面。</p><p>（2）<code>distinct</code>对<code>NULL</code>是不进行过滤的，即返回的结果中是包含<code>NULL</code>值的。</p><p>（3）聚合函数中的<code>DISTINCT</code>,如 <code>COUNT( DISTINCT A)</code> 会<code>过滤掉为NULL</code> 的项。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> id,age <span class="keyword">from</span> tmp.tmp01</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> id)<span class="keyword">as</span> num <span class="keyword">from</span> tmp.tmp01</span><br></pre></td></tr></table></figure><p>注意：统计函数一般和<code>group by</code>搭配使用。</p><h3 id="group-by用法"><a class="markdownIt-Anchor" href="#group-by用法"></a> group by用法</h3><p>对group by 后面所有字段去重，并不只是对一列去重。</p><h4 id="示例一"><a class="markdownIt-Anchor" href="#示例一"></a> 示例一</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.id</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> id,age</span><br><span class="line">   <span class="keyword">from</span> tmp.tmp01</span><br><span class="line">   <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span></span><br><span class="line">   ) a</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.id</span><br></pre></td></tr></table></figure><p>**注意，**对id去重时可以用group by 或者distinct id，两者去重后的id排序时一致的，但是加了distinct(group by)后，<strong>distinct字段自带排序功能</strong>，会先按照distinct后面的字段进行排序,即已经改变了子查询中order by的排序，但是结果与正确结果中的id是一样的，只是排序不同罢了，以上这种写法是不优雅的，所以是不推荐的。</p><h4 id="示例二"><a class="markdownIt-Anchor" href="#示例二"></a> 示例二</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.id</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> id,<span class="built_in">max</span>(age) <span class="keyword">as</span> age</span><br><span class="line">     <span class="keyword">from</span> tmp.tmp01</span><br><span class="line">     <span class="keyword">group</span> <span class="keyword">by</span> id</span><br><span class="line">     <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span></span><br><span class="line">   ) a</span><br></pre></td></tr></table></figure><h3 id="row_number-over窗口函数"><a class="markdownIt-Anchor" href="#row_number-over窗口函数"></a> ROW_Number() over()窗口函数</h3><p>注意：<code>ROW_Number() over (partition by id order by number DESC)</code> 给每个<code>id</code>加一列按<code>number</code> 倒叙的<code>rank</code>值，取<code>rank=1</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> m.id,m.age,m.number,m.rank</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> id,age,number,<span class="built_in">ROW_Number</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> id <span class="keyword">order</span> <span class="keyword">by</span> number) rank</span><br><span class="line">   <span class="keyword">from</span> tmp.tmp01</span><br><span class="line">   <span class="keyword">where</span> id<span class="operator">!=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">and</span> number<span class="operator">!=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> age<span class="operator">!=</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">     ) m</span><br><span class="line"><span class="keyword">where</span> m.rank<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="示例三"><a class="markdownIt-Anchor" href="#示例三"></a> 示例三</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> n.id</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> m.id,m.age</span><br><span class="line">     <span class="keyword">from</span> (<span class="keyword">select</span> id,age,<span class="built_in">ROW_Number</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> id <span class="keyword">order</span> <span class="keyword">by</span> id) rank</span><br><span class="line">         <span class="keyword">from</span> tmp.tmp01</span><br><span class="line">          ) m </span><br><span class="line">     <span class="keyword">where</span> m.rank<span class="operator">=</span><span class="number">1</span></span><br><span class="line">    )n</span><br></pre></td></tr></table></figure><h3 id="去重性能"><a class="markdownIt-Anchor" href="#去重性能"></a> 去重性能</h3><p>使用distinct会将所有的id都shuffle到一个 reduce里面，这就是我们所说的数据倾斜，都倾斜到一个reduce ，速度当然会慢。</p><p>由于没有手动指定reduce的个数，Hive会根据数据的大小动态的指定reduce大小，你也可以手动指定</p><p><code>hive&gt; set mapred.reduce.tasks=100</code>，所以如果数据量特别大的情况下，尽量不要使用distinct。</p><p>具体使用来说得看具体情况，直接使用distinct可读性好，数据量如果不大的话推荐使用，如果数据太大了，性能受到影响了，能使用group by代替distinct 就不要使用distinct 。</p><p><code>ROW_Number() over()窗口函数</code>本身是排序用的函数，功能上可以实现去重，但是不推荐去重使用。</p><hr>]]></content>
      
      
      <categories>
          
          <category> Hive </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PySpark|DataFrame操作指南</title>
      <link href="/skydream/994/"/>
      <url>/skydream/994/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近有用到PySpark及一些DataFrame之类的操作，简单做个整理。</p><h1 id="查"><a class="markdownIt-Anchor" href="#查"></a> 查</h1><h2 id="行元素查询操作"><a class="markdownIt-Anchor" href="#行元素查询操作"></a> 行元素查询操作</h2><p>像SQL那样打印列表前20元素<br>show函数内可用int类型指定要打印的行数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.show()</span><br><span class="line">df.show(<span class="number">30</span>)</span><br></pre></td></tr></table></figure><p>查询概况,获取指定字段的统计信息<code>describe(cols: String*)</code></p><p>这个方法可以动态的传入一个或多个String类型的字段名，结果仍然为DataFrame对象，用于统计数值类型字段的统计值，比如count, mean, stddev, min, max等。<br>使用方法如下，其中c1字段为字符类型，c2字段为整型，c4字段为浮点型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbcDF .describe(<span class="string">&quot;c1&quot;</span> , <span class="string">&quot;c2&quot;</span>, <span class="string">&quot;c4&quot;</span> ).show()</span><br></pre></td></tr></table></figure><p>以及查询类型，之前是<code>type</code>，现在是<code>df.printSchema()</code>以树的形式打印概要。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root</span><br><span class="line"> |-- user_pin: string (nullable = true)</span><br><span class="line"> |-- a: string (nullable = true)</span><br><span class="line"> |-- b: string (nullable = true)</span><br><span class="line"> |-- c: string (nullable = true)</span><br><span class="line"> |-- d: string (nullable = true)</span><br><span class="line"> |-- e: string (nullable = true)</span><br></pre></td></tr></table></figure><p>如上图所示，只是打印出来。</p><p><code>first, head, take, takeAsList：</code>获取若干行记录<br>这里列出的四个方法比较类似，其中</p><ul><li><code>first</code>获取第一行记录</li><li><code>head</code>获取第一行记录，<code>head(n: Int)</code>获取前n行记录</li><li><code>take(n: Int)</code>获取前n行数据</li><li><code>takeAsList(n: Int)</code>获取前n行数据，并以<code>List</code>的形式展现，以Row或者Array[Row]的形式返回一行或多行数据。</li></ul><p><code>first</code>和<code>head</code>功能相同。</p><p><code>take</code>和<code>takeAsList</code>方法会将获得到的数据返回到<code>Driver</code>端，所以，使用这两个方法时需要注意数据量，以免<code>Driver</code>发生<code>OutOfMemoryError</code></p><p>获取头几行到本地：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ist = df.head(<span class="number">3</span>)   <span class="comment"># Example: [Row(a=1, b=1), Row(a=2, b=2), ... ...]</span></span><br><span class="line"><span class="built_in">list</span> = df.take(<span class="number">5</span>)   <span class="comment"># Example: [Row(a=1, b=1), Row(a=2, b=2), ... ...]</span></span><br></pre></td></tr></table></figure><p>查询总行数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int_num = df.count()</span><br></pre></td></tr></table></figure><p>取别名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.select(df.age.alias(<span class="string">&#x27;age_value&#x27;</span>),<span class="string">&#x27;name&#x27;</span>)</span><br></pre></td></tr></table></figure><p>查询某列为null的行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> isnull</span><br><span class="line">df = df.<span class="built_in">filter</span>(isnull(<span class="string">&quot;col_a&quot;</span>))</span><br></pre></td></tr></table></figure><p>输出<code>list</code>类型，<code>list</code>中每个元素是Row类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = df.collect()</span><br></pre></td></tr></table></figure><p>注：此方法将所有数据全部导入到本地，返回一个Array对象</p><p>去重set操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.select(<span class="string">&#x27;columns&#x27;</span>).distinct().show()</span><br></pre></td></tr></table></figure><p>跟<code>py</code>中的set一样，可以<code>distinct()</code>一下去重，同时也可以<code>.count()</code>计算剩余个数</p><p>随机抽样<br>随机抽样有两种方式，一种是在HIVE里面查数随机；另一种是在<code>pyspark</code>之中。</p><p><code>HIVE</code>里面查数随机</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sql</span> <span class="operator">=</span> &quot;select * from data order by rand()  limit 2000&quot;</span><br></pre></td></tr></table></figure><p><code>pyspark</code>之中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sample = result.sample(<span class="literal">False</span>,<span class="number">0.5</span>,<span class="number">0</span>) <span class="comment"># randomly select 50% of lines</span></span><br></pre></td></tr></table></figure><h2 id="列元素操作"><a class="markdownIt-Anchor" href="#列元素操作"></a> 列元素操作</h2><p>获取Row元素的所有列名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = Row(age=<span class="number">11</span>, name=<span class="string">&#x27;Alice&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> r.columns    <span class="comment">#  [&#x27;age&#x27;, &#x27;name&#x27;]</span></span><br></pre></td></tr></table></figure><p>选择一列或多列：<code>select</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&quot;age&quot;</span>]</span><br><span class="line">df.age</span><br><span class="line">df.select(“name”)</span><br><span class="line">df.select(df[‘name’], df[‘age’]+<span class="number">1</span>)</span><br><span class="line">df.select(df.a, df.b, df.c)    <span class="comment"># 选择a、b、c三列</span></span><br><span class="line">df.select(df[<span class="string">&quot;a&quot;</span>], df[<span class="string">&quot;b&quot;</span>], df[<span class="string">&quot;c&quot;</span>])    <span class="comment"># 选择a、b、c三列</span></span><br></pre></td></tr></table></figure><p>重载的<code>select</code>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbcDF.select(jdbcDF( <span class="string">&quot;id&quot;</span> ), jdbcDF( <span class="string">&quot;id&quot;</span>) + <span class="number">1</span> ).show( false)</span><br></pre></td></tr></table></figure><p>会同时显示<code>id列 + id + 1列</code></p><p>还可以用<code>where</code>按条件选择</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbcDF .where(<span class="string">&quot;id = 1 or c1 = &#x27;b&#x27;&quot;</span> ).show()</span><br></pre></td></tr></table></figure><h2 id="排序"><a class="markdownIt-Anchor" href="#排序"></a> 排序</h2><p><code>orderBy</code>和<code>sort</code>：按指定字段排序，默认为升序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.orderBy(train.Purchase.desc()).show(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">+-------+----------+------+-----+----------+-------------+--------------------------+--------------+------------------+------------------+------------------+--------+</span><br><span class="line">|User_ID|Product_ID|Gender|  Age|Occupation|City_Category|Stay_In_Current_City_Years|Marital_Status|Product_Category_1|Product_Category_2|Product_Category_3|Purchase|</span><br><span class="line">+-------+----------+------+-----+----------+-------------+--------------------------+--------------+------------------+------------------+------------------+--------+</span><br><span class="line">|1003160| P00052842|     M|26-35|        17|            C|                         3|             0|                10|                15|              null|   23961|</span><br><span class="line">|1002272| P00052842|     M|26-35|         0|            C|                         1|             0|                10|                15|              null|   23961|</span><br><span class="line">|1001474| P00052842|     M|26-35|         4|            A|                         2|             1|                10|                15|              null|   23961|</span><br><span class="line">|1005848| P00119342|     M|51-55|        20|            A|                         0|             1|                10|                13|              null|   23960|</span><br><span class="line">|1005596| P00117642|     M|36-45|        12|            B|                         1|             0|                10|                16|              null|   23960|</span><br><span class="line">+-------+----------+------+-----+----------+-------------+--------------------------+--------------+------------------+------------------+------------------+--------+</span><br><span class="line">only showing top 5 rows</span><br></pre></td></tr></table></figure><p>按指定字段排序。加个<code>-</code>表示降序排序</p><h2 id="抽样"><a class="markdownIt-Anchor" href="#抽样"></a> 抽样</h2><p><code>sample</code>是抽样函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t1 = train.sample(<span class="literal">False</span>, <span class="number">0.2</span>, <span class="number">42</span>)</span><br><span class="line">t2 = train.sample(<span class="literal">False</span>, <span class="number">0.2</span>, <span class="number">43</span>)</span><br><span class="line">t1.count(),t2.count()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">(109812, 109745)</span><br></pre></td></tr></table></figure><p><code>withReplacement = True or False</code>代表是否有放回。<br><code>fraction = x, where x = .5，</code>代表抽取百分比</p><h2 id="按条件筛选when-between"><a class="markdownIt-Anchor" href="#按条件筛选when-between"></a> 按条件筛选when / between</h2><p><code>when(condition, value1).otherwise(value2)</code>联合使用：<br>那么：当满足条件<code>condition</code>的指赋值为<code>values1</code>,不满足条件的则赋值为<code>values2</code>.<br><code>otherwise</code>表示，不满足条件的情况下，应该赋值为啥。</p><p><code>demo1</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> functions <span class="keyword">as</span> F</span><br><span class="line">df.select(df.name, F.when(df.age &gt; <span class="number">4</span>, <span class="number">1</span>).when(df.age &lt; <span class="number">3</span>, -<span class="number">1</span>).otherwise(<span class="number">0</span>)).show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+-----+------------------------------------------------------------+</span><br><span class="line">| name|CASE WHEN (age &gt; 4) THEN 1 WHEN (age &lt; 3) THEN -1 ELSE 0 END|</span><br><span class="line">+-----+------------------------------------------------------------+</span><br><span class="line">|Alice|                                                          -1|</span><br><span class="line">|  Bob|                                                           1|</span><br><span class="line">+-----+------------------------------------------------------------+</span><br></pre></td></tr></table></figure><p><code>demo 2:多个when串联</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df = df.withColumn(<span class="string">&#x27;mod_val_test1&#x27;</span>,F.when(df[<span class="string">&#x27;rand&#x27;</span>] &lt;= <span class="number">0.35</span>,<span class="number">1</span>).when(df[<span class="string">&#x27;rand&#x27;</span>] &lt;= <span class="number">0.7</span>, <span class="number">2</span>).otherwise(<span class="number">3</span>))</span><br><span class="line">between(lowerBound, upperBound)</span><br><span class="line">筛选出某个范围内的值，返回的是TRUE <span class="keyword">or</span> FALSE</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.select(df.name, df.age.between(<span class="number">2</span>, <span class="number">4</span>)).show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+-----+---------------------------+</span><br><span class="line">| name|((age &gt;= 2) AND (age &lt;= 4))|</span><br><span class="line">+-----+---------------------------+</span><br><span class="line">|Alice|                       true|</span><br><span class="line">|  Bob|                      false|</span><br><span class="line">+-----+---------------------------+</span><br></pre></td></tr></table></figure><h1 id="增-改"><a class="markdownIt-Anchor" href="#增-改"></a> 增、改</h1><h2 id="新建数据"><a class="markdownIt-Anchor" href="#新建数据"></a> 新建数据</h2><p>有这么两种常规的新建数据方式：<code>createDataFrame</code>、<code>.toDF()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlContext.createDataFrame(pd.dataframe())</span><br></pre></td></tr></table></figure><p>是把<code>pandas</code>的<code>dataframe</code>转化为<code>spark.dataframe</code>格式，所以可以作为两者的格式转化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> Row</span><br><span class="line">row = Row(<span class="string">&quot;spe_id&quot;</span>, <span class="string">&quot;InOther&quot;</span>)</span><br><span class="line">x = [<span class="string">&#x27;x1&#x27;</span>,<span class="string">&#x27;x2&#x27;</span>]</span><br><span class="line">y = [<span class="string">&#x27;y1&#x27;</span>,<span class="string">&#x27;y2&#x27;</span>]</span><br><span class="line">new_df = sc.parallelize([row(x[i], y[i]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]).toDF()</span><br></pre></td></tr></table></figure><p><code>Row</code>代表的是该数据集的列名。</p><h2 id="新增数据列-withcolumn"><a class="markdownIt-Anchor" href="#新增数据列-withcolumn"></a> 新增数据列 withColumn</h2><p><code>withColumn</code>是通过添加或替换与现有列有相同的名字的列，返回一个新的<code>DataFrame</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result3.withColumn(<span class="string">&#x27;label&#x27;</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>或者案例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.withColumn(<span class="string">&#x27;Purchase_new&#x27;</span>,train.Purchase/<span class="number">2.0</span>).select(<span class="string">&#x27;Purchase&#x27;</span>,<span class="string">&#x27;Purchase_new&#x27;</span>).show(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">+--------+------------+</span><br><span class="line">|Purchase|Purchase_new|</span><br><span class="line">+--------+------------+</span><br><span class="line">|    8370|      4185.0|</span><br><span class="line">|   15200|      7600.0|</span><br><span class="line">|    1422|       711.0|</span><br><span class="line">|    1057|       528.5|</span><br><span class="line">|    7969|      3984.5|</span><br><span class="line">+--------+------------+</span><br><span class="line">only showing top 5 rows</span><br></pre></td></tr></table></figure><p><strong>报错：</strong><code>AssertionError: col should be Column</code>，一定要指定某现有列</p><p>有两种方式可以实现：</p><p>一种方式通过<code>functions</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> functions</span><br><span class="line">result3 = result3.withColumn(<span class="string">&#x27;label&#x27;</span>,  functions.lit(<span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>但是如何新增一个特别<code>List</code><br><code>python</code>中的<code>list</code>不能直接添加到<code>dataframe</code>中，需要先将<code>list</code>转为新的<code>dataframe</code>,然后新的<code>dataframe</code>和老的<code>dataframe</code>进行<code>join</code>操作, 下面的例子会先新建一个<code>dataframe</code>，然后将<code>list</code>转为<code>dataframe</code>，然后将两者<code>join</code>起来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> lit</span><br><span class="line"></span><br><span class="line">df = sqlContext.createDataFrame(</span><br><span class="line">    [(<span class="number">1</span>, <span class="string">&quot;a&quot;</span>, <span class="number">23.0</span>), (<span class="number">3</span>, <span class="string">&quot;B&quot;</span>, -<span class="number">23.0</span>)], (<span class="string">&quot;x1&quot;</span>, <span class="string">&quot;x2&quot;</span>, <span class="string">&quot;x3&quot;</span>))</span><br><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> monotonically_increasing_id</span><br><span class="line">df = df.withColumn(<span class="string">&quot;id&quot;</span>, monotonically_increasing_id())</span><br><span class="line">df.show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+---+---+-----+---+</span><br><span class="line">| x1| x2|   x3| id|</span><br><span class="line">+---+---+-----+---+</span><br><span class="line">|  1|  a| 23.0|  0|</span><br><span class="line">|  3|  B|-23.0|  1|</span><br><span class="line">+---+---+-----+---+</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> Row</span><br><span class="line">l = [<span class="string">&#x27;jerry&#x27;</span>, <span class="string">&#x27;tom&#x27;</span>]</span><br><span class="line">row = Row(<span class="string">&quot;pid&quot;</span>, <span class="string">&quot;name&quot;</span>)</span><br><span class="line">new_df = sc.parallelize([row(i, l[i]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(l))]).toDF()</span><br><span class="line">new_df.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+---+-----+</span><br><span class="line">|pid| name|</span><br><span class="line">+---+-----+</span><br><span class="line">|  0|jerry|</span><br><span class="line">|  1|  tom|</span><br><span class="line">+---+-----+</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">join_df = df.join(new_df, df.<span class="built_in">id</span>==new_df.pid)</span><br><span class="line">join_df.show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+---+---+-----+---+---+-----+</span><br><span class="line">| x1| x2|   x3| id|pid| name|</span><br><span class="line">+---+---+-----+---+---+-----+</span><br><span class="line">|  1|  a| 23.0|  0|  0|jerry|</span><br><span class="line">|  3|  B|-23.0|  1|  1|  tom|</span><br><span class="line">+---+---+-----+---+---+-----+</span><br></pre></td></tr></table></figure><p>**注意！！！**其中，<code>monotonically_increasing_id()</code>生成的ID保证是单调递增和唯一的，但不是连续的。<br>所以，有可能，单调到1-140000，到了第144848个，就变成一长串：8845648744563，所以千万要注意！！</p><p>另一种方式通过另一个已有变量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result3 = result3.withColumn(<span class="string">&#x27;label&#x27;</span>,  df.result*<span class="number">0</span> )</span><br></pre></td></tr></table></figure><p>修改原有<code>df[“xx”]</code>列的所有值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.withColumn(“xx”, <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>修改列的类型（类型投射）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.withColumn(<span class="string">&quot;year2&quot;</span>, df[<span class="string">&quot;year1&quot;</span>].cast(<span class="string">&quot;Int&quot;</span>))</span><br></pre></td></tr></table></figure><p>修改列名:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbcDF.withColumnRenamed( <span class="string">&quot;id&quot;</span> , <span class="string">&quot;idx&quot;</span> )</span><br></pre></td></tr></table></figure><h2 id="过滤数据"><a class="markdownIt-Anchor" href="#过滤数据"></a> 过滤数据</h2><p>过滤数据（<code>filter</code>和<code>where</code>方法相同）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df = df.<span class="built_in">filter</span>(df[<span class="string">&#x27;age&#x27;</span>]&gt;<span class="number">21</span>)</span><br><span class="line">df = df.where(df[<span class="string">&#x27;age&#x27;</span>]&gt;<span class="number">21</span>)</span><br><span class="line"><span class="comment">#多个条件</span></span><br><span class="line">jdbcDF .<span class="built_in">filter</span>(“<span class="built_in">id</span> = <span class="number">1</span> <span class="keyword">or</span> c1 = ‘b’” ).show()</span><br></pre></td></tr></table></figure><p>对<code>null</code>或<code>nan</code>数据进行过滤：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> isnan, isnull</span><br><span class="line">df = df.<span class="built_in">filter</span>(isnull(<span class="string">&quot;a&quot;</span>))  <span class="comment"># 把a列里面数据为null的筛选出来（代表python的None类型）</span></span><br><span class="line">df = df.<span class="built_in">filter</span>(isnan(<span class="string">&quot;a&quot;</span>))  <span class="comment"># 把a列里面数据为nan的筛选出来（Not a Number，非数字数据）</span></span><br></pre></td></tr></table></figure><h1 id="合并-join-union"><a class="markdownIt-Anchor" href="#合并-join-union"></a> 合并 join / union</h1><h2 id="横向拼接"><a class="markdownIt-Anchor" href="#横向拼接"></a> 横向拼接</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">result3 = result1.union(result2)</span><br><span class="line">jdbcDF.unionALL(jdbcDF.limit(<span class="number">1</span>)) <span class="comment"># unionALL</span></span><br></pre></td></tr></table></figure><h2 id="join根据条件"><a class="markdownIt-Anchor" href="#join根据条件"></a> Join根据条件</h2><p><strong>单字段Join</strong><br>合并2个表的<code>join</code>方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df_join = df_left.join(df_right, df_left.key == df_right.key, <span class="string">&quot;inner&quot;</span>)</span><br></pre></td></tr></table></figure><p>其中，方法可以为：<code>inner, outer, left_outer, right_outer, leftsemi.</code><br>其中注意，一般需要改为：<code>left_outer</code></p><p><strong>多字段join</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">joinDF1.join(joinDF2, Seq(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>)）</span><br></pre></td></tr></table></figure><p><strong>混合字段</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">joinDF1.join(joinDF2 , joinDF1(<span class="string">&quot;id&quot;</span> ) === joinDF2( <span class="string">&quot;t1_id&quot;</span>))</span><br></pre></td></tr></table></figure><p>跟pandas 里面的<code>left_on,right_on</code></p><h2 id="求并集-交集"><a class="markdownIt-Anchor" href="#求并集-交集"></a> 求并集、交集</h2><p>来看一个例子，先构造两个<code>dataframe</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sentenceDataFrame = spark.createDataFrame((</span><br><span class="line">      (<span class="number">1</span>, <span class="string">&quot;asf&quot;</span>),</span><br><span class="line">      (<span class="number">2</span>, <span class="string">&quot;2143&quot;</span>),</span><br><span class="line">      (<span class="number">3</span>, <span class="string">&quot;rfds&quot;</span>)</span><br><span class="line">    )).toDF(<span class="string">&quot;label&quot;</span>, <span class="string">&quot;sentence&quot;</span>)</span><br><span class="line">sentenceDataFrame.show()</span><br><span class="line"></span><br><span class="line">sentenceDataFrame1 = spark.createDataFrame((</span><br><span class="line">      (<span class="number">1</span>, <span class="string">&quot;asf&quot;</span>),</span><br><span class="line">      (<span class="number">2</span>, <span class="string">&quot;2143&quot;</span>),</span><br><span class="line">      (<span class="number">4</span>, <span class="string">&quot;f8934y&quot;</span>)</span><br><span class="line">    )).toDF(<span class="string">&quot;label&quot;</span>, <span class="string">&quot;sentence&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="差集"><a class="markdownIt-Anchor" href="#差集"></a> 差集</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">newDF = sentenceDataFrame1.select(<span class="string">&quot;sentence&quot;</span>).subtract(sentenceDataFrame.select(<span class="string">&quot;sentence&quot;</span>))</span><br><span class="line">newDF.show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+--------+</span><br><span class="line">|sentence|</span><br><span class="line">+--------+</span><br><span class="line">|  f8934y|</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure><h2 id="交集"><a class="markdownIt-Anchor" href="#交集"></a> 交集</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">newDF = sentenceDataFrame1.select(<span class="string">&quot;sentence&quot;</span>).intersect(sentenceDataFrame.select(<span class="string">&quot;sentence&quot;</span>))</span><br><span class="line">newDF.show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+--------+</span><br><span class="line">|sentence|</span><br><span class="line">+--------+</span><br><span class="line">|     asf|</span><br><span class="line">|    2143|</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure><h2 id="并集"><a class="markdownIt-Anchor" href="#并集"></a> 并集</h2><h3 id="union"><a class="markdownIt-Anchor" href="#union"></a> union</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">newDF = sentenceDataFrame1.select(<span class="string">&quot;sentence&quot;</span>).union(sentenceDataFrame.select(<span class="string">&quot;sentence&quot;</span>))</span><br><span class="line">newDF.show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">+--------+</span><br><span class="line">|sentence|</span><br><span class="line">+--------+</span><br><span class="line">|     asf|</span><br><span class="line">|    2143|</span><br><span class="line">|  f8934y|</span><br><span class="line">|     asf|</span><br><span class="line">|    2143|</span><br><span class="line">|    rfds|</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure><h3 id="unionall"><a class="markdownIt-Anchor" href="#unionall"></a> unionAll</h3><p><code>unionAll</code>方法：对两个DataFrame进行组合,类似于<code>SQL</code>中的<code>UNION ALL</code>操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbcDF.unionALL(jdbcDF.limit(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h2 id="并集-去重"><a class="markdownIt-Anchor" href="#并集-去重"></a> 并集 + 去重</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">newDF = sentenceDataFrame1.select(<span class="string">&quot;sentence&quot;</span>).union(sentenceDataFrame.select(<span class="string">&quot;sentence&quot;</span>)).distinct()</span><br><span class="line">newDF.show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+--------+</span><br><span class="line">|sentence|</span><br><span class="line">+--------+</span><br><span class="line">|    rfds|</span><br><span class="line">|     asf|</span><br><span class="line">|    2143|</span><br><span class="line">|  f8934y|</span><br><span class="line">+--------+</span><br></pre></td></tr></table></figure><h2 id="分割行转列"><a class="markdownIt-Anchor" href="#分割行转列"></a> 分割：行转列</h2><p>有时候需要根据某个字段内容进行分割，然后生成多行，这时可以使用<code>explode</code>方法<br>下面代码中，根据<code>c3</code>字段中的空格将字段内容进行分割，分割的内容存储在新的字段<code>c3_</code>中，如下所示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbcDF.explode( <span class="string">&quot;c3&quot;</span> , <span class="string">&quot;c3_&quot;</span> )&#123;time: String =&gt; time.split( <span class="string">&quot; &quot;</span> )&#125;</span><br></pre></td></tr></table></figure><h1 id="统计"><a class="markdownIt-Anchor" href="#统计"></a> 统计</h1><h2 id="频数统计与筛选"><a class="markdownIt-Anchor" href="#频数统计与筛选"></a> 频数统计与筛选</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbcDF.stat.freqItems(Seq (<span class="string">&quot;c1&quot;</span>) , <span class="number">0.3</span>).show()</span><br></pre></td></tr></table></figure><p>根据<code>c4</code>字段，统计该字段值出现频率在30%以上的内容</p><h2 id="分组统计"><a class="markdownIt-Anchor" href="#分组统计"></a> 分组统计</h2><p><strong>交叉分析</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.crosstab(<span class="string">&#x27;Age&#x27;</span>, <span class="string">&#x27;Gender&#x27;</span>).show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">+----------+-----+------+</span><br><span class="line">|Age_Gender|    F|     M|</span><br><span class="line">+----------+-----+------+</span><br><span class="line">|      0-17| 5083| 10019|</span><br><span class="line">|     46-50|13199| 32502|</span><br><span class="line">|     18-25|24628| 75032|</span><br><span class="line">|     36-45|27170| 82843|</span><br><span class="line">|       55+| 5083| 16421|</span><br><span class="line">|     51-55| 9894| 28607|</span><br><span class="line">|     26-35|50752|168835|</span><br><span class="line">+----------+-----+------+</span><br></pre></td></tr></table></figure><p><strong>groupBy方法整合：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.groupby(<span class="string">&#x27;Age&#x27;</span>).agg(&#123;<span class="string">&#x27;Purchase&#x27;</span>: <span class="string">&#x27;mean&#x27;</span>&#125;).show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">+-----+-----------------+</span><br><span class="line">|  Age|    avg(Purchase)|</span><br><span class="line">+-----+-----------------+</span><br><span class="line">|51-55|9534.808030960236|</span><br><span class="line">|46-50|9208.625697468327|</span><br><span class="line">| 0-17|8933.464640444974|</span><br><span class="line">|36-45|9331.350694917874|</span><br><span class="line">|26-35|9252.690632869888|</span><br><span class="line">|  55+|9336.280459449405|</span><br><span class="line">|18-25|9169.663606261289|</span><br><span class="line">+-----+-----------------+</span><br></pre></td></tr></table></figure><p><strong>另外一些demo：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">&#x27;x1&#x27;</span>].groupby(df[<span class="string">&#x27;x2&#x27;</span>]).count().reset_index(name=<span class="string">&#x27;x1&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>分组汇总</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.groupby(<span class="string">&#x27;Age&#x27;</span>).count().show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">+-----+------+</span><br><span class="line">|  Age| count|</span><br><span class="line">+-----+------+</span><br><span class="line">|51-55| 38501|</span><br><span class="line">|46-50| 45701|</span><br><span class="line">| 0-17| 15102|</span><br><span class="line">|36-45|110013|</span><br><span class="line">|26-35|219587|</span><br><span class="line">|  55+| 21504|</span><br><span class="line">|18-25| 99660|</span><br><span class="line">+-----+------+</span><br></pre></td></tr></table></figure><p><strong>应用多个函数：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> functions</span><br><span class="line">df.groupBy(“A”).agg(functions.avg(“B”), functions.<span class="built_in">min</span>(“B”), functions.<span class="built_in">max</span>(“B”)).show()</span><br></pre></td></tr></table></figure><p>整合后<code>GroupedData</code>类型可用的方法（均返回<code>DataFrame</code>类型）：<br><strong>avg(cols)</strong> ——   计算每组中一列或多列的平均值<br><strong>count()</strong> ——   计算每组中一共有多少行，返回<code>DataFrame</code>有2列，一列为分组的组名，另一列为行总数<br><strong>max(cols)</strong> ——   计算每组中一列或多列的最大值<br><strong>mean(cols)</strong> ——  计算每组中一列或多列的平均值<br><strong>min(cols)</strong> ——  计算每组中一列或多列的最小值<br><strong>sum(cols)</strong> ——   计算每组中一列或多列的总和</p><h2 id="apply-函数"><a class="markdownIt-Anchor" href="#apply-函数"></a> apply 函数</h2><p>将<code>df</code>的每一列应用函数f：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.foreach(f) 或者 df.rdd.foreach(f)</span><br></pre></td></tr></table></figure><p>将<code>df</code>的每一块应用函数f：</p><p>将df的每一块应用函数f：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.foreachPartition(f) 或者 df.rdd.foreachPartition(f)</span><br></pre></td></tr></table></figure><h2 id="map和reduce应用返回类型seqrdds"><a class="markdownIt-Anchor" href="#map和reduce应用返回类型seqrdds"></a> 【Map和Reduce应用】返回类型seqRDDs</h2><h3 id="map函数应用"><a class="markdownIt-Anchor" href="#map函数应用"></a> map函数应用</h3><p>可以参考：<a href="https://spark.apache.org/docs/latest/api/python/index.html">Spark Python API</a> 学习</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.select(<span class="string">&#x27;User_ID&#x27;</span>).rdd.<span class="built_in">map</span>(<span class="keyword">lambda</span> x:(x,<span class="number">1</span>)).take(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">[(Row(User_ID=1000001), 1),</span><br><span class="line"> (Row(User_ID=1000001), 1),</span><br><span class="line"> (Row(User_ID=1000001), 1),</span><br><span class="line"> (Row(User_ID=1000001), 1),</span><br><span class="line"> (Row(User_ID=1000002), 1)]</span><br></pre></td></tr></table></figure><p>其中map在spark2.0就移除了，所以只能由<code>rdd.</code>调用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data.select(<span class="string">&#x27;col&#x27;</span>).rdd.<span class="built_in">map</span>(<span class="keyword">lambda</span> l: <span class="number">1</span> <span class="keyword">if</span> l <span class="keyword">in</span> [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>] <span class="keyword">else</span> <span class="number">0</span> ).collect()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x.collect()) </span><br><span class="line"><span class="built_in">print</span>(y.collect())</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[1, 2, 3]</span><br><span class="line">[(1, 1), (2, 4), (3, 9)]</span><br></pre></td></tr></table></figure><p>还有一种方式<code>mapPartitions</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">_map_to_pandas</span>(<span class="params">rdds</span>):</span><br><span class="line">    <span class="keyword">return</span> [pd.DataFrame(<span class="built_in">list</span>(rdds))]</span><br><span class="line"></span><br><span class="line">data.rdd.mapPartitions(_map_to_pandas).collect()</span><br></pre></td></tr></table></figure><p>返回的是<code>list</code>。</p><h3 id="udf-函数应用"><a class="markdownIt-Anchor" href="#udf-函数应用"></a> udf 函数应用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> udf</span><br><span class="line"><span class="keyword">from</span> pyspark.sql.types <span class="keyword">import</span> StringType</span><br><span class="line"><span class="keyword">import</span> datetime</span><br></pre></td></tr></table></figure><p><strong>定义一个 udf 函数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">today</span>(<span class="params">day</span>):</span><br><span class="line">    <span class="keyword">if</span> day==<span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> datetime.datetime.fromtimestamp(<span class="built_in">int</span>(time.time())).strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> day</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回类型为字符串类型</span></span><br><span class="line">udfday = udf(today, StringType())</span><br></pre></td></tr></table></figure><p><strong>使用</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.withColumn(<span class="string">&#x27;day&#x27;</span>, udfday(df.day))</span><br></pre></td></tr></table></figure><p>有点类似<code>apply</code>,定义一个 <code>udf</code> 方法, 用来返回今天的日期<code>(yyyy-MM-dd)</code></p><h2 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df.drop(<span class="string">&#x27;age&#x27;</span>).collect()</span><br><span class="line">df.drop(df.age).collect()</span><br></pre></td></tr></table></figure><p><code>dropna</code>函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = df.na.drop()  <span class="comment"># 扔掉任何列包含na的行</span></span><br><span class="line">df = df.dropna(subset=[<span class="string">&#x27;col_name1&#x27;</span>, <span class="string">&#x27;col_name2&#x27;</span>])  <span class="comment"># 扔掉col1或col2中任一一列包含na的行</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.dropna().count()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">166821</span><br></pre></td></tr></table></figure><p>填充<code>NA</code>包括<code>fillna</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.fillna(-<span class="number">1</span>).show(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">+-------+----------+------+----+----------+-------------+--------------------------+--------------+------------------+------------------+------------------+--------+</span><br><span class="line">|User_ID|Product_ID|Gender| Age|Occupation|City_Category|Stay_In_Current_City_Years|Marital_Status|Product_Category_1|Product_Category_2|Product_Category_3|Purchase|</span><br><span class="line">+-------+----------+------+----+----------+-------------+--------------------------+--------------+------------------+------------------+------------------+--------+</span><br><span class="line">|1000001| P00069042|     F|0-17|        10|            A|                         2|             0|                 3|                -1|                -1|    8370|</span><br><span class="line">|1000001| P00248942|     F|0-17|        10|            A|                         2|             0|                 1|                 6|                14|   15200|</span><br><span class="line">+-------+----------+------+----+----------+-------------+--------------------------+--------------+------------------+------------------+------------------+--------+</span><br><span class="line">only showing top 2 rows</span><br></pre></td></tr></table></figure><h2 id="去重"><a class="markdownIt-Anchor" href="#去重"></a> 去重</h2><h3 id="distinct返回一个不包含重复记录的dataframe"><a class="markdownIt-Anchor" href="#distinct返回一个不包含重复记录的dataframe"></a> distinct：返回一个不包含重复记录的DataFrame</h3><p>返回当前<code>DataFrame</code>中不重复的Row记录。该方法和接下来的<code>dropDuplicates()</code>方法不传入指定字段时的结果相同。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbcDF.distinct()</span><br></pre></td></tr></table></figure><h3 id="dropduplicates根据指定字段去重"><a class="markdownIt-Anchor" href="#dropduplicates根据指定字段去重"></a> dropDuplicates：根据指定字段去重</h3><p>根据指定字段去重。类似于<code>select distinct a, b</code>操作<br>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train.select(<span class="string">&#x27;Age&#x27;</span>,<span class="string">&#x27;Gender&#x27;</span>).dropDuplicates().show()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Output:</span><br><span class="line">+-----+------+</span><br><span class="line">|  Age|Gender|</span><br><span class="line">+-----+------+</span><br><span class="line">|51-55|     F|</span><br><span class="line">|51-55|     M|</span><br><span class="line">|26-35|     F|</span><br><span class="line">|26-35|     M|</span><br><span class="line">|36-45|     F|</span><br><span class="line">|36-45|     M|</span><br><span class="line">|46-50|     F|</span><br><span class="line">|46-50|     M|</span><br><span class="line">|  55+|     F|</span><br><span class="line">|  55+|     M|</span><br><span class="line">|18-25|     F|</span><br><span class="line">| 0-17|     F|</span><br><span class="line">|18-25|     M|</span><br><span class="line">| 0-17|     M|</span><br><span class="line">+-----+------+</span><br></pre></td></tr></table></figure><h3 id="去除两个表重复的内容"><a class="markdownIt-Anchor" href="#去除两个表重复的内容"></a> 去除两个表重复的内容</h3><p>场景是要，依据B表与A表共有的内容，需要去除这部分共有的。<br>使用的逻辑是合并两张表，然后把匹配到的删除即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> functions</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">LeftDeleteRight</span>(<span class="params">test_left,test_right,left_col = <span class="string">&#x27;user_pin&#x27;</span>,right_col = <span class="string">&#x27;user_pin&#x27;</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;right data process ...&#x27;</span>)</span><br><span class="line">    columns_right = test_right.columns</span><br><span class="line">    test_right = test_right.withColumn(<span class="string">&#x27;user_pin_right&#x27;</span>, test_right[right_col])</span><br><span class="line">    test_right = test_right.withColumn(<span class="string">&#x27;notDelete&#x27;</span>,  functions.lit(<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 删除其余的</span></span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> columns_right:</span><br><span class="line">        test_right = test_right.drop(col)</span><br><span class="line">    <span class="comment"># 合并</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;rbind left and right data ...&#x27;</span>)</span><br><span class="line">    test_left = test_left.join(test_right, test_left[left_col] == test_right[<span class="string">&#x27;user_pin_right&#x27;</span>], <span class="string">&quot;left&quot;</span>)</span><br><span class="line">    test_left = test_left.fillna(<span class="number">1</span>)</span><br><span class="line">    test_left = test_left.where(<span class="string">&#x27;notDelete =1&#x27;</span>)</span><br><span class="line">    <span class="comment"># 去掉多余的字段</span></span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> [<span class="string">&#x27;user_pin_right&#x27;</span>,<span class="string">&#x27;notDelete&#x27;</span>]:</span><br><span class="line">        test_left = test_left.drop(col)</span><br><span class="line">    <span class="keyword">return</span> test_left</span><br><span class="line"></span><br><span class="line">test_left = LeftDeleteRight(test_b,test_a,left_col = <span class="string">&#x27;user_pin&#x27;</span>,right_col = <span class="string">&#x27;user_pin&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="格式转换"><a class="markdownIt-Anchor" href="#格式转换"></a> 格式转换</h1><p><code>Pandas</code>和<code>spark.dataframe</code>互转<br><code>Pandas</code>和<code>Spark</code>的<code>DataFrame</code>两者互相转换：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pandas_df = spark_df.toPandas() </span><br><span class="line">spark_df = sqlContext.createDataFrame(pandas_df)</span><br></pre></td></tr></table></figure><p>转化为pandas，但是该数据要读入内存，如果数据量大的话，很难跑得动</p><p>两者的异同：</p><p>Pyspark DataFrame是在分布式节点上运行一些数据操作，而pandas是不可能的；<br>Pyspark DataFrame的数据反映比较缓慢，没有Pandas那么及时反映；<br>Pyspark DataFrame的数据框是不可变的，不能任意添加列，只能通过合并进行；<br>pandas比Pyspark DataFrame有更多方便的操作以及很强大</p><p><strong>转化为RDD</strong><br>与Spark RDD的相互转换：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rdd_df = df.rdd </span><br><span class="line">df = rdd_df.toDF()</span><br></pre></td></tr></table></figure><h1 id="sql操作"><a class="markdownIt-Anchor" href="#sql操作"></a> SQL操作</h1><p><code>DataFrame</code>注册成<code>SQL</code>的表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.createOrReplaceTempView(<span class="string">&quot;TBL1&quot;</span>)</span><br></pre></td></tr></table></figure><p>进行<code>SQL</code>查询（返回<code>DataFrame</code>）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conf = SparkConf()</span><br><span class="line">ss = SparkSession.builder.appName(<span class="string">&quot;APP_NAME&quot;</span>).config(conf=conf).getOrCreate()</span><br><span class="line"></span><br><span class="line">df = ss.sql(“SELECT name, age FROM TBL1 WHERE age &gt;= <span class="number">13</span> AND age &lt;= <span class="number">19</span>″)</span><br></pre></td></tr></table></figure><h1 id="读写csv"><a class="markdownIt-Anchor" href="#读写csv"></a> 读写csv</h1><p>在Python中，我们也可以使用<code>SQLContext</code>类中 <code>load/save</code>函数来读取和保存<code>CSV</code>文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> SQLContext</span><br><span class="line">sqlContext = SQLContext(sc)  </span><br><span class="line">df = sqlContext.load(source=<span class="string">&quot;com.databricks.spark.csv&quot;</span>, header=<span class="string">&quot;true&quot;</span>, path = <span class="string">&quot;cars.csv&quot;</span>)</span><br><span class="line">df.select(<span class="string">&quot;year&quot;</span>, <span class="string">&quot;model&quot;</span>).save(<span class="string">&quot;newcars.csv&quot;</span>, <span class="string">&quot;com.databricks.spark.csv&quot;</span>,header=<span class="string">&quot;true&quot;</span>)</span><br></pre></td></tr></table></figure><p>其中，<code>header</code>代表是否显示表头。<br>其中主函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save(path=<span class="literal">None</span>, <span class="built_in">format</span>=<span class="literal">None</span>, mode=<span class="literal">None</span>, partitionBy=<span class="literal">None</span>, **options)[source]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Parameters:</span><br><span class="line"></span><br><span class="line">path – the path in a Hadoop supported file system</span><br><span class="line"></span><br><span class="line">format – the format used to save</span><br><span class="line"></span><br><span class="line">mode –</span><br><span class="line"></span><br><span class="line">specifies the behavior of the save operation when data already</span><br><span class="line">exists.</span><br><span class="line"></span><br><span class="line">append: Append contents of this DataFrame to existing data.</span><br><span class="line"></span><br><span class="line">overwrite: Overwrite existing data.</span><br><span class="line"></span><br><span class="line">ignore: Silently ignore this operation if data already exists.</span><br><span class="line"></span><br><span class="line">error (default case): Throw an exception if data already exists.</span><br><span class="line"></span><br><span class="line">partitionBy – names of partitioning columns</span><br><span class="line"></span><br><span class="line">options – all other string options</span><br></pre></td></tr></table></figure><p>📖<a href="https://blog.csdn.net/sinat_26917383/article/details/80500349">参考</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> Spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PySpark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android手机通过SafetyNet检查</title>
      <link href="/skydream/38e1/"/>
      <url>/skydream/38e1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="android手机通过ctsprofile-检测"><a class="markdownIt-Anchor" href="#android手机通过ctsprofile-检测"></a> Android手机通过ctsProfile 检测</h2><p>简单来讲， 它就是一个google play里的一个验证service ，涉及到Google的GTS验证了，因为oem厂商要预装Google服务，必须通过Google的GTS测试才可以预装GMS服务，通过测试的机器Google服务器上会有你的设备型号，买回来开机激活后会显示 “此设备通过验证”，也就是通过了safetytest了，就可以完美使用Google pay非接触式付款，下载特殊的app例如Netflix一系列有版权保护的app。</p><p>大部分Android手机刷入<strong>Magisk Manager</strong>进行root权限管理时都是可以做到隐藏 root 实现 <strong>「无痛」</strong> 玩机的，一般来讲 <strong>basicIntegrity</strong> ， <strong>ctsProfile</strong> 都是通过检查的。但是有些设备并不是，那说明你的 ROM 没有通过其兼容性测试，一些 beta 版本或者国内厂商的 ROM 可能出现这种问题，或者刷入<strong>Xposed</strong>后<strong>ctsProfile</strong> 肯定是不通过的。这时候就需要用到  <a href="https://forum.xda-developers.com/apps/magisk/module-magiskhide-props-config-t3789228">MagiskHide Props Config</a> 这个模块了。</p><h3 id="安装magiskhide-props-config模块"><a class="markdownIt-Anchor" href="#安装magiskhide-props-config模块"></a> 安装MagiskHide Props Config模块</h3><p>从Magisk Manager直接搜索下载安装即可，需要重启。</p><h3 id="magiskhide-props-config模块设置"><a class="markdownIt-Anchor" href="#magiskhide-props-config模块设置"></a> MagiskHide Props Config模块设置</h3><p>使用Termux之类的终端工具进行设置， 使用 <code>su</code> 切換到 <code>root</code> 身份，接著執行 <code>props</code></p><p>注意这里如果报错之类的请用Magisk Manager下载<strong>Busybox for Android NDK</strong></p><p>接着按下<code>1</code> 出现下面的提示</p><p><img src="/skydream/38e1/safetynet01.jpg" style="zoom: 33%;"></p><p>然后根据自己设备型号输入<code>cts指纹</code>，注意只输入<code>=</code>后面的部分</p><p><strong><a href="https://github.com/Magisk-Modules-Repo/MagiskHidePropsConf/blob/master/common/prints.sh">cts指纹清单</a></strong></p><p>然后一路<code>yes</code>重启即可。</p><p><img src="/skydream/38e1/safetynet06.jpg" style="zoom:33%;"></p><p><img src="/skydream/38e1/safetynet05.jpg" style="zoom:33%;"></p><p>之后就可以安装netflix，google pay（大陆没什么卵用😒）之类的应用了。</p><p><img src="/skydream/38e1/safetynet02.jpg" style="zoom:33%;"></p><p><img src="/skydream/38e1/safetynet03.jpg" style="zoom:33%;"></p><p><code>注：本人mi9一切正常，其他设备请自测。</code></p><p>📖 <a href="https://github.com/Magisk-Modules-Repo/MagiskHidePropsConf">参考</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 编辑器语法指南</title>
      <link href="/skydream/c86e/"/>
      <url>/skydream/c86e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="markdown-编辑器语法指南"><a class="markdownIt-Anchor" href="#markdown-编辑器语法指南"></a> Markdown 编辑器语法指南</h1><p>Markdown 是一种轻量级标记语言，  可以快速的撰写帮助文档或是用于论坛上发表消息。</p><h2 id="基本技巧"><a class="markdownIt-Anchor" href="#基本技巧"></a> 基本技巧</h2><h3 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h3><p>如果你只想高亮语句中的某个函数名或关键字，可以使用 <code>function_name()</code> 实现</p><p>通常编辑器根据代码片段适配合适的高亮方法，但你也可以用 `````` 包裹一段代码，并指定一种语言</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="code">```&#125;javascript</span></span><br><span class="line"><span class="code">$(document).ready(function () &#123;</span></span><br><span class="line"><span class="code">    alert(&#x27;hello world&#x27;);</span></span><br><span class="line"><span class="code">&#125;);</span></span><br><span class="line"><span class="code">&#123;```</span>&#125;</span><br><span class="line">--注意去除括号&#123;&#125;</span><br></pre></td></tr></table></figure><p><code>支持的语言：1c, abnf, accesslog, actionscript, ada, apache, applescript, arduino, armasm, asciidoc, aspectj, autohotkey, autoit, avrasm, awk, axapta, bash, basic, bnf, brainfuck, cal, capnproto, ceylon, clean, clojure, clojure-repl, cmake, coffeescript, coq, cos, cpp, crmsh, crystal, cs, csp, css, d, dart, delphi, diff, django, dns, dockerfile, dos, dsconfig, dts, dust, ebnf, elixir, elm, erb, erlang, erlang-repl, excel, fix, flix, fortran, fsharp, gams, gauss, gcode, gherkin, glsl, go, golo, gradle, groovy, haml, handlebars, haskell, haxe, hsp, htmlbars, http, hy, inform7, ini, irpf90, java, javascript, json, julia, kotlin, lasso, ldif, leaf, less, lisp, livecodeserver, livescript, llvm, lsl, lua, makefile, markdown, mathematica, matlab, maxima, mel, mercury, mipsasm, mizar, mojolicious, monkey, moonscript, n1ql, nginx, nimrod, nix, nsis, objectivec, ocaml, openscad, oxygene, parser3, perl, pf, php, pony, powershell, processing, profile, prolog, protobuf, puppet, purebasic, python, q, qml, r, rib, roboconf, rsl, ruby, ruleslanguage, rust, scala, scheme, scilab, scss, smali, smalltalk, sml, sqf, sql, stan, stata, step21, stylus, subunit, swift, taggerscript, tap, tcl, tex, thrift, tp, twig, typescript, vala, vbnet, vbscript, vbscript-html, verilog, vhdl, vim, x86asm, xl, xml, xquery, yaml, zephir</code></p><p>也可以使用 4 空格缩进，再贴上代码，实现相同的的效果</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def g(x):</span><br><span class="line"><span class="code">    yield from range(x, 0, -1)</span></span><br><span class="line"><span class="code">yield from range(x)</span></span><br></pre></td></tr></table></figure><p>如你不需要代码高亮，可以用下面的方法禁用：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="code">```&#125;nohighlight</span></span><br><span class="line"><span class="code">&#123;```</span>&#125;  </span><br><span class="line">--注意去除括号&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="标题"><a class="markdownIt-Anchor" href="#标题"></a> 标题</h3><p>文章内容较多时，可以用标题分段：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">标题1</span></span><br><span class="line"><span class="section">======</span></span><br><span class="line"></span><br><span class="line"><span class="section">标题2</span></span><br><span class="line"><span class="section">-----</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 大标题 ##</span></span><br><span class="line"><span class="section">### 小标题 ###</span></span><br></pre></td></tr></table></figure><h3 id="粗斜体"><a class="markdownIt-Anchor" href="#粗斜体"></a> 粗斜体</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体文本*</span>    <span class="emphasis">_斜体文本_</span></span><br><span class="line"><span class="strong">**粗体文本**</span>    <span class="strong">__粗体文本__</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体文本*</span>**</span>    <span class="strong">__<span class="emphasis">_粗斜体文本_</span>__</span></span><br></pre></td></tr></table></figure><h3 id="链接"><a class="markdownIt-Anchor" href="#链接"></a> 链接</h3><p>常用链接方法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文字链接 [<span class="string">链接名称</span>](<span class="link">http://链接网址</span>)</span><br><span class="line">网址链接 <span class="language-xml">&lt;http://链接网址&gt;</span></span><br></pre></td></tr></table></figure><p>高级链接技巧</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [<span class="string">Google</span>][<span class="symbol">1</span>].</span><br><span class="line">这个链接用 yahoo 作为网址变量 [<span class="string">Yahoo!</span>][<span class="symbol">yahoo</span>].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">  [1]: http://www.google.com/</span><br><span class="line">  [yahoo]: http://www.yahoo.com/</span><br></pre></td></tr></table></figure><h3 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h3><p>普通无序列表</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 列表文本前使用 [减号+空格]</span><br><span class="line"><span class="bullet">+</span> 列表文本前使用 [加号+空格]</span><br><span class="line"><span class="bullet">*</span> 列表文本前使用 [星号+空格]</span><br></pre></td></tr></table></figure><p>普通有序列表</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 列表前使用 [数字+空格]</span><br><span class="line"><span class="bullet">2.</span> 我们会自动帮你添加数字</span><br><span class="line"><span class="bullet">3.</span> 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</span><br></pre></td></tr></table></figure><p>列表嵌套</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 列出所有元素：</span><br><span class="line"><span class="bullet">    -</span> 无序列表元素 A</span><br><span class="line"><span class="bullet">        1.</span> 元素 A 的有序子列表</span><br><span class="line"><span class="bullet">    -</span> 前面加四个空格</span><br><span class="line"><span class="bullet">2.</span> 列表里的多段换行：</span><br><span class="line"><span class="code">    前面必须加四个空格，</span></span><br><span class="line"><span class="code">    这样换行，整体的格式不会乱</span></span><br><span class="line"><span class="code">3. 列表里引用：</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">    &gt; 前面空一行</span></span><br><span class="line"><span class="code">    &gt; 仍然需要在 &gt;  前面加四个空格</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="bullet">4.</span> 列表里代码段：</span><br><span class="line"></span><br><span class="line"><span class="code">    ```</span></span><br><span class="line"><span class="code">    前面四个空格，之后按代码语法 ``` 书写</span></span><br><span class="line"><span class="code">    ```</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">        或者直接空八个，引入代码块</span></span><br></pre></td></tr></table></figure><h3 id="引用"><a class="markdownIt-Anchor" href="#引用"></a> 引用</h3><p>普通引用</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 引用文本前使用 [大于号+空格]</span></span><br><span class="line"><span class="quote">&gt; 折行可以不加，新起一行都要加上哦</span></span><br></pre></td></tr></table></figure><p>引用里嵌套引用</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 最外层引用</span></span><br><span class="line"><span class="quote">&gt; &gt; 多一个 &gt; 嵌套一层引用</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 可以嵌套很多层</span></span><br></pre></td></tr></table></figure><p>引用里嵌套列表</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; - 这是引用里嵌套的一个列表</span></span><br><span class="line"><span class="quote">&gt; - 还可以有子列表</span></span><br><span class="line"><span class="quote">&gt;     <span class="emphasis">* 子列表需要从 - 之后延后四个空格开始</span></span></span><br></pre></td></tr></table></figure><p>引用里嵌套代码块</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;     同样的，在前面加四个空格形成代码块</span></span><br><span class="line"><span class="quote">&gt;  </span></span><br><span class="line"><span class="quote">&gt; &#123;```&#125;</span></span><br><span class="line"><span class="quote">&gt; 或者使用 &#123;```&#125; 形成代码块</span></span><br><span class="line"><span class="quote">&gt; &#123;```&#125;</span></span><br><span class="line">--注意去除括号&#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="图片"><a class="markdownIt-Anchor" href="#图片"></a> 图片</h3><p>跟链接的方法区别在于前面加了个感叹号 <code>!</code>，这样是不是觉得好记多了呢？</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片名称</span>](<span class="link">http://图片网址</span>)</span><br></pre></td></tr></table></figure><p>当然，你也可以像网址那样对图片网址使用变量</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [<span class="string">Google</span>][<span class="symbol">1</span>].</span><br><span class="line">然后在文档的结尾位变量赋值（网址）</span><br><span class="line"></span><br><span class="line"> [1]: http://www.google.com/logo.png</span><br></pre></td></tr></table></figure><p>Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt; img src=&quot;http://logo.png&quot; style=&quot;width:300px;height:100 px&quot;/&gt;</span><br><span class="line">&lt; img src=&quot;http://logo.png&quot; style=&quot;float:right; zoom:33%&quot;/&gt;</span><br><span class="line">&lt; img src=&quot;http://logo.png&quot; alt=&quot;logo&quot; align=&quot;left&quot; style=&quot;zoom:33%&quot;/&gt;</span><br></pre></td></tr></table></figure><h3 id="换行"><a class="markdownIt-Anchor" href="#换行"></a> 换行</h3><p>如果另起一行，只需在当前行结尾加 2 个空格</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在当前行的结尾加 2 个空格  </span><br><span class="line">这行就会新起一行</span><br></pre></td></tr></table></figure><p>如果是要起一个新段落，只需要空出一行即可。</p><h3 id="分隔符"><a class="markdownIt-Anchor" href="#分隔符"></a> 分隔符</h3><p>如果你有写分割线的习惯，可以新起一行输入三个减号<code>-</code>。当前后都有段落时，请空出一行：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前面的段落</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">后面的段落</span><br></pre></td></tr></table></figure><h3 id="表格"><a class="markdownIt-Anchor" href="#表格"></a> 表格</h3><p>Markdown 制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 表头  | 表头  |</span><br><span class="line">| ----- | ----- |</span><br><span class="line">| 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><h2 id="对齐方式"><a class="markdownIt-Anchor" href="#对齐方式"></a> 对齐方式</h2><p>我们可以设置表格的对齐方式：</p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><p>实例如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><h2 id="高级技巧"><a class="markdownIt-Anchor" href="#高级技巧"></a> 高级技巧</h2><h3 id="行内-html-元素"><a class="markdownIt-Anchor" href="#行内-html-元素"></a> 行内 HTML 元素</h3><p>目前只支持部分段内 HTML 元素效果，包括 `` ，如</p><p>键位显示</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 <span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Ctrl<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Alt<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="language-xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Del<span class="language-xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span> 重启电脑</span><br></pre></td></tr></table></figure><p>代码块</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 <span class="language-xml"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span> 元素同样可以形成代码块</span><br></pre></td></tr></table></figure><p>粗斜体</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span> Markdown 在此处同样适用，如 <span class="emphasis">*加粗*</span> <span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="符号转义"><a class="markdownIt-Anchor" href="#符号转义"></a> 符号转义</h3><p>如果你的描述中需要用到 markdown 的符号，比如 <code>_</code> <code>#</code> <code>*</code> 等，但又不想它被转义，这时候可以在这些符号前加反斜杠，如 <code>\_</code> <code>\#</code> <code>\*</code> 进行避免。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\<span class="emphasis">_不想这里的文本变斜体\_</span></span><br><span class="line">\<span class="emphasis">*\*</span>不想这里的文本被加粗\<span class="emphasis">*\*</span></span><br></pre></td></tr></table></figure><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line"><span class="bullet">*</span>   星号</span><br><span class="line"><span class="emphasis">_   下划线</span></span><br><span class="line"><span class="emphasis">&#123;&#125;  花括号</span></span><br><span class="line"><span class="emphasis">[]  方括号</span></span><br><span class="line"><span class="emphasis">()  小括号</span></span><br><span class="line"><span class="emphasis">#   井字号</span></span><br><span class="line"><span class="emphasis">+   加号</span></span><br><span class="line"><span class="emphasis">-   减号</span></span><br><span class="line"><span class="emphasis">.   英文句点</span></span><br><span class="line"><span class="emphasis">!   感叹号</span></span><br></pre></td></tr></table></figure><h3 id="扩展"><a class="markdownIt-Anchor" href="#扩展"></a> 扩展</h3><p>支持 <strong>jsfiddle、gist、runjs、优酷视频</strong>，直接填写 url，在其之后会自动添加预览点击会展开相关内容。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://&#123;url<span class="emphasis">_of_</span>the<span class="emphasis">_fiddle&#125;/embedded/[&#123;tabs&#125;/[&#123;style&#125;]]</span></span><br><span class="line"><span class="emphasis">https://gist.github.com/&#123;gist_</span>id&#125;</span><br><span class="line">http://runjs.cn/detail/&#123;id&#125;</span><br><span class="line">http://v.youku.com/v<span class="emphasis">_show/id_</span>&#123;video<span class="emphasis">_id&#125;.html</span></span><br></pre></td></tr></table></figure><h3 id="公式"><a class="markdownIt-Anchor" href="#公式"></a> 公式</h3><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;<span class="emphasis">_1 \times \mathbf&#123;V&#125;_</span>2 =  \begin&#123;vmatrix&#125; </span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$$tep1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>同时也支持 HTML 属性，如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$$ (x+1)^2 = \class&#123;hidden&#125;&#123;(x+1)(x+1)&#125; $$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">(x+1)^2 = \cssId&#123;step1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h2 id="typora-画流程图-时序图顺序图-甘特图"><a class="markdownIt-Anchor" href="#typora-画流程图-时序图顺序图-甘特图"></a> typora 画流程图、时序图(顺序图)、甘特图</h2><p><strong>1、横向流程图源码格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph LR</span></span><br><span class="line"><span class="code">A[方形] --&gt;B(圆角)</span></span><br><span class="line"><span class="code">    B --&gt; C&#123;条件a&#125;</span></span><br><span class="line"><span class="code">    C --&gt;|a=1| D[结果1]</span></span><br><span class="line"><span class="code">    C --&gt;|a=2| E[结果2]</span></span><br><span class="line"><span class="code">    F[横向流程图]</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p><strong>2、竖向流程图源码格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph TD</span></span><br><span class="line"><span class="code">A[方形] --&gt; B(圆角)</span></span><br><span class="line"><span class="code">    B --&gt; C&#123;条件a&#125;</span></span><br><span class="line"><span class="code">    C --&gt; |a=1| D[结果1]</span></span><br><span class="line"><span class="code">    C --&gt; |a=2| E[结果2]</span></span><br><span class="line"><span class="code">    F[竖向流程图]</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p><strong>3、标准流程图源码格式：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```flow</span></span><br><span class="line"><span class="code">st=&gt;start: 开始框</span></span><br><span class="line"><span class="code">op=&gt;operation: 处理框</span></span><br><span class="line"><span class="code">cond=&gt;condition: 判断框(是或否?)</span></span><br><span class="line"><span class="code">sub1=&gt;subroutine: 子流程</span></span><br><span class="line"><span class="code">io=&gt;inputoutput: 输入输出框</span></span><br><span class="line"><span class="code">e=&gt;end: 结束框</span></span><br><span class="line"><span class="code">st-&gt;op-&gt;cond</span></span><br><span class="line"><span class="code">cond(yes)-&gt;io-&gt;e</span></span><br><span class="line"><span class="code">cond(no)-&gt;sub1(right)-&gt;op</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p><strong>4、标准流程图源码格式（横向）：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```flow</span></span><br><span class="line"><span class="code">st=&gt;start: 开始框</span></span><br><span class="line"><span class="code">op=&gt;operation: 处理框</span></span><br><span class="line"><span class="code">cond=&gt;condition: 判断框(是或否?)</span></span><br><span class="line"><span class="code">sub1=&gt;subroutine: 子流程</span></span><br><span class="line"><span class="code">io=&gt;inputoutput: 输入输出框</span></span><br><span class="line"><span class="code">e=&gt;end: 结束框</span></span><br><span class="line"><span class="code">st(right)-&gt;op(right)-&gt;cond</span></span><br><span class="line"><span class="code">cond(yes)-&gt;io(bottom)-&gt;e</span></span><br><span class="line"><span class="code">cond(no)-&gt;sub1(right)-&gt;op</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p><strong>5、UML时序图源码样例：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```sequence</span></span><br><span class="line"><span class="code">对象A-&gt;对象B: 对象B你好吗?（请求）</span></span><br><span class="line"><span class="code">Note right of 对象B: 对象B的描述</span></span><br><span class="line"><span class="code">Note left of 对象A: 对象A的描述(提示)</span></span><br><span class="line"><span class="code">对象B--&gt;对象A: 我很好(响应)</span></span><br><span class="line"><span class="code">对象A-&gt;对象B: 你真的好吗？</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p><strong>6、UML时序图源码复杂样例：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```sequence</span></span><br><span class="line"><span class="code">Title: 标题：复杂使用</span></span><br><span class="line"><span class="code">对象A-&gt;对象B: 对象B你好吗?（请求）</span></span><br><span class="line"><span class="code">Note right of 对象B: 对象B的描述</span></span><br><span class="line"><span class="code">Note left of 对象A: 对象A的描述(提示)</span></span><br><span class="line"><span class="code">对象B--&gt;对象A: 我很好(响应)</span></span><br><span class="line"><span class="code">对象B-&gt;小三: 你好吗</span></span><br><span class="line"><span class="code">小三--&gt;&gt;对象A: 对象B找我了</span></span><br><span class="line"><span class="code">对象A-&gt;对象B: 你真的好吗？</span></span><br><span class="line"><span class="code">Note over 小三,对象B: 我们是朋友</span></span><br><span class="line"><span class="code">participant C</span></span><br><span class="line"><span class="code">Note right of C: 没人陪我玩</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p><strong>7、UML标准时序图样例：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span></span><br><span class="line"><span class="code">  sequenceDiagram</span></span><br><span class="line"><span class="code">    participant 张三</span></span><br><span class="line"><span class="code">    participant 李四</span></span><br><span class="line"><span class="code">    张三-&gt;王五: 王五你好吗？</span></span><br><span class="line"><span class="code">    loop 健康检查</span></span><br><span class="line"><span class="code">        王五-&gt;王五: 与疾病战斗</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span></span><br><span class="line"><span class="code">    李四--&gt;&gt;张三: 很好!</span></span><br><span class="line"><span class="code">    王五-&gt;李四: 你怎么样?</span></span><br><span class="line"><span class="code">    李四--&gt;王五: 很好!</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p><strong>8、甘特图样例：</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">%% 语法示例</span></span><br><span class="line"><span class="code">        gantt</span></span><br><span class="line"><span class="code">        dateFormat  YYYY-MM-DD</span></span><br><span class="line"><span class="code">        title 软件开发甘特图</span></span><br><span class="line"><span class="code">        section 设计</span></span><br><span class="line"><span class="code">        需求                      :done,    des1, 2014-01-06,2014-01-08</span></span><br><span class="line"><span class="code">        原型                      :active,  des2, 2014-01-09, 3d</span></span><br><span class="line"><span class="code">        UI设计                     :         des3, after des2, 5d</span></span><br><span class="line"><span class="code">    未来任务                     :         des4, after des3, 5d</span></span><br><span class="line"><span class="code">        section 开发</span></span><br><span class="line"><span class="code">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span></span><br><span class="line"><span class="code">        设计框架                             :crit, done, after des2, 2d</span></span><br><span class="line"><span class="code">        开发                                 :crit, active, 3d</span></span><br><span class="line"><span class="code">        未来任务                              :crit, 5d</span></span><br><span class="line"><span class="code">        耍                                   :2d</span></span><br><span class="line"><span class="code">        section 测试</span></span><br><span class="line"><span class="code">        功能测试                              :active, a1, after des3, 3d</span></span><br><span class="line"><span class="code">        压力测试                               :after a1  , 20h</span></span><br><span class="line"><span class="code">        测试报告                               : 48h</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p><img src="/skydream/c86e/md-flow.png" style="zoom:50%;"></p><p>流程图来源<a href="https://www.runoob.com/note/47651">➡链接</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
